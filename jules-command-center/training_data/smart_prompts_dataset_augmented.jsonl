{"bad_prompt": "fix the header", "good_prompt": "### Bug Fix: Resolve Header Layout Issue on Mobile Devices\n\n**Bug Description:**\nThe main site header is not rendering correctly on mobile screen sizes (below 600px). The logo overlaps the navigation links, making them unclickable.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device or in a browser with the viewport width set to less than 600px.\n2. Observe the main header at the top of the page.\n\n**Expected Behavior:**\nThe header elements should be aligned properly, with no overlap. A hamburger menu should be visible to toggle the navigation links.\n\n**Actual Behavior:**\nThe logo and navigation links are overlapping."}
{"bad_prompt": "add a button", "good_prompt": "### New Feature Request: Add 'Export to CSV' Button to a User Dashboard\n\n**User Story:**\nAs a user, I want to be able to export my data table as a CSV file so that I can perform my own analysis in other tools.\n\n**Feature Description:**\nImplement a new button labeled 'Export to CSV' on the main user dashboard. When clicked, this button should generate a CSV file of the data currently displayed in the main table and initiate a download for the user.\n\n**Acceptance Criteria:**\n- A button with the text 'Export to CSV' is present on the user dashboard.\n- Clicking the button triggers a CSV download.\n- The downloaded CSV file contains all the data from the table, including correct headers."}
{"bad_prompt": "it's broken", "good_prompt": "### Bug Fix: API Endpoint `api/users/{id}` Throws a 500 Error\n\n**Bug Description:**\nThe API endpoint responsible for fetching a single user's data is consistently returning a 500 Internal Server Error when a valid user ID is provided.\n\n**Steps to Reproduce:**\n1. Send a GET request to the endpoint `/api/users/123` (where 123 is a valid user ID).\n2. Observe the HTTP response code.\n\n**Expected Behavior:**\nThe API should return a 200 OK status code with the user's data in the response body.\n\n**Actual Behavior:**\nThe API returns a 500 Internal Server Error."}
{"bad_prompt": "change the colors", "good_prompt": "### UI Improvement: Update Site Color Palette to Match New Branding Guidelines\n\n**Objective:**\nUpdate the website's color scheme to align with the new branding guidelines provided by the design team.\n\n**Acceptance Criteria:**\n- The primary color used for buttons and links should be changed from the old blue (`#007bff`) to the new brand purple (`#6f42c1`).\n- The background color of the header and footer should be updated to the new dark grey (`#343a40`).\n- All text colors should be checked for accessibility and contrast against the new background colors.\n\n**Additional Context:**\nThe new branding guidelines can be found here: [Link to Figma/Style Guide]"}
{"bad_prompt": "the form doesn't work", "good_prompt": "### Bug Fix: The Contact Form Submission Fails with a Network Error\n\n**Bug Description:**\nWhen a user fills out and submits the contact form on the `/contact` page, the submission fails, and a 'Network Error' message is displayed to the user.\n\n**Steps to Reproduce:**\n1. Go to the `/contact` page.\n2. Fill in all the required fields (Name, Email, Message).\n3. Click the 'Submit' button.\n4. Observe the error message that appears below the form.\n\n**Expected Behavior:**\nThe form should submit successfully, and a 'Thank you for your message!' confirmation should be displayed.\n\n**Actual Behavior:**\nThe form submission fails, and a red 'Network Error' message is shown."}
{"bad_prompt": "need a search bar", "good_prompt": "### New Feature Request: Implement a Global Search Bar in the Header\n\n**User Story:**\nAs a user, I want a search bar that is always accessible in the header so that I can easily find articles from anywhere on the site.\n\n**Feature Description:**\nAdd a search input field to the right side of the main navigation header. This search bar should allow users to type a query and press Enter or click a search icon to navigate to a search results page.\n\n**Acceptance Criteria:**\n- A search input field and a search icon are visible in the site header.\n- Entering text and pressing Enter redirects the user to `/search?q=<query>`.\n- The search bar is responsive and displays correctly on all screen sizes."}
{"bad_prompt": "images are slow", "good_prompt": "### Performance: Optimize Image Loading on the Homepage\n\n**Objective:**\nImprove the loading performance of the homepage by optimizing the images in the main hero section.\n\n**Acceptance Criteria:**\n- All JPEG and PNG images in the hero section should be compressed to reduce their file size by at least 50% without a significant loss in quality.\n- Images should be served in a next-gen format like WebP to browsers that support it.\n- Images should be lazy-loaded to prevent them from blocking the initial page render.\n\n**Additional Context:**\nThis task is critical for improving our Core Web Vitals score, specifically the Largest Contentful Paint (LCP)."}
{"bad_prompt": "the login is not secure", "good_prompt": "### Security: Implement Two-Factor Authentication (2FA) for User Login\n\n**User Story:**\nAs a security-conscious user, I want to enable Two-Factor Authentication for my account to prevent unauthorized access.\n\n**Feature Description:**\nIntegrate a 2FA system into the user authentication flow. Users should be able to enable 2FA in their account settings, which will require them to provide a one-time password (OTP) from an authenticator app (like Google Authenticator) upon login.\n\n**Acceptance Criteria:**\n- Users have a new 'Security' section in their account settings.\n- In the 'Security' section, users can enable 2FA by scanning a QR code.\n- When 2FA is enabled, the login page will require a second step to enter the OTP."}
{"bad_prompt": "the text is too small", "good_prompt": "### Accessibility: Increase the Base Font Size for Better Readability\n\n**Objective:**\nImprove the accessibility and readability of the website's content by increasing the base font size.\n\n**Acceptance Criteria:**\n- The base font size for all body text (paragraphs, lists, etc.) should be increased from 14px to 16px.\n- All headings (H1, H2, H3, etc.) should be adjusted proportionally to maintain the visual hierarchy.\n- The line height should be adjusted to 1.5 to ensure comfortable reading with the new font size.\n\n**Additional Context:**\nThis change should be implemented in the global CSS file to ensure it applies sitewide."}
{"bad_prompt": "add analytics", "good_prompt": "### New Feature Request: Integrate Plausible Analytics into the Website\n\n**Objective:**\nIntegrate the Plausible Analytics script into the website to track user traffic and engagement.\n\n**Feature Description:**\nAdd the Plausible Analytics tracking script to the `<head>` section of all pages on the website. The tracking script should be loaded asynchronously to avoid impacting page performance.\n\n**Acceptance Criteria:**\n- The Plausible script is present on all pages.\n- Page views are being correctly reported in our Plausible Analytics dashboard.\n- The script does not cause any console errors.\n\n**Additional Context:**\nThe tracking script and data-domain can be found in our company's shared password manager under 'Plausible Analytics'."}
{"bad_prompt": "update the dependencies", "good_prompt": "### Chore: Update Outdated NPM Dependencies\n\n**Objective:**\nUpdate all outdated NPM dependencies to their latest stable versions to ensure the project is secure and up-to-date.\n\n**Acceptance Criteria:**\n- Run `npm outdated` to identify all outdated packages.\n- Update each package to its latest major or minor version as appropriate in the `package.json` file.\n- Run `npm install` to update the `package-lock.json` file.\n- After updating, run the test suite (`npm test`) to ensure that the updates have not introduced any breaking changes.\n- Manually test the core application flows (login, form submission) to verify functionality."}
{"bad_prompt": "the tests are failing", "good_prompt": "### Bug Fix: Resolve Failing Unit Tests in the CI Pipeline\n\n**Bug Description:**\nThe unit tests are currently failing in the Continuous Integration (CI) pipeline, which is preventing new changes from being merged. The failure appears to be in the `test_user_model.py` file.\n\n**Steps to Reproduce:**\n1. Push a new commit to any branch.\n2. Observe the CI pipeline status in GitHub Actions.\n3. See the failure in the 'Run Tests' step.\n\n**Expected Behavior:**\nAll unit tests should pass, and the CI pipeline should be green.\n\n**Actual Behavior:**\nThe 'Run Tests' step fails with an error related to a mock object in `test_user_model.py`.\n\n**Additional Context:**\nThe failure started after the `auth-library` dependency was updated. The logs from the CI run can be found here: [Link to CI logs]"}
{"bad_prompt": "make the site faster", "good_prompt": "### Performance: Implement Server-Side Caching for API Responses\n\n**Objective:**\nImprove the response time of the API by implementing a caching layer for frequently accessed, non-dynamic data.\n\n**Feature Description:**\nImplement a caching strategy (e.g., using Redis) for the `/api/products` endpoint. The data from this endpoint is the same for all users and only updates once per day. The cache should store the JSON response for this endpoint.\n\n**Acceptance Criteria:**\n- When the `/api/products` endpoint is called for the first time, it should fetch data from the database and store the result in the Redis cache with a 24-hour expiration.\n- Subsequent calls to the endpoint within 24 hours should return the cached data directly, without hitting the database.\n- The average response time for the endpoint should be reduced by at least 80% for cached responses."}
{"bad_prompt": "the user profile page is ugly", "good_prompt": "### UI Redesign: Overhaul the User Profile Page\n\n**Objective:**\nRedesign the user profile page to have a modern, clean, and user-friendly interface based on the new mockups from the design team.\n\n**Feature Description:**\nImplement the new design for the `/profile` page. This includes updating the layout to a two-column grid, replacing the old form elements with new, styled components, and adding a new section for 'Account Settings'.\n\n**Acceptance Criteria:**\n- The layout of the profile page matches the new two-column design in Figma.\n- All form fields (username, email, etc.) are replaced with the new, styled input components.\n- The new 'Account Settings' section is present and includes a button for 'Change Password'.\n- The page is fully responsive and looks correct on mobile, tablet, and desktop.\n\n**Additional Context:**\nThe Figma mockups for the new design can be found here: [Link to Figma]"}
{"bad_prompt": "add a dark mode", "good_prompt": "### New Feature Request: Implement a Dark Mode Theme\n\n**User Story:**\nAs a user who often works at night, I want to be able to switch the website to a dark mode theme to reduce eye strain.\n\n**Feature Description:**\nImplement a dark mode theme for the entire website. A toggle switch should be added to the header that allows users to switch between the default (light) and dark themes. The user's preference should be saved in `localStorage` so that it persists across sessions.\n\n**Acceptance Criteria:**\n- A theme toggle switch is present in the header.\n- Clicking the toggle switches the site's color scheme between light and dark modes.\n- All components (buttons, forms, text, backgrounds) have appropriate styles for both themes.\n- The user's selected theme is remembered when they revisit the site."}
{"bad_prompt": "the deployment script is broken", "good_prompt": "### Bug Fix: The Production Deployment Script Fails During the Build Step\n\n**Bug Description:**\nThe production deployment script (`deploy.sh`) is failing with an error during the `npm run build` step. This is preventing us from deploying new updates to production.\n\n**Steps to Reproduce:**\n1. Run the deployment script locally: `./deploy.sh`\n2. Observe the output during the 'Building application...' step.\n\n**Expected Behavior:**\nThe `npm run build` command should complete successfully, and the script should proceed to the deployment step.\n\n**Actual Behavior:**\nThe script exits with a non-zero status code after an 'out of memory' error during the build process.\n\n**Additional Context:**\nThis issue started after we added the new data visualization library. We may need to increase the memory available to the Node.js process during the build."}
{"bad_prompt": "the email notifications are not working", "good_prompt": "### Bug Fix: Email Notifications Are Not Being Sent for New User Registrations\n\n**Bug Description:**\nThe system is not sending the 'Welcome' email notification when a new user registers for an account.\n\n**Steps to Reproduce:**\n1. Create a new user account through the registration page.\n2. Check the email inbox for the address used to register.\n3. Check the logs for the email sending service (e.g., SendGrid).\n\n**Expected Behavior:**\nA 'Welcome' email should be sent to the new user's email address immediately after registration.\n\n**Actual Behavior:**\nNo email is sent. The email service logs show that no API call is being made from our application for new registrations."}
{"bad_prompt": "i need to be able to delete my account", "good_prompt": "### New Feature Request: Add Account Deletion Functionality\n\n**User Story:**\nAs a user, I want to be able to permanently delete my account and all my data from the platform.\n\n**Feature Description:**\nAdd a 'Delete Account' button in the 'Account Settings' section of the user profile page. When clicked, this button should open a confirmation modal that warns the user that the action is irreversible. If the user confirms, the system should permanently delete the user's account and all associated data from the database.\n\n**Acceptance Criteria:**\n- A 'Delete Account' button is present in the user's settings.\n- Clicking the button shows a confirmation modal with a clear warning.\n- Confirming the deletion permanently removes the user's data.\n- The user is logged out and redirected to the homepage after deletion."}
{"bad_prompt": "the site crashes on IE11", "good_prompt": "### Bug Fix: The Application Crashes on Internet Explorer 11\n\n**Bug Description:**\nThe entire application fails to load and crashes on Internet Explorer 11. The console shows a JavaScript error related to an unsupported ES6 feature.\n\n**Steps to Reproduce:**\n1. Open the website in an Internet Explorer 11 browser.\n2. Observe the blank page and the JavaScript error in the developer console.\n\n**Expected Behavior:**\nThe website should render correctly and be functional on Internet Explorer 11, even if with limited styling.\n\n**Actual Behavior:**\nThe page is blank, and a syntax error is thrown because of an unsupported feature (e.g., arrow functions, const/let).\n\n**Additional Context:**\nWe need to add a polyfill service or update our build process to transpile the JavaScript code to be compatible with IE11."}
{"bad_prompt": "add a 404 page", "good_prompt": "### New Feature Request: Create a Custom 404 'Not Found' Page\n\n**Objective:**\nCreate a custom, user-friendly 404 'Not Found' page to improve the user experience when they navigate to a non-existent URL.\n\n**Feature Description:**\nDesign and implement a custom 404 page that replaces the default server/browser error. The page should have a friendly message, an illustration or graphic, and a clear link or button to return to the homepage.\n\n**Acceptance Criteria:**\n- Navigating to a URL that does not exist (e.g., `/a-fake-page`) displays the new custom 404 page.\n- The page includes a helpful message like 'Page Not Found'.\n- The page includes a prominent link or button that takes the user back to the homepage."}
{"bad_prompt": "the api is slow", "good_prompt": "### Performance: Optimize the `/api/dashboard` Endpoint\n\n**Objective:**\nImprove the performance of the main dashboard API endpoint, which is currently taking over 2 seconds to load.\n\n**Bug Description:**\nThe GET request to `/api/dashboard` is very slow because it performs multiple, inefficient database queries to aggregate data.\n\n**Acceptance Criteria:**\n- Refactor the database queries in the `/api/dashboard` endpoint to be more efficient, for example, by using joins or a single, more complex query instead of multiple simple ones.\n- The average response time for the endpoint should be reduced to under 500ms.\n\n**Additional Context:**\nAn analysis of the queries shows that the main bottleneck is a loop that makes a separate database call for each user. This should be refactored into a single query."}
{"bad_prompt": "the table sorting is broken", "good_prompt": "### Bug Fix: Table Column Sorting Does Not Work Correctly for Dates\n\n**Bug Description:**\nWhen a user clicks on the header of the 'Date Created' column in the main data table, the sorting is incorrect. It appears to be sorting the dates alphabetically instead of chronologically.\n\n**Steps to Reproduce:**\n1. Go to the dashboard page.\n2. Click on the 'Date Created' column header to sort the table.\n3. Observe the order of the rows.\n\n**Expected Behavior:**\nThe table should be sorted chronologically by the 'Date Created' column, either ascending or descending.\n\n**Actual Behavior:**\nThe table is sorted alphabetically by the date string (e.g., 'April', 'August', 'December')."}
{"bad_prompt": "i forgot my password", "good_prompt": "### New Feature Request: Implement a 'Forgot Password' Flow\n\n**User Story:**\nAs a user who has forgotten my password, I want to be able to reset it securely so that I can regain access to my account.\n\n**Feature Description:**\nImplement a 'Forgot Password' flow. This should include:\n1. A 'Forgot Password?' link on the login page.\n2. A page where the user can enter their email address to request a password reset.\n3. An email sent to the user with a secure, time-limited link to a password reset page.\n4. A page where the user can enter and confirm their new password.\n\n**Acceptance Criteria:**\n- The 'Forgot Password?' link exists and works.\n- The system correctly sends a password reset email with a unique token.\n- The user can successfully set a new password using the link in the email.\n- The old password is no longer valid after the reset."}
{"bad_prompt": "the docker build fails", "good_prompt": "### Bug Fix: The Docker build is failing\n\n**Bug Description:**\nThe `docker build` command is failing when trying to build the image for our application. The error message indicates that a file specified in the `COPY` command in the `Dockerfile` cannot be found.\n\n**Steps to Reproduce:**\n1. Run `docker build -t my-app .` in the root of the project.\n2. Observe the error message during the build process.\n\n**Expected Behavior:**\nThe Docker image should build successfully without any errors.\n\n**Actual Behavior:**\nThe build fails with an error like `COPY failed: stat /var/lib/docker/tmp/docker-builder12345/src/app/package.json: no such file or directory`.\n\n**Additional Context:**\nThis seems to be an issue with the file path in the `COPY` command in the `Dockerfile`. It likely needs to be adjusted to match the project's directory structure."}
{"bad_prompt": "the dropdown is not working on mobile", "good_prompt": "### Bug Fix: The Main Navigation Dropdown Menu is Not Clickable on Mobile\n\n**Bug Description:**\nThe dropdown menu in the main navigation bar cannot be opened on mobile devices (touch screens). Tapping on the menu item does nothing.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device or a browser in mobile emulation mode.\n2. Tap on the 'Services' navigation item, which is supposed to have a dropdown menu.\n\n**Expected Behavior:**\nA dropdown menu should appear, showing the sub-pages.\n\n**Actual Behavior:**\nNothing happens when the navigation item is tapped."}
{"bad_prompt": "i need to be able to upload a profile picture", "good_prompt": "### New Feature Request: Allow Users to Upload a Profile Picture\n\n**User Story:**\nAs a user, I want to be able to upload a profile picture so that I can personalize my account.\n\n**Feature Description:**\nAdd a feature that allows users to upload a profile picture. This should include:\n1. An image upload component on the user profile page.\n2. The ability to crop the uploaded image.\n3. The uploaded image should be stored securely (e.g., in an S3 bucket).\n4. The user's profile picture should be displayed in the header and on their profile page.\n\n**Acceptance Criteria:**\n- Users can select and upload a JPG or PNG image.\n- The uploaded image is displayed on their profile page.\n- The user's avatar in the header is updated with the new picture."}
{"bad_prompt": "the pagination is not working", "good_prompt": "### Bug Fix: Pagination on the Blog Page is Broken\n\n**Bug Description:**\nWhen a user clicks on the 'Next Page' or a page number link in the pagination control on the blog page, it does not navigate to the correct set of posts. It appears to be reloading the same first page of posts.\n\n**Steps to Reproduce:**\n1. Go to the `/blog` page.\n2. Scroll down to the bottom to find the pagination control.\n3. Click on page '2' or the 'Next Page' link.\n\n**Expected Behavior:**\nThe page should display the next set of blog posts (e.g., posts 11-20).\n\n**Actual Behavior:**\nThe page reloads but still shows the first set of posts (posts 1-10)."}
{"bad_prompt": "the search is not working", "good_prompt": "### Bug Fix: Search Functionality Returns an Empty Result for Valid Queries\n\n**Bug Description:**\nThe search functionality on the `/search` page is not returning any results, even for queries that should match existing content. It always displays a 'No results found' message.\n\n**Steps to Reproduce:**\n1. Go to the `/search` page.\n2. Enter a valid search term that is known to be in the content (e.g., 'performance').\n3. Click the 'Search' button.\n\n**Expected Behavior:**\nThe page should display a list of search results that match the query.\n\n**Actual Behavior:**\nThe page displays the 'No results found' message."}
{"bad_prompt": "the site is not responsive", "good_prompt": "### Bug Fix: The Pricing Page Layout Breaks on Tablet Screen Sizes\n\n**Bug Description:**\nThe layout of the pricing page does not adapt correctly to tablet screen sizes (between 768px and 1024px wide). The pricing cards overlap, and the text becomes unreadable.\n\n**Steps to Reproduce:**\n1. Open the `/pricing` page in a browser.\n2. Resize the browser window to a width between 768px and 1024px.\n3. Observe the layout of the pricing cards.\n\n**Expected Behavior:**\nThe pricing cards should stack vertically or be arranged in a clean grid that fits the screen size without overlapping.\n\n**Actual Behavior:**\nThe cards overlap, and the content is unreadable."}
{"bad_prompt": "add a sitemap", "good_prompt": "### SEO: Generate a `sitemap.xml` File\n\n**Objective:**\nImprove the site's SEO by generating a `sitemap.xml` file that helps search engines discover and index all the pages on our website.\n\n**Feature Description:**\nCreate a script that automatically generates a `sitemap.xml` file. This script should be run as part of our build process. The sitemap should include the URLs for all static pages (e.g., homepage, about, contact) and all dynamic pages (e.g., blog posts, product pages).\n\n**Acceptance Criteria:**\n- A `sitemap.xml` file is generated in the root of the public directory after the build process.\n- The sitemap is correctly formatted XML.\n- The sitemap includes all public pages of the website."}
{"bad_prompt": "the checkout process is confusing", "good_prompt": "### UX Improvement: Simplify the Checkout Process\n\n**Objective:**\nImprove the user experience of the checkout process to reduce friction and increase conversion rates.\n\n**Feature Description:**\nRedesign the checkout flow from a multi-page process to a single-page checkout. All the necessary fields (shipping address, billing address, payment information) should be on a single page. The user's progress should be clearly indicated.\n\n**Acceptance Criteria:**\n- The entire checkout process is contained within a single `/checkout` page.\n- The user can enter their shipping, billing, and payment information without navigating to different pages.\n- The design matches the new single-page checkout mockups from the design team.\n\n**Additional Context:**\nFigma mockups: [Link to Figma]"}
{"bad_prompt": "the login with google is broken", "good_prompt": "### Bug Fix: 'Login with Google' OAuth Flow Fails with a Redirect URI Mismatch Error\n\n**Bug Description:**\nWhen a user tries to log in using the 'Login with Google' button, the OAuth flow fails, and the user is redirected to an error page from Google that says 'redirect_uri_mismatch'.\n\n**Steps to Reproduce:**\n1. Go to the login page.\n2. Click the 'Login with Google' button.\n3. Observe the error page from Google.\n\n**Expected Behavior:**\nThe user should be successfully authenticated with their Google account and redirected back to the application's dashboard.\n\n**Actual Behavior:**\nThe authentication fails with a 'redirect_uri_mismatch' error.\n\n**Additional Context:**\nThis usually means that the redirect URI configured in our Google Cloud Console for the OAuth client does not match the one our application is sending. We need to verify the URIs in the Google Cloud Console."}
{"bad_prompt": "i need to be able to filter the products", "good_prompt": "### New Feature Request: Add Filtering to the Products Page\n\n**User Story:**\nAs a user, I want to be able to filter the products by category and price so that I can find what I'm looking for more easily.\n\n**Feature Description:**\nAdd a filtering sidebar to the products page. This sidebar should contain:\n1. A list of product categories (as checkboxes).\n2. A price range slider.\nWhen a user applies a filter, the list of products on the page should update to show only the products that match the selected criteria.\n\n**Acceptance Criteria:**\n- A filtering sidebar is present on the products page.\n- Users can filter products by selecting one or more categories.\n- Users can filter products by adjusting the price range slider.\n- The product list updates in real-time as the filters are changed."}
{"bad_prompt": "the site is not secure (no https)", "good_prompt": "### Security: Enforce HTTPS on the Production Site\n\n**Objective:**\nEnsure that all traffic to our production website is served over HTTPS to protect user data and improve security.\n\n**Feature Description:**\nConfigure the production web server (e.g., Nginx, Vercel) to automatically redirect all HTTP requests to HTTPS. Additionally, ensure that the appropriate HSTS (HTTP Strict Transport Security) headers are set to prevent protocol downgrade attacks.\n\n**Acceptance Criteria:**\n- Accessing `http://www.our-site.com` automatically redirects to `https://www.our-site.com`.\n- The site's SSL certificate is valid and correctly installed.\n- The HSTS header is present in the response headers."}
{"bad_prompt": "the user data export is not working", "good_prompt": "### Bug Fix: The User Data Export Feature is Timing Out\n\n**Bug Description:**\nWhen a user requests to export their data, the process times out and fails for users with a large amount of data. The server returns a 504 Gateway Timeout error.\n\n**Steps to Reproduce:**\n1. Log in as a user with a large amount of data (e.g., user ID 456).\n2. Go to the 'Export Data' page in the account settings.\n3. Click the 'Export My Data' button.\n\n**Expected Behavior:**\nThe system should generate a data export file and provide a download link to the user, even for large accounts.\n\n**Actual Behavior:**\nThe request hangs for a long time and then fails with a 504 error.\n\n**Additional Context:**\nThe data export process is currently running as a synchronous web request. This should be refactored into an asynchronous background job. The user should be notified (e.g., by email) when their export is ready for download."}
{"bad_prompt": "i need to see my order history", "good_prompt": "### New Feature Request: Create an Order History Page\n\n**User Story:**\nAs a customer, I want to be able to see a list of my past orders so that I can track my purchases.\n\n**Feature Description:**\nCreate a new 'Order History' page that is accessible from the user's account dashboard. This page should display a list of all the orders the user has placed. Each item in the list should show the order date, the total amount, the order status, and a link to view the order details.\n\n**Acceptance Criteria:**\n- A new 'Order History' page is created at `/account/orders`.\n- The page displays a list of the logged-in user's past orders.\n- Each order in the list displays the date, total, and status.\n- Clicking on an order takes the user to a detailed order view page."}
{"bad_prompt": "the blog comments are not working", "good_prompt": "### Bug Fix: Submitting a Comment on a Blog Post Fails\n\n**Bug Description:**\nWhen a user tries to submit a comment on a blog post, the submission fails with a client-side JavaScript error. The error message in the console is `Uncaught TypeError: Cannot read properties of null (reading 'value')`.\n\n**Steps to Reproduce:**\n1. Go to any blog post page.\n2. Type a comment in the comment form.\n3. Click the 'Submit Comment' button.\n4. Observe the error in the browser's developer console.\n\n**Expected Behavior:**\nThe comment should be submitted successfully and appear on the page.\n\n**Actual Behavior:**\nThe submission fails, and a JavaScript error is thrown."}
{"bad_prompt": "add a 'save for later' feature", "good_prompt": "### New Feature Request: Implement a 'Save for Later' Feature in the Shopping Cart\n\n**User Story:**\nAs a shopper, I want to be able to move items from my shopping cart to a 'Save for Later' list so that I can purchase them at a later time without losing them.\n\n**Feature Description:**\nAdd a 'Save for Later' button to each item in the shopping cart. When a user clicks this button, the item should be removed from the cart and added to a new 'Saved for Later' section on the same page. The user should also be able to move items from the 'Saved for Later' list back to the cart.\n\n**Acceptance Criteria:**\n- Each item in the cart has a 'Save for Later' button.\n- Clicking the button moves the item to the 'Saved for Later' list.\n- The 'Saved for Later' list has a 'Move to Cart' button for each item."}
{"bad_prompt": "the dates are in the wrong format", "good_prompt": "### Bug Fix: Dates Are Displayed in the Wrong Format\n\n**Bug Description:**\nThroughout the application, dates are being displayed in the `YYYY-MM-DD` format (e.g., '2023-10-27'). The requirement is to display them in a more user-friendly format, `Month Day, Year` (e.g., 'October 27, 2023').\n\n**Acceptance Criteria:**\n- All user-facing dates (e.g., blog post dates, order dates, comment dates) should be displayed in the `Month Day, Year` format.\n- This should be implemented by creating a reusable date formatting utility function to ensure consistency.\n- The change should be applied to all relevant components."}
{"bad_prompt": "the search results page is ugly", "good_prompt": "### UI Improvement: Redesign the Search Results Page\n\n**Objective:**\nImprove the design and usability of the search results page to provide a better user experience.\n\n**Feature Description:**\nRedesign the `/search` page based on the new mockups. The new design should include:\n1. A cleaner layout for each search result item, with a clear title, a short snippet of the content, and the URL.\n2. Highlighting the user's search query within the search results.\n3. A more prominent display of the total number of results found.\n\n**Acceptance Criteria:**\n- The layout of the search results page matches the new design in Figma.\n- The user's search term is highlighted in the titles and snippets of the results.\n- The total number of results is displayed clearly at the top of the page.\n\n**Additional Context:**\nFigma mockups: [Link to Figma]"}
{"bad_prompt": "i need to be able to share blog posts on social media", "good_prompt": "### New Feature Request: Add Social Media Sharing Buttons to Blog Posts\n\n**User Story:**\nAs a reader, I want to be able to easily share a blog post on social media so that I can share it with my friends and followers.\n\n**Feature Description:**\nAdd social media sharing buttons to each blog post page. The buttons should allow users to share the post on Twitter, Facebook, and LinkedIn. The sharing action should pre-fill the post with the blog post's title and a link to the page.\n\n**Acceptance Criteria:**\n- Sharing buttons for Twitter, Facebook, and LinkedIn are present on each blog post page.\n- Clicking the Twitter button opens a new window with a pre-filled tweet containing the post title and URL.\n- Clicking the Facebook button opens a new window to share the URL.\n- Clicking the LinkedIn button opens a new window to share the URL."}
{"bad_prompt": "the site is not accessible", "good_prompt": "### Accessibility: Ensure All Images Have Alt Text\n\n**Objective:**\nImprove the accessibility of the website by ensuring that all `<img>` tags have descriptive `alt` attributes. This is crucial for users who use screen readers.\n\n**Acceptance Criteria:**\n- Perform a site-wide audit to identify all `<img>` tags that are missing an `alt` attribute or have a non-descriptive one (e.g., `alt=\"image\"`).\n- For each image, add a descriptive `alt` attribute that accurately describes the content of the image.\n- For purely decorative images, use an empty `alt` attribute (`alt=\"\"`).\n- Run an accessibility checker tool (like WAVE or Axe) to verify that all images have appropriate alt text."}
{"bad_prompt": "the rss feed is broken", "good_prompt": "### Bug Fix: The RSS Feed is Not Valid XML\n\n**Bug Description:**\nThe RSS feed at `/rss.xml` is not working correctly because it is not generating valid XML. When trying to use the feed with an RSS reader, it fails with a parsing error.\n\n**Steps to Reproduce:**\n1. Go to `/rss.xml` in a browser or use a validator tool.\n2. Observe the XML parsing error.\n\n**Expected Behavior:**\nThe `/rss.xml` endpoint should return a valid RSS feed in the correct XML format.\n\n**Actual Behavior:**\nThe feed is malformed, likely due to unescaped characters in the content or an incorrect structure."}
{"bad_prompt": "i need to be able to leave a review for a product", "good_prompt": "### New Feature Request: Implement Product Reviews\n\n**User Story:**\nAs a customer who has purchased a product, I want to be able to leave a review and a star rating so that I can share my feedback with other potential buyers.\n\n**Feature Description:**\nAdd a product review system. This should include:\n1. A form on each product page that allows verified purchasers to write a review and give a star rating (1-5).\n2. A section on the product page that displays all the reviews for that product, including the average star rating.\n\n**Acceptance Criteria:**\n- Only users who have purchased the product can leave a review.\n- The review form includes a star rating component and a text area for the review.\n- Submitted reviews are displayed on the product page.\n- The average star rating is calculated and displayed correctly."}
{"bad_prompt": "the api keys are visible in the code", "good_prompt": "### Security: Remove Hardcoded API Keys from the Frontend Code\n\n**Bug Description:**\nAPI keys for a third-party service are currently hardcoded directly in the frontend JavaScript code, making them publicly visible. This is a major security vulnerability.\n\n**Objective:**\nRemove the hardcoded API keys from the client-side code and move them to a secure backend environment.\n\n**Feature Description:**\n1. Create a new backend API endpoint (e.g., `/api/third-party-service`).\n2. Move the logic that calls the third-party service from the frontend to this new backend endpoint.\n3. Store the API keys securely as environment variables on the server.\n4. Update the frontend code to call our new backend endpoint instead of the third-party service directly.\n\n**Acceptance Criteria:**\n- The hardcoded API keys are completely removed from all frontend JavaScript files.\n- The functionality that relies on the third-party service still works correctly by going through our secure backend endpoint."}
{"bad_prompt": "the terms of service page is missing", "good_prompt": "### Content: Create a 'Terms of Service' Page\n\n**Objective:**\nCreate a new 'Terms of Service' page to provide users with the legal terms and conditions for using our website and services.\n\n**Feature Description:**\nCreate a new static page at `/terms-of-service`. The content for this page will be provided by the legal team. The page should be linked in the website's footer.\n\n**Acceptance Criteria:**\n- A new page is created at `/terms-of-service`.\n- The content provided by the legal team is added to the page.\n- A link to the 'Terms of Service' page is present in the site footer."}
{"bad_prompt": "the user session expires too quickly", "good_prompt": "### UX Improvement: Extend the User Session Lifetime\n\n**Objective:**\nImprove the user experience by extending the duration of a user's login session to reduce the frequency of them being logged out.\n\n**Feature Description:**\nIncrease the session lifetime from the current 1 hour to 30 days. This should be done by updating the session configuration on the server.\n\n**Acceptance Criteria:**\n- The user's login session should persist for 30 days of inactivity.\n- A user who logs in and returns to the site within 30 days should still be logged in."}
{"bad_prompt": "the site is slow on mobile", "good_prompt": "### Performance: Optimize Mobile Website Performance\n\n**Objective:**\nImprove the overall performance of the website on mobile devices, focusing on reducing the load time and improving responsiveness.\n\n**Feature Description:**\nPerform a performance audit of the mobile site and implement the following optimizations:\n1. **Code Splitting:** Implement code splitting to reduce the size of the initial JavaScript bundle.\n2. **Image Optimization:** Ensure all images are compressed and served in next-gen formats.\n3. **Reduce Render-Blocking Resources:** Defer the loading of non-critical CSS and JavaScript.\n\n**Acceptance Criteria:**\n- The Google PageSpeed Insights score for mobile should be improved to 90 or above.\n- The First Contentful Paint (FCP) time on a simulated mobile device should be under 1 second."}
{"bad_prompt": "the contact form has no spam protection", "good_prompt": "### Security: Add Spam Protection to the Contact Form\n\n**Objective:**\nProtect the contact form from spam submissions by implementing a CAPTCHA service.\n\n**Feature Description:**\nIntegrate a CAPTCHA service (like Google reCAPTCHA or hCaptcha) into the contact form. The user must successfully complete the CAPTCHA challenge before the form can be submitted.\n\n**Acceptance Criteria:**\n- A CAPTCHA widget is present on the contact form.\n- The form cannot be submitted unless the CAPTCHA is successfully validated on the server-side."}
{"bad_prompt": "i need to be able to see my profile", "good_prompt": "### New Feature Request: Create a User Profile Page\n\n**User Story:**\nAs a logged-in user, I want to be able to view my profile information so that I can see my account details.\n\n**Feature Description:**\nCreate a new 'Profile' page that is accessible from the user's account dashboard. This page should display the user's information, such as their username, email address, and registration date.\n\n**Acceptance Criteria:**\n- A new 'Profile' page is created at `/account/profile`.\n- The page displays the logged-in user's username and email address.\n- There is a link to this page from the main dashboard."}
{"bad_prompt": "the site looks bad in safari", "good_prompt": "### Bug Fix: Resolve CSS Styling Issues on Safari\n\n**Bug Description:**\nSeveral CSS styles, particularly those using Flexbox and Grid, are not rendering correctly in the Safari browser. This causes layout issues on several pages, including the homepage and the dashboard.\n\n**Steps to Reproduce:**\n1. Open the website in the latest version of Safari.\n2. Navigate to the homepage and the dashboard page.\n3. Observe the layout and styling compared to Chrome or Firefox.\n\n**Expected Behavior:**\nThe website's layout and styling should be consistent across all modern browsers, including Safari.\n\n**Actual Behavior:**\nIn Safari, some elements are misaligned, and the grid layout is broken.\n\n**Additional Context:**\nThis likely requires adding vendor prefixes for certain CSS properties (e.g., `-webkit-`) to ensure cross-browser compatibility."}
{"bad_prompt": "the api needs pagination", "good_prompt": "### Feature: Add Pagination to the `/api/posts` Endpoint\n\n**Objective:**\nThe `/api/posts` endpoint currently returns all posts at once, which is inefficient and slow. This task is to add pagination to this endpoint to improve performance.\n\n**Acceptance Criteria:**\n- The `/api/posts` endpoint should accept two optional query parameters: `page` (the page number, defaulting to 1) and `limit` (the number of items per page, defaulting to 10).\n- The API response should be a JSON object containing the list of posts for the requested page (`data`) and pagination metadata (`total`, `page`, `limit`).\n- For example, a request to `/api/posts?page=2&limit=5` should return posts 6-10."}
{"bad_prompt": "the cookie banner is annoying", "good_prompt": "### UX Improvement: Make the Cookie Banner Less Intrusive\n\n**Objective:**\nImprove the user experience by making the cookie consent banner less intrusive while still being compliant with regulations.\n\n**Feature Description:**\nRedesign the current cookie banner, which is a large modal that blocks the center of the page. The new design should be a small banner at the bottom of the screen that does not block the main content. The user should be able to dismiss it easily.\n\n**Acceptance Criteria:**\n- The cookie consent banner is displayed at the bottom of the screen.\n- The banner does not cover up any critical navigation or content.\n- The user's consent choice is saved correctly, and the banner does not reappear on subsequent visits."}
{"bad_prompt": "the user list is not sorted", "good_prompt": "### Bug Fix: The User List in the Admin Panel is Not Sorted Alphabetically\n\n**Bug Description:**\nThe list of users in the admin panel is displayed in a random order, making it difficult to find a specific user.\n\n**Steps to Reproduce:**\n1. Log in as an admin user.\n2. Go to the 'Users' page in the admin panel.\n3. Observe the order of the user list.\n\n**Expected Behavior:**\nThe user list should be sorted alphabetically by username by default.\n\n**Actual Behavior:**\nThe user list is not sorted."}
{"bad_prompt": "the welcome email is ugly", "good_prompt": "### UI Improvement: Redesign the New User Welcome Email\n\n**Objective:**\nRedesign the welcome email that is sent to new users upon registration to be more visually appealing and on-brand.\n\n**Feature Description:**\nUpdate the HTML template for the welcome email to match the new design provided by the marketing team. This includes using the brand's fonts and colors, adding the company logo, and updating the copy to be more welcoming.\n\n**Acceptance Criteria:**\n- The welcome email's design matches the new template in Figma.\n- The email renders correctly in major email clients (Gmail, Outlook, Apple Mail).\n\n**Additional Context:**\nThe Figma design for the new email template is here: [Link to Figma]"}
{"bad_prompt": "the password reset token expires too fast", "good_prompt": "### UX Improvement: Extend the Password Reset Token Expiration Time\n\n**Objective:**\nImprove the user experience for the password reset flow by extending the validity period of the password reset token.\n\n**Feature Description:**\nIncrease the expiration time for password reset tokens from the current 15 minutes to 1 hour. This change should be made in the authentication service's configuration.\n\n**Acceptance Criteria:**\n- A password reset link sent to a user's email should remain valid for 1 hour.\n- Attempting to use the link after 1 hour should result in a user-friendly error message indicating that the token has expired."}
{"bad_prompt": "i can't upload a pdf", "good_prompt": "### Bug Fix: File Upload Component Rejects PDF Files\n\n**Bug Description:**\nThe file upload component on the 'Documents' page is incorrectly rejecting PDF files. When a user tries to upload a PDF, they receive an 'Invalid file type' error.\n\n**Steps to Reproduce:**\n1. Go to the '/documents' page.\n2. Click the 'Upload' button.\n3. Select a PDF file from the file picker.\n\n**Expected Behavior:**\nThe PDF file should be accepted and uploaded successfully.\n\n**Actual Behavior:**\nAn 'Invalid file type' error message is displayed, and the upload is blocked.\n\n**Additional Context:**\nThe list of accepted file types in the component's configuration is likely missing the `application/pdf` MIME type."}
{"bad_prompt": "the user avatars are broken", "good_prompt": "### Bug Fix: User Avatars Are Not Displaying and Show a Broken Image Icon\n\n**Bug Description:**\nUser avatars are not being displayed anywhere in the application (e.g., in the header, on profile pages, in comments). Instead, a broken image icon is shown.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Observe the user avatar in the top-right corner of the header.\n3. Go to a user's profile page.\n\n**Expected Behavior:**\nThe user's avatar image should be displayed correctly.\n\n**Actual Behavior:**\nA broken image icon is displayed.\n\n**Additional Context:**\nThe URL for the avatar images seems to be pointing to an incorrect path. The image URLs should be checked to ensure they are being generated correctly."}
{"bad_prompt": "the site needs a favicon", "good_prompt": "### Feature: Add a Favicon to the Website\n\n**Objective:**\nImprove the site's branding and user experience by adding a favicon.\n\n**Feature Description:**\nAdd the necessary favicon files (`favicon.ico`, `apple-touch-icon.png`, etc.) to the public directory and link them in the `<head>` section of the main HTML template.\n\n**Acceptance Criteria:**\n- The website's favicon is displayed correctly in browser tabs.\n- The favicon is displayed when the site is saved as a bookmark or added to a mobile home screen."}
{"bad_prompt": "the currency is wrong", "good_prompt": "### Bug Fix: Prices are Displayed in USD instead of EUR\n\n**Bug Description:**\nAll prices on the product and checkout pages are being displayed with a dollar sign ($) and are formatted as USD. The requirement is for all prices to be displayed in Euros (\u20ac).\n\n**Acceptance Criteria:**\n- All prices displayed to the user should use the Euro symbol (\u20ac).\n- The currency formatting should be updated sitewide.\n- A reusable currency formatting utility should be created to ensure consistency."}
{"bad_prompt": "the map on the contact page is not working", "good_prompt": "### Bug Fix: The Interactive Map on the Contact Page is Not Loading\n\n**Bug Description:**\nThe interactive map on the `/contact` page (e.g., Google Maps, Mapbox) is not loading. The area where the map should be is blank, and there is a JavaScript error in the console related to a missing API key.\n\n**Steps to Reproduce:**\n1. Go to the `/contact` page.\n2. Observe the map section.\n\n**Expected Behavior:**\nThe interactive map should load and display our office location.\n\n**Actual Behavior:**\nThe map area is blank, and there is a console error indicating that the API key is invalid or missing.\n\n**Additional Context:**\nThe API key for the map service needs to be added to the application's environment variables and included in the script that loads the map."}
{"bad_prompt": "i need to be able to sort the user table", "good_prompt": "### New Feature Request: Add Sorting to the User Table in the Admin Panel\n\n**User Story:**\nAs an admin, I want to be able to sort the user table by username, email, and registration date so that I can better analyze the data.\n\n**Feature Description:**\nMake the column headers in the user table in the admin panel clickable. When a user clicks on a column header, the table should be sorted by that column. Clicking the same header again should reverse the sort order.\n\n**Acceptance Criteria:**\n- Users can sort the table by clicking on the 'Username', 'Email', and 'Registration Date' column headers.\n- The sorting works in both ascending and descending order.\n- A visual indicator (e.g., an arrow) shows the current sort column and direction."}
{"bad_prompt": "the privacy policy page is missing", "good_prompt": "### Content: Create a 'Privacy Policy' Page\n\n**Objective:**\nCreate a new 'Privacy Policy' page to inform users about how we collect, use, and protect their data.\n\n**Feature Description:**\nCreate a new static page at `/privacy-policy`. The content for this page will be provided by the legal team. The page should be linked in the website's footer.\n\n**Acceptance Criteria:**\n- A new page is created at `/privacy-policy`.\n- The content provided by the legal team is added to the page.\n- A link to the 'Privacy Policy' page is present in the site footer."}
{"bad_prompt": "the back button is not working", "good_prompt": "### Bug Fix: The Browser's Back Button Does Not Work as Expected in the Single Page Application\n\n**Bug Description:**\nAfter navigating between a few pages within our Single Page Application (SPA), using the browser's back button does not take the user to the previously viewed page. Instead, it either does nothing or takes them out of the application entirely.\n\n**Steps to Reproduce:**\n1. Go to the homepage.\n2. Click a link to the '/about' page.\n3. Click a link to the '/contact' page.\n4. Click the browser's back button.\n\n**Expected Behavior:**\nThe user should be taken back to the '/about' page.\n\n**Actual Behavior:**\nThe URL might change, but the page content does not, or the user is taken to the page they were on before visiting our site.\n\n**Additional Context:**\nThis is likely an issue with our client-side router. We need to ensure that we are using the History API (`pushState`) correctly to create new entries in the browser's session history for each navigation."}
{"bad_prompt": "i need to be able to export my data", "good_prompt": "### New Feature Request: Allow Users to Export Their Data\n\n**User Story:**\nAs a user, I want to be able to export all my data in a machine-readable format (like JSON) to comply with data portability regulations (like GDPR).\n\n**Feature Description:**\nAdd a new 'Export Data' section to the user's account settings page. This section should have a button that allows the user to request a full export of their data. The export process should run in the background, and the user should be notified by email when their export file is ready to be downloaded.\n\n**Acceptance Criteria:**\n- A 'Request Data Export' button is available in the account settings.\n- Clicking the button triggers an asynchronous job to generate the export.\n- The user receives an email with a secure link to download their data as a JSON file."}
{"bad_prompt": "the error pages are ugly", "good_prompt": "### UI Improvement: Create Custom Pages for 500 and 403 Errors\n\n**Objective:**\nImprove the user experience for error states by creating custom, branded pages for 500 (Internal Server Error) and 403 (Forbidden) errors.\n\n**Feature Description:**\nDesign and implement two new static pages:\n1. A custom 500 error page with a friendly message indicating that something went wrong on our end.\n2. A custom 403 error page with a message explaining that the user does not have permission to access the page.\nBoth pages should have a link to return to the homepage.\n\n**Acceptance Criteria:**\n- When a 500 error occurs on the server, the custom 500 page is displayed.\n- When a user tries to access a forbidden resource, the custom 403 page is displayed."}
{"bad_prompt": "the form is not validating", "good_prompt": "### Bug Fix: The Registration Form is Not Validating the Email Address Correctly\n\n**Bug Description:**\nThe user registration form allows users to submit an email address without a valid format (e.g., 'user@domain' instead of 'user@domain.com'). This leads to invalid data in our system.\n\n**Steps to Reproduce:**\n1. Go to the registration page.\n2. Enter a password.\n3. Enter an invalid email address like 'test'.\n4. Click the 'Register' button.\n\n**Expected Behavior:**\nThe form should display a validation error message indicating that the email address is not valid, and the form should not be submitted.\n\n**Actual Behavior:**\nThe form submits successfully with the invalid email address."}
{"bad_prompt": "the checkout is broken", "good_prompt": "### Bug Fix: Checkout Fails with 'Payment Gateway Error'\n\n**Bug Description:**\nWhen a user tries to complete a purchase, the checkout process fails at the payment step with a generic 'Payment Gateway Error'. No specific details are provided to the user.\n\n**Steps to Reproduce:**\n1. Add an item to the cart.\n2. Proceed to the checkout page.\n3. Fill in all the details and enter valid payment information.\n4. Click 'Complete Purchase'.\n\n**Expected Behavior:**\nThe payment should be processed successfully, and the user should be taken to an order confirmation page.\n\n**Actual Behavior:**\nThe process fails with a 'Payment Gateway Error'.\n\n**Additional Context:**\nThe server logs show a '401 Unauthorized' error from the Stripe API, suggesting that our API key may be incorrect or has expired."}
{"bad_prompt": "the search results are wrong", "good_prompt": "### Bug Fix: Search Results Are Not Relevant to the Search Query\n\n**Bug Description:**\nThe search functionality is returning results that are not relevant to the user's search query. For example, a search for 'billing' returns articles about 'user profiles'.\n\n**Steps to Reproduce:**\n1. Go to the search page.\n2. Enter a specific query like 'billing'.\n3. Observe the list of results.\n\n**Expected Behavior:**\nThe search results should be highly relevant to the search term, with the most relevant articles appearing first.\n\n**Actual Behavior:**\nThe results seem to be semi-random and not related to the query.\n\n**Additional Context:**\nThe search algorithm may be misconfigured. It might be overweighting tags or categories instead of the content body."}
{"bad_prompt": "the user can't change their email", "good_prompt": "### Bug Fix: Changing Email Address Fails\n\n**Bug Description:**\nWhen a user tries to change their email address in their profile settings, it fails with an error message 'This email is already taken', even when the new email address is unique.\n\n**Steps to Reproduce:**\n1. Go to the user profile page.\n2. Click 'Edit' next to the email address.\n3. Enter a new, unique email address.\n4. Click 'Save'.\n\n**Expected Behavior:**\nThe user's email address should be updated successfully.\n\n**Actual Behavior:**\nAn error message 'This email is already taken' is displayed.\n\n**Additional Context:**\nThe validation logic is likely checking the new email against all users, including the current user, which causes it to always find a match (itself). The validation should exclude the current user's ID."}
{"bad_prompt": "the site is down", "good_prompt": "### Outage: The Website is Currently Down (502 Bad Gateway)\n\n**Bug Description:**\nThe entire website is currently inaccessible and is returning a 502 Bad Gateway error. This indicates an issue with the upstream server or application.\n\n**Steps to Reproduce:**\n1. Navigate to the website's homepage.\n2. Observe the 502 error page.\n\n**Expected Behavior:**\nThe website should load correctly.\n\n**Actual Behavior:**\nA 502 Bad Gateway error is displayed.\n\n**Additional Context:**\nThis is a critical production issue. The server logs need to be checked immediately to identify the root cause. This could be a crashed application process or a misconfiguration in the load balancer."}
{"bad_prompt": "the mobile menu is broken", "good_prompt": "### Bug Fix: The Mobile Navigation Menu Does Not Close After Clicking a Link\n\n**Bug Description:**\nOn mobile devices, when the user opens the navigation menu and clicks on a link, the application navigates to the new page, but the menu remains open, covering the content.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Tap the hamburger icon to open the navigation menu.\n3. Tap on any link in the menu (e.g., 'About Us').\n\n**Expected Behavior:**\nThe application should navigate to the new page, and the mobile menu should automatically close.\n\n**Actual Behavior:**\nThe page changes, but the menu stays open."}
{"bad_prompt": "the api is returning the wrong data", "good_prompt": "### Bug Fix: The `/api/analytics` Endpoint Returns Data for the Wrong Date Range\n\n**Bug Description:**\nThe `/api/analytics` endpoint is supposed to return data for the date range specified in the query parameters (`startDate`, `endDate`). However, it is ignoring these parameters and always returning data for the last 30 days.\n\n**Steps to Reproduce:**\n1. Make a GET request to `/api/analytics?startDate=2023-01-01&endDate=2023-01-31`.\n2. Observe the data returned in the response.\n\n**Expected Behavior:**\nThe response should contain analytics data only for January 2023.\n\n**Actual Behavior:**\nThe response contains data for the last 30 days from the current date.\n\n**Additional Context:**\nThe backend logic for the endpoint is likely not parsing the `startDate` and `endDate` query parameters correctly and is falling back to a default date range."}
{"bad_prompt": "i can't remove items from the cart", "good_prompt": "### Bug Fix: Removing an Item from the Shopping Cart Does Not Work\n\n**Bug Description:**\nWhen a user clicks the 'Remove' button next to an item in their shopping cart, the item is not removed, and the page simply reloads.\n\n**Steps to Reproduce:**\n1. Add an item to the shopping cart.\n2. Go to the shopping cart page.\n3. Click the 'Remove' button for the item.\n\n**Expected Behavior:**\nThe item should be removed from the shopping cart, and the cart total should be updated.\n\n**Actual Behavior:**\nThe page reloads, but the item remains in the cart."}
{"bad_prompt": "the site is not updating", "good_prompt": "### Bug Fix: Content Changes from the CMS are Not Appearing on the Website\n\n**Bug Description:**\nWhen content is updated in our Headless CMS (e.g., Contentful, Strapi), the changes are not being reflected on the live website, even after a long wait. This suggests an issue with our build process or caching.\n\n**Steps to Reproduce:**\n1. Update the title of the homepage in the CMS.\n2. Save and publish the changes in the CMS.\n3. Visit the homepage of the live website.\n\n**Expected Behavior:**\nThe homepage should display the new, updated title.\n\n**Actual Behavior:**\nThe old title is still being displayed.\n\n**Additional Context:**\nThis could be caused by a few things:\n1. The webhook from the CMS to our build server is not firing or is misconfigured.\n2. The build server is not correctly re-building the site when it receives the webhook.\n3. An aggressive caching layer (e.g., at the CDN) is serving stale content. We need to investigate the build logs and cache settings."}
{"bad_prompt": "the user can't update their username", "good_prompt": "### Bug Fix: Updating Username Fails with a 'Permission Denied' Error\n\n**Bug Description:**\nWhen a user tries to update their username on their profile page, the operation fails with a 'Permission Denied' error, even though they are logged in and editing their own profile.\n\n**Steps to Reproduce:**\n1. Log in as any user.\n2. Go to the profile page.\n3. Try to change the username.\n4. Click 'Save'.\n\n**Expected Behavior:**\nThe username should be updated successfully.\n\n**Actual Behavior:**\nA 'Permission Denied' error is shown.\n\n**Additional Context:**\nThe API endpoint that handles the profile update is likely checking for an 'admin' role, but it should be allowing any authenticated user to update their own data. The authorization logic for this endpoint needs to be reviewed."}
{"bad_prompt": "the video player is broken", "good_prompt": "### Bug Fix: Embedded Video Player is Not Working on Firefox\n\n**Bug Description:**\nThe embedded video player on the `/watch/{id}` page does not load or play videos when using the Firefox browser. It works correctly in Chrome and Safari.\n\n**Steps to Reproduce:**\n1. Open the website in the Firefox browser.\n2. Navigate to any video page (e.g., `/watch/123`).\n3. Observe the video player area.\n\n**Expected Behavior:**\nThe video player should load and be able to play the video.\n\n**Actual Behavior:**\nThe video player is black and does not respond to clicks. There may be a console error related to video codecs or a browser-specific API."}
{"bad_prompt": "the breadcrumbs are wrong", "good_prompt": "### Bug Fix: Breadcrumb Navigation Shows Incorrect Path\n\n**Bug Description:**\nThe breadcrumb navigation component is showing an incorrect path on nested product category pages. For example, on a page for 'Laptops' within 'Electronics', the breadcrumb only shows 'Home > Laptops', omitting 'Electronics'.\n\n**Steps to Reproduce:**\n1. Navigate to a nested category page, e.g., 'Home > Electronics > Laptops'.\n2. Observe the breadcrumb trail at the top of the page.\n\n**Expected Behavior:**\nThe breadcrumb should show the full path: `Home > Electronics > Laptops`.\n\n**Actual Behavior:**\nThe breadcrumb shows an incomplete path: `Home > Laptops`."}
{"bad_prompt": "i need to be able to download an invoice", "good_prompt": "### New Feature Request: Allow Users to Download Invoices\n\n**User Story:**\nAs a customer, I want to be able to download a PDF invoice for my past orders so that I can keep it for my records.\n\n**Feature Description:**\nIn the 'Order History' page, add a 'Download Invoice' button next to each completed order. When a user clicks this button, the system should generate a PDF invoice for that specific order and initiate a download.\n\n**Acceptance Criteria:**\n- A 'Download Invoice' button is present for each completed order in the user's order history.\n- Clicking the button downloads a correctly formatted PDF invoice.\n- The invoice contains all the relevant order details (products, prices, totals, billing information)."}
{"bad_prompt": "the site is not translated correctly", "good_prompt": "### Bug Fix: Incomplete Translations on the Spanish Version of the Site\n\n**Bug Description:**\nSeveral sections of the Spanish version of the website (`/es`) are still showing English text. This is particularly noticeable in the footer and on the contact page.\n\n**Steps to Reproduce:**\n1. Switch the website's language to Spanish.\n2. Navigate to the footer and the `/es/contacto` page.\n\n**Expected Behavior:**\nAll text on the page should be in Spanish.\n\n**Actual Behavior:**\nSome text, especially in the footer links and form labels, remains in English.\n\n**Additional Context:**\nThe translation files (e.g., `es.json`) for the i18n library are likely missing the keys for these specific text elements. They need to be added."}
{"bad_prompt": "the stock status is wrong", "good_prompt": "### Bug Fix: Product Stock Status is Not Updating Correctly\n\n**Bug Description:**\nWhen a product goes out of stock, its status on the product page still shows as 'In Stock'. The stock level is not being updated in real-time.\n\n**Steps to Reproduce:**\n1. Manually set the stock level of a product to 0 in the database.\n2. View that product's page on the website.\n\n**Expected Behavior:**\nThe product page should display an 'Out of Stock' message, and the 'Add to Cart' button should be disabled.\n\n**Actual Behavior:**\nThe product page still shows 'In Stock', and the user can add it to the cart.\n\n**Additional Context:**\nThere may be a caching issue with the product data API, or the frontend is not correctly re-validating the data."}
{"bad_prompt": "the user is not logged out when the session expires", "good_prompt": "### Bug Fix: User is Not Redirected to Login Page After Session Expiration\n\n**Bug Description:**\nWhen a user's session expires, they are not automatically logged out or redirected to the login page. Instead, their next action (e.g., clicking a link) results in an unexpected error page (e.g., a 401 or 403 error).\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Wait for the session to expire (e.g., 1 hour).\n3. Try to navigate to another page within the application.\n\n**Expected Behavior:**\nThe user should be automatically redirected to the login page with a message indicating that their session has expired.\n\n**Actual Behavior:**\nThe user sees an unfriendly error page, which is a poor user experience.\n\n**Additional Context:**\nThe API client on the frontend should be configured to handle 401 Unauthorized responses globally. When a 401 is received, it should clear the user's session data from local storage and redirect them to the login page."}
{"bad_prompt": "the site needs a cookie policy page", "good_prompt": "### Content: Create a 'Cookie Policy' Page\n\n**Objective:**\nCreate a new 'Cookie Policy' page to provide users with detailed information about the cookies we use on our website.\n\n**Feature Description:**\nCreate a new static page at `/cookie-policy`. The content for this page will be provided by the legal team. The page should be linked in the website's footer and from the cookie consent banner.\n\n**Acceptance Criteria:**\n- A new page is created at `/cookie-policy`.\n- The content provided by the legal team is added to the page.\n- A link to the 'Cookie Policy' page is present in the site footer."}
{"bad_prompt": "the product images are blurry", "good_prompt": "### Bug Fix: Product Images are Low Resolution and Blurry on High-Density Displays\n\n**Bug Description:**\nThe product images on the product detail pages appear blurry and pixelated on high-density (Retina) displays.\n\n**Steps to Reproduce:**\n1. View a product page on a high-density display (e.g., a MacBook Pro, a 4K monitor, or a modern smartphone).\n2. Observe the quality of the main product image.\n\n**Expected Behavior:**\nThe product image should be sharp and clear.\n\n**Actual Behavior:**\nThe image is blurry and low-quality.\n\n**Additional Context:**\nWe are likely serving images that are too small. We need to implement responsive images using the `srcset` attribute to serve higher-resolution images to devices with high-density displays."}
{"bad_prompt": "i can't unsubscribe from the newsletter", "good_prompt": "### Bug Fix: The 'Unsubscribe' Link in Emails is Not Working\n\n**Bug Description:**\nWhen a user clicks the 'Unsubscribe' link in a marketing email, it leads to a 404 Not Found page. The unsubscribe functionality is completely broken.\n\n**Steps to Reproduce:**\n1. Receive a marketing email from our system.\n2. Click the 'Unsubscribe' link at the bottom of the email.\n\n**Expected Behavior:**\nThe user should be taken to a page where they can confirm that they want to unsubscribe from the newsletter.\n\n**Actual Behavior:**\nThe link leads to a 404 page.\n\n**Additional Context:**\nThe URL for the unsubscribe link being generated in our email templates is incorrect. The template needs to be updated with the correct URL for the unsubscribe page."}
{"bad_prompt": "the site map is out of date", "good_prompt": "### Bug Fix: The `sitemap.xml` is Not Being Updated with New Pages\n\n**Bug Description:**\nThe `sitemap.xml` file is not being updated automatically when new blog posts or product pages are created. It is static and out of date, which is bad for SEO.\n\n**Steps to Reproduce:**\n1. Create a new blog post.\n2. After the site has been rebuilt, view the `sitemap.xml` file.\n\n**Expected Behavior:**\nThe `sitemap.xml` file should contain a URL for the newly created blog post.\n\n**Actual Behavior:**\nThe new blog post's URL is missing from the sitemap.\n\n**Additional Context:**\nThe script that generates the sitemap is likely not correctly fetching the list of all dynamic pages. It needs to be updated to query the database for all published posts and products during the build process."}
{"bad_prompt": "i need a way to contact support", "good_prompt": "### New Feature Request: Create a Customer Support Contact Form\n\n**User Story:**\nAs a user who is having a problem, I want a way to contact customer support directly through the website.\n\n**Feature Description:**\nCreate a new 'Contact Support' page, accessible from the main navigation. This page should contain a form where users can enter their name, email, subject, and a detailed description of their issue. Submitting the form should create a new ticket in our customer support system (e.g., Zendesk) via its API.\n\n**Acceptance Criteria:**\n- A new 'Contact Support' page is created.\n- The form on the page includes fields for name, email, subject, and description.\n- Submitting the form successfully creates a new ticket in Zendesk."}
{"bad_prompt": "the site is not mobile friendly", "good_prompt": "### Responsive Design: Ensure the Entire Website is Mobile-Friendly\n\n**Objective:**\nPerform a full audit and update of the website's CSS to ensure that all pages are fully responsive and provide an excellent user experience on mobile devices.\n\n**Feature Description:**\nReview every page of the website on a mobile device and fix any layout, styling, or usability issues. This includes, but is not limited to:\n- Ensuring that text is readable and does not require horizontal scrolling.\n- Making sure that all buttons and links are easily tappable.\n- Adapting complex components like tables and forms to a mobile-friendly layout.\n\n**Acceptance Criteria:**\n- All pages of the website render correctly and are usable on screen sizes down to 320px wide.\n- There are no horizontal scrollbars on any page.\n- The site passes Google's Mobile-Friendly Test."}
{"bad_prompt": "the api is missing a health check", "good_prompt": "### Feature: Add a Health Check Endpoint to the API\n\n**Objective:**\nCreate a new `/health` endpoint for the API that can be used by our monitoring services to check if the application is running and healthy.\n\n**Feature Description:**\nImplement a new GET endpoint at `/api/health`. This endpoint should perform a quick check to ensure that the application can connect to the database and then return a 200 OK status with a simple JSON response like `{\"status\": \"ok\"}`.\n\n**Acceptance Criteria:**\n- A GET request to `/api/health` returns a 200 OK status code.\n- The response body is `{\"status\": \"ok\"}`.\n- If the database connection fails, the endpoint should return a 503 Service Unavailable status."}
{"bad_prompt": "the user can't change their password", "good_prompt": "### Bug Fix: The 'Change Password' Functionality is Not Working\n\n**Bug Description:**\nWhen a user tries to change their password in their account settings, the operation fails with a generic 'An error occurred' message.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Go to the 'Account Settings' page.\n3. Enter the current password and a new password.\n4. Click 'Change Password'.\n\n**Expected Behavior:**\nThe user's password should be updated successfully.\n\n**Actual Behavior:**\nAn error message is displayed, and the password is not changed.\n\n**Additional Context:**\nThe server logs show that the 'current password' check is failing because it is being compared incorrectly. The password hashing logic needs to be reviewed."}
{"bad_prompt": "the site needs a blog", "good_prompt": "### New Feature Request: Create a Blog\n\n**Objective:**\nCreate a new blog section on the website to publish articles and company news.\n\n**Feature Description:**\nCreate a new section of the website for a blog. This should include:\n1. A blog listing page (`/blog`) that displays a paginated list of all blog posts.\n2. A blog post detail page (`/blog/{slug}`) that displays the full content of a single post.\n3. A backend system (or integration with a headless CMS) to manage and create blog posts.\n\n**Acceptance Criteria:**\n- The `/blog` page lists all published blog posts.\n- Users can click on a post to view its full content.\n- The blog post detail page displays the post title, author, date, and content."}
{"bad_prompt": "the user profile picture is not updating", "good_prompt": "### Bug Fix: The User's Profile Picture Does Not Update After Uploading a New One\n\n**Bug Description:**\nAfter a user successfully uploads a new profile picture, the old picture is still displayed in the header and on their profile page. The new picture only appears after a hard refresh or clearing the cache.\n\n**Steps to Reproduce:**\n1. Upload a new profile picture on the profile settings page.\n2. Observe the avatar in the header.\n\n**Expected Behavior:**\nThe new profile picture should be displayed immediately throughout the application without requiring a hard refresh.\n\n**Actual Behavior:**\nThe old picture remains visible due to a caching issue.\n\n**Additional Context:**\nWe need to add a cache-busting parameter (like a timestamp or version number) to the image URL to ensure that the browser fetches the new version of the image after it has been updated."}
{"bad_prompt": "the site needs a careers page", "good_prompt": "### Content: Create a 'Careers' Page\n\n**Objective:**\nCreate a new 'Careers' page to list open job positions and attract potential candidates.\n\n**Feature Description:**\nCreate a new static page at `/careers`. The page should have an introduction about working at our company and a section that lists all the currently open job positions. The list of jobs can be hardcoded for now, or it can be integrated with our applicant tracking system (ATS) if an API is available.\n\n**Acceptance Criteria:**\n- A new page is created at `/careers`.\n- The page lists all open job positions with a title, location, and a link to apply."}
{"bad_prompt": "the login form is not autofilling", "good_prompt": "### Bug Fix: The Login Form is Not Allowing Browser Autofill\n\n**Bug Description:**\nBrowsers are not able to autofill the username and password fields on the login form. This is likely due to the use of non-standard `name` or `id` attributes on the input fields.\n\n**Steps to Reproduce:**\n1. Go to the login page.\n2. Try to use the browser's built-in password manager to autofill the login credentials.\n\n**Expected Behavior:**\nThe browser should be able to autofill the username and password fields.\n\n**Actual Behavior:**\nThe fields remain blank.\n\n**Additional Context:**\nTo fix this, we should ensure that the email/username input has `autocomplete=\"username\"` and the password input has `autocomplete=\"current-password\"`."}
{"bad_prompt": "the user data is not being deleted correctly", "good_prompt": "### Bug Fix: Deleting a User Account Does Not Delete All of Their Data\n\n**Bug Description:**\nWhen a user deletes their account, their main user record is deleted, but their associated data (like their posts and comments) remains in the database, orphaned.\n\n**Steps to Reproduce:**\n1. Create a user and have them create some posts.\n2. Delete the user's account.\n3. Check the database to see if the user's posts still exist.\n\n**Expected Behavior:**\nWhen a user account is deleted, all of their associated data (posts, comments, etc.) should also be deleted (cascading delete).\n\n**Actual Behavior:**\nOnly the user record is deleted, leaving orphaned data in the database.\n\n**Additional Context:**\nThe database schema needs to be updated to use a cascading delete for the foreign key relationships, or the application logic needs to be updated to manually delete all associated data when a user is deleted."}
{"bad_prompt": "the site needs a press page", "good_prompt": "### Content: Create a 'Press' Page\n\n**Objective:**\nCreate a new 'Press' page to provide resources for journalists and the media.\n\n**Feature Description:**\nCreate a new static page at `/press`. This page should include our company's press kit, logos, and contact information for media inquiries.\n\n**Acceptance Criteria:**\n- A new page is created at `/press`.\n- The page contains a downloadable press kit.\n- The page provides a clear email address for press inquiries."}
{"bad_prompt": "the user can create an account with a weak password", "good_prompt": "### Security: Enforce Stronger Password Requirements\n\n**Objective:**\nImprove the security of user accounts by enforcing stronger password requirements during registration and password changes.\n\n**Feature Description:**\nUpdate the password validation logic to require passwords to meet certain complexity requirements. Passwords must:\n1. Be at least 12 characters long.\n2. Contain at least one uppercase letter, one lowercase letter, one number, and one special character.\n\n**Acceptance Criteria:**\n- The registration and 'change password' forms display the new password requirements to the user.\n- The server rejects any passwords that do not meet these requirements with a clear error message."}
{"bad_prompt": "the api is not logging errors", "good_prompt": "### Observability: Add Error Logging to the API\n\n**Objective:**\nImprove our ability to debug issues by adding structured error logging to the API.\n\n**Feature Description:**\nIntegrate a logging library (like Winston or Pino) into the API. All caught errors in the API endpoints should be logged in a structured JSON format. The logs should include a timestamp, error message, stack trace, and request ID.\n\n**Acceptance Criteria:**\n- All API errors are logged to the console or a log file in JSON format.\n- The logs contain all the required fields (timestamp, message, stack trace, request ID)."}
{"bad_prompt": "the user can't see their own comments", "good_prompt": "### Bug Fix: User's Own Comments Are Not Displayed Until After a Page Refresh\n\n**Bug Description:**\nWhen a user submits a comment on a blog post, their comment does not appear on the page immediately. They have to manually refresh the page to see it. This is a poor user experience.\n\n**Steps to Reproduce:**\n1. Go to a blog post.\n2. Submit a new comment.\n3. Observe the comment section.\n\n**Expected Behavior:**\nThe new comment should be added to the comment list on the page instantly, without requiring a refresh.\n\n**Actual Behavior:**\nThe comment list does not update.\n\n**Additional Context:**\nThe frontend application needs to update its state with the new comment after the submission API call is successful. The API should return the newly created comment object, which the frontend can then append to its list of comments."}
{"bad_prompt": "the site needs a contact page", "good_prompt": "### New Feature Request: Create a 'Contact Us' Page\n\n**Objective:**\nCreate a 'Contact Us' page that provides users with our contact information and a contact form.\n\n**Feature Description:**\nCreate a new static page at `/contact`. This page should display our company's address, phone number, and email address. It should also include a contact form that users can fill out to send us a message directly. Submitting the form should send an email to our support team.\n\n**Acceptance Criteria:**\n- A new page is created at `/contact`.\n- The page displays the correct contact information.\n- The contact form includes fields for name, email, and message.\n- Submitting the form successfully sends an email to the support team."}
{"bad_prompt": "the user can't filter by date", "good_prompt": "### New Feature Request: Add Date Range Filtering to the Orders Page\n\n**User Story:**\nAs a user, I want to be able to filter my order history by a date range so that I can find orders from a specific period.\n\n**Feature Description:**\nAdd a date range filter to the 'Order History' page. The filter should consist of two date input fields: 'Start Date' and 'End Date'. When the user selects a date range and clicks 'Apply', the list of orders should be filtered to show only the orders placed within that range.\n\n**Acceptance Criteria:**\n- 'Start Date' and 'End Date' input fields are present on the order history page.\n- The list of orders updates correctly when the date range filter is applied."}
{"bad_prompt": "the user can't close their account", "good_prompt": "### Bug Fix: The 'Close Account' Button is Not Working\n\n**Bug Description:**\nWhen a user clicks the 'Close Account' button in their profile settings, nothing happens. No confirmation modal appears, and no action is taken.\n\n**Steps to Reproduce:**\n1. Go to the account settings page.\n2. Click the 'Close Account' button.\n\n**Expected Behavior:**\nA confirmation modal should appear, warning the user about the action. If they confirm, the account should be closed.\n\n**Actual Behavior:**\nNothing happens. There might be a JavaScript error in the console.\n\n**Additional Context:**\nThe click handler for the button is likely not wired up correctly in the frontend code."}
{"bad_prompt": "the site is not using a CDN", "good_prompt": "### Performance: Use a CDN to Serve Static Assets\n\n**Objective:**\nImprove the global loading performance of the website by serving all static assets (CSS, JavaScript, images) from a Content Delivery Network (CDN).\n\n**Feature Description:**\nConfigure the application's build process and server to serve all static assets from a CDN (e.g., Cloudflare, AWS CloudFront). This involves updating the asset URLs in the application's HTML to point to the CDN.\n\n**Acceptance Criteria:**\n- All CSS, JS, and image files are served from the CDN's domain, not our origin server.\n- The website loads correctly with the assets being served from the CDN.\n- The page load time for users in different geographic regions is significantly reduced."}
{"bad_prompt": "the user can't see their own posts", "good_prompt": "### Bug Fix: A User's Own Posts Are Not Appearing on Their Profile Page\n\n**Bug Description:**\nThe 'My Posts' section on a user's profile page is always empty, even when the user has created posts.\n\n**Steps to Reproduce:**\n1. Create a new post.\n2. Go to your own profile page.\n3. Observe the 'My Posts' section.\n\n**Expected Behavior:**\nThe 'My Posts' section should display a list of all the posts created by the logged-in user.\n\n**Actual Behavior:**\nThe section is empty.\n\n**Additional Context:**\nThe API endpoint that fetches the posts for the profile page is likely not correctly filtering the posts by the user's ID."}
{"bad_prompt": "the user can't pay with paypal", "good_prompt": "### New Feature Request: Add PayPal as a Payment Option\n\n**User Story:**\nAs a customer, I want to be able to pay for my order using PayPal so that I can use my preferred payment method.\n\n**Feature Description:**\nIntegrate the PayPal payment gateway into our checkout process. The user should see a 'Pay with PayPal' button on the payment page. Clicking this button should initiate the PayPal checkout flow. After a successful payment, the user should be returned to our order confirmation page.\n\n**Acceptance Criteria:**\n- A 'Pay with PayPal' button is available on the checkout page.\n- The user can successfully complete a purchase using PayPal.\n- The order is marked as 'Paid' in our system after a successful PayPal transaction."}
{"bad_prompt": "the site is not logging user actions", "good_prompt": "### Feature: Implement an Audit Log for User Actions\n\n**Objective:**\nCreate an audit log that records important user actions for security and compliance purposes.\n\n**Feature Description:**\nCreate a new logging system that records key user actions to a secure log file or database table. The actions to be logged should include:\n- User login/logout\n- Password change/reset\n- Profile information updates\n- Account deletion\nEach log entry should include a timestamp, the user's ID, the action performed, and the user's IP address.\n\n**Acceptance Criteria:**\n- All specified user actions are being logged correctly.\n- The audit log is stored securely and is accessible only to administrators."}
{"bad_prompt": "the user can create a duplicate account", "good_prompt": "### Bug Fix: A User Can Create Multiple Accounts with the Same Email Address\n\n**Bug Description:**\nThe registration system allows multiple user accounts to be created with the exact same email address. This should not be possible, as the email address should be a unique identifier.\n\n**Steps to Reproduce:**\n1. Register a new account with the email 'test@example.com'.\n2. Log out.\n3. Register another new account, again using the email 'test@example.com'.\n\n**Expected Behavior:**\nThe second registration attempt should fail with an error message indicating that the email address is already in use.\n\n**Actual Behavior:**\nA second account is created successfully.\n\n**Additional Context:**\nA unique constraint needs to be added to the `email` column in the `users` database table. The application's registration logic should also be updated to check if an email already exists before creating a new user."}
{"bad_prompt": "the user profile is slow", "good_prompt": "### Performance: Optimize User Profile Page Load Time\n\n**Objective:**\nThe user profile page is taking more than 3 seconds to load, which is a poor user experience. This task is to investigate and resolve the performance bottlenecks.\n\n**Acceptance Criteria:**\n- The load time of the user profile page should be reduced to under 1 second.\n- The number of database queries executed when loading the page should be minimized.\n- A performance audit should be conducted using browser developer tools to identify and fix any frontend bottlenecks (e.g., large images, render-blocking scripts)."}
{"bad_prompt": "add a link to the footer", "good_prompt": "### Content: Add 'About Us' Link to Site Footer\n\n**Objective:**\nAdd a link to the 'About Us' page in the footer of the website to improve navigation.\n\n**Acceptance Criteria:**\n- A new link with the text 'About Us' is present in the site footer.\n- The link correctly navigates to the `/about` page."}
{"bad_prompt": "the api is timing out", "good_prompt": "### Bug Fix: API Gateway Timeout on `/api/reports` Endpoint\n\n**Bug Description:**\nRequests to the `/api/reports` endpoint are consistently failing with a 504 Gateway Timeout error, especially for large date ranges. This is preventing users from generating reports.\n\n**Steps to Reproduce:**\n1. Make a GET request to `/api/reports` with a date range of more than 90 days.\n2. Observe the 504 error response.\n\n**Expected Behavior:**\nThe API should successfully generate and return the report, even for large date ranges.\n\n**Actual Behavior:**\nThe request times out.\n\n**Additional Context:**\nThe report generation query is too slow and needs to be optimized. This process should also be moved to an asynchronous background job to avoid timeouts."}
{"bad_prompt": "the mobile app crashes", "good_prompt": "### Bug Fix: iOS App Crashes on Startup for iOS 17\n\n**Bug Description:**\nThe iOS application is crashing immediately upon startup for users running iOS 17. The app is unusable for these users.\n\n**Steps to Reproduce:**\n1. Install the app on a device running iOS 17.\n2. Try to open the app.\n\n**Expected Behavior:**\nThe app should open and function normally.\n\n**Actual Behavior:**\nThe app crashes immediately.\n\n**Additional Context:**\nThe crash logs indicate a null pointer exception in the `AppDelegate` related to the initialization of a third-party library that may not be compatible with iOS 17."}
{"bad_prompt": "the user can't reset their password", "good_prompt": "### Bug Fix: Password Reset Link is Invalid\n\n**Bug Description:**\nThe password reset link sent to users' emails is leading to a page that says 'This link is invalid or has expired', even when the user clicks it immediately.\n\n**Steps to Reproduce:**\n1. Go to the 'Forgot Password' page.\n2. Request a password reset.\n3. Click the link in the email that is sent.\n\n**Expected Behavior:**\nThe user should be taken to a page where they can set a new password.\n\n**Actual Behavior:**\nThe user is shown an 'Invalid link' error page.\n\n**Additional Context:**\nThe token generation or validation logic is flawed. The token being generated might not match the one being checked, or it is being invalidated prematurely."}
{"bad_prompt": "the site needs a privacy policy", "good_prompt": "### Legal: Create and Add Privacy Policy Page\n\n**Objective:**\nCreate a 'Privacy Policy' page to comply with legal requirements and inform users about our data practices.\n\n**Feature Description:**\nCreate a new static page at `/privacy`. The content for this page will be provided by the legal department. This page must be linked from the website footer.\n\n**Acceptance Criteria:**\n- A new page is created at `/privacy`.\n- The legal team's content is added to the page.\n- A link to the 'Privacy Policy' page is present in the site footer on all pages."}
{"bad_prompt": "the user can't upload a file", "good_prompt": "### Bug Fix: File Upload Fails for Files Larger Than 10MB\n\n**Bug Description:**\nThe file upload functionality is failing for any file larger than 10MB. The upload starts but then fails with a 'Request Entity Too Large' error.\n\n**Steps to Reproduce:**\n1. Try to upload a file that is larger than 10MB.\n2. Observe the error message.\n\n**Expected Behavior:**\nThe user should be able to upload files up to the intended limit of 50MB.\n\n**Actual Behavior:**\nThe upload fails for files over 10MB.\n\n**Additional Context:**\nThe file size limit needs to be increased in the web server's configuration (e.g., in Nginx's `client_max_body_size` directive) and in the application's backend configuration."}
{"bad_prompt": "the user can't log in with facebook", "good_prompt": "### Bug Fix: Facebook OAuth Login Fails with 'Invalid Scopes' Error\n\n**Bug Description:**\nWhen a user attempts to log in using the 'Login with Facebook' option, the process fails after they authorize the app. They are redirected back to our site with an error message indicating 'Invalid Scopes'.\n\n**Steps to Reproduce:**\n1. Go to the login page.\n2. Click 'Login with Facebook'.\n3. Authorize the application in the Facebook popup.\n\n**Expected Behavior:**\nThe user should be logged in successfully.\n\n**Actual Behavior:**\nThe user is redirected back with an error.\n\n**Additional Context:**\nThe scopes we are requesting in our OAuth call (e.g., `email`, `public_profile`) likely do not match the scopes that are enabled for our application in the Facebook Developer portal. The configurations need to be synchronized."}
{"bad_prompt": "the user can't see the new features", "good_prompt": "### Feature Flag: Enable New Dashboard Features for All Users\n\n**Objective:**\nRoll out the new dashboard features, which are currently behind a feature flag, to all users.\n\n**Feature Description:**\nRemove the feature flag that is currently hiding the new dashboard features. The new features should become visible to all users upon deployment.\n\n**Acceptance Criteria:**\n- The feature flag logic for the new dashboard is removed from the code.\n- All users can see and use the new dashboard features in the production environment after the next deployment."}
{"bad_prompt": "the user can't see the images", "good_prompt": "### Bug Fix: Images Not Loading Due to CORS Policy Error\n\n**Bug Description:**\nImages that are hosted on our separate CDN domain are not loading on the website. The browser's developer console shows a Cross-Origin Resource Sharing (CORS) policy error.\n\n**Steps to Reproduce:**\n1. Go to the homepage.\n2. Observe that the main hero image is missing.\n3. Check the browser's developer console for errors.\n\n**Expected Behavior:**\nAll images should load correctly.\n\n**Actual Behavior:**\nImages are blocked by the browser due to a CORS error.\n\n**Additional Context:**\nThe CDN server needs to be configured to send the correct CORS headers, specifically `Access-Control-Allow-Origin: https://www.our-site.com`."}
{"bad_prompt": "the user can't log out", "good_prompt": "### Bug Fix: The 'Logout' Button is Not Working\n\n**Bug Description:**\nClicking the 'Logout' button does not log the user out. The user remains logged in.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the 'Logout' button in the header.\n\n**Expected Behavior:**\nThe user should be logged out and redirected to the login page.\n\n**Actual Behavior:**\nNothing happens. The user remains logged in.\n\n**Additional Context:**\nThe click handler for the logout button is not correctly clearing the user's session from local storage and is not calling the backend API to invalidate the session token."}
{"bad_prompt": "the user can't see their own profile picture", "good_prompt": "### Bug Fix: User's Own Profile Picture is Not Displayed on Their Profile Page\n\n**Bug Description:**\nWhile the user's avatar is displayed correctly in the header, their full-size profile picture is not appearing on their own profile page. A placeholder image is shown instead.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Navigate to your own profile page.\n\n**Expected Behavior:**\nThe user's full-size profile picture should be displayed.\n\n**Actual Behavior:**\nA placeholder image is shown.\n\n**Additional Context:**\nThe component responsible for rendering the profile page is likely fetching the user data but is not correctly accessing the `profile_picture_url` attribute."}
{"bad_prompt": "the user can't see the terms of service", "good_prompt": "### Bug Fix: The 'Terms of Service' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Terms of Service' link in the website footer is pointing to a non-existent page (`/tos`) instead of the correct page (`/terms-of-service`).\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Terms of Service' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/terms-of-service` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the privacy policy", "good_prompt": "### Bug Fix: The 'Privacy Policy' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Privacy Policy' link in the website footer is pointing to an incorrect URL.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Privacy Policy' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/privacy-policy` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the cookie policy", "good_prompt": "### Bug Fix: The 'Cookie Policy' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Cookie Policy' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Cookie Policy' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/cookie-policy` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the careers page", "good_prompt": "### Bug Fix: The 'Careers' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Careers' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Careers' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/careers` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the press page", "good_prompt": "### Bug Fix: The 'Press' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Press' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Press' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/press` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the contact page", "good_prompt": "### Bug Fix: The 'Contact Us' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Contact Us' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Contact Us' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/contact` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the cookie policy", "good_prompt": "### Bug Fix: The 'Cookie Policy' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Cookie Policy' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Cookie Policy' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/cookie-policy` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the careers page", "good_prompt": "### Bug Fix: The 'Careers' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Careers' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Careers' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/careers` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the press page", "good_prompt": "### Bug Fix: The 'Press' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Press' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Press' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/press` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the contact page", "good_prompt": "### Bug Fix: The 'Contact Us' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Contact Us' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Contact Us' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/contact` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the blog page", "good_prompt": "### Bug Fix: The 'Blog' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Blog' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Blog' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/blog` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the about page", "good_prompt": "### Bug Fix: The 'About Us' Link in the Header is Broken\n\n**Bug Description:**\nThe 'About Us' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'About Us' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/about` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the products page", "good_prompt": "### Bug Fix: The 'Products' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Products' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Products' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/products` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the pricing page", "good_prompt": "### Bug Fix: The 'Pricing' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Pricing' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Pricing' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/pricing` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the documentation page", "good_prompt": "### Bug Fix: The 'Documentation' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Documentation' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Documentation' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/docs` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the login page", "good_prompt": "### Bug Fix: The 'Login' Button in the Header is Broken\n\n**Bug Description:**\nThe 'Login' button in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Login' button in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/login` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the register page", "good_prompt": "### Bug Fix: The 'Register' Button in the Header is Broken\n\n**Bug Description:**\nThe 'Register' button in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Register' button in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/register` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the dashboard page", "good_prompt": "### Bug Fix: The 'Dashboard' Link in the Header is Broken After Login\n\n**Bug Description:**\nAfter a user logs in, the 'Dashboard' link in the header is broken and leads to a 404 error.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the 'Dashboard' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to their dashboard page at `/dashboard`.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the settings page", "good_prompt": "### Bug Fix: The 'Settings' Link in the User Dropdown is Broken\n\n**Bug Description:**\nThe 'Settings' link in the user dropdown menu (in the header) is broken.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the user's avatar in the header to open the dropdown.\n3. Click the 'Settings' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/account/settings` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the logout page", "good_prompt": "### Bug Fix: The 'Logout' Link in the User Dropdown is Not Working Correctly\n\n**Bug Description:**\nClicking the 'Logout' link in the user dropdown menu does not log the user out properly. It redirects to a non-existent page.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the user's avatar in the header to open the dropdown.\n3. Click the 'Logout' link.\n\n**Expected Behavior:**\nThe user should be logged out and redirected to the homepage or login page.\n\n**Actual Behavior:**\nThe user is taken to a 404 Not Found error page and remains logged in."}
{"bad_prompt": "the user can't see the home page", "good_prompt": "### Bug Fix: The Site Logo Link to the Homepage is Broken\n\n**Bug Description:**\nClicking the site logo in the header, which should take the user to the homepage, is not working correctly.\n\n**Steps to Reproduce:**\n1. Navigate to any page other than the homepage (e.g., `/about`).\n2. Click the main site logo in the header.\n\n**Expected Behavior:**\nThe user should be taken back to the homepage (`/`).\n\n**Actual Behavior:**\nNothing happens, or the link points to an incorrect URL."}
{"bad_prompt": "the user can't see the footer", "good_prompt": "### Bug Fix: The Website Footer is Missing on Some Pages\n\n**Bug Description:**\nThe main website footer is not being displayed on certain pages, specifically the blog post detail pages.\n\n**Steps to Reproduce:**\n1. Navigate to any blog post detail page.\n2. Scroll to the bottom of the page.\n\n**Expected Behavior:**\nThe website footer should be visible.\n\n**Actual Behavior:**\nThe footer is missing.\n\n**Additional Context:**\nThe page template for blog posts is likely missing the component that renders the footer."}
{"bad_prompt": "the user can't see the favicon", "good_prompt": "### Bug Fix: The Favicon is Not Displayed\n\n**Bug Description:**\nThe website's favicon is not being displayed in the browser tab.\n\n**Steps to Reproduce:**\n1. Open the website in a browser.\n2. Look at the browser tab for the website.\n\n**Expected Behavior:**\nThe website's favicon should be displayed.\n\n**Actual Behavior:**\nA default browser icon is displayed.\n\n**Additional Context:**\nThe `<link>` tags for the favicon in the main HTML template are likely missing or have an incorrect `href` path."}
{"bad_prompt": "the user can't see the 404 page", "good_prompt": "### Bug Fix: The Custom 404 Page is Not Being Used\n\n**Bug Description:**\nWhen navigating to a non-existent page, the server's default 404 error page is shown instead of our custom-designed 404 page.\n\n**Steps to Reproduce:**\n1. Navigate to a URL that does not exist (e.g., `/this-page-does-not-exist`).\n\n**Expected Behavior:**\nOur custom 404 page should be displayed.\n\n**Actual Behavior:**\nThe default server or browser 404 page is shown.\n\n**Additional Context:**\nThe application's routing configuration needs to be updated to correctly point to our custom 404 page component for all unmatched routes."}
{"bad_prompt": "the user can't see the 500 page", "good_prompt": "### Bug Fix: The Custom 500 Page is Not Being Used\n\n**Bug Description:**\nWhen a server-side error occurs, the server's default 500 error page is shown instead of our custom-designed 500 page.\n\n**Steps to Reproduce:**\n1. Trigger a server-side error (e.g., by making an API call that is known to fail).\n\n**Expected Behavior:**\nOur custom 500 'Internal Server Error' page should be displayed.\n\n**Actual Behavior:**\nThe default server or browser 500 page is shown.\n\n**Additional Context:**\nThe application's error handling configuration needs to be updated to render our custom 500 page component when an unhandled server-side exception occurs."}
{"bad_prompt": "the user can't see the sitemap", "good_prompt": "### Bug Fix: The `sitemap.xml` File is Not Accessible\n\n**Bug Description:**\nNavigating to `/sitemap.xml` results in a 404 Not Found error. The sitemap is being generated during the build process but is not being placed in the correct public directory.\n\n**Steps to Reproduce:**\n1. Go to `/sitemap.xml`.\n\n**Expected Behavior:**\nThe XML content of the sitemap should be displayed.\n\n**Actual Behavior:**\nA 404 error is shown.\n\n**Additional Context:**\nThe build script that generates the sitemap needs to be updated to place the final `sitemap.xml` file into the root of the public output directory."}
{"bad_prompt": "the user can't see the rss feed", "good_prompt": "### Bug Fix: The RSS Feed at `/rss.xml` is Returning a 404 Error\n\n**Bug Description:**\nNavigating to `/rss.xml` results in a 404 Not Found error.\n\n**Steps to Reproduce:**\n1. Go to `/rss.xml`.\n\n**Expected Behavior:**\nThe XML content of the RSS feed should be displayed.\n\n**Actual Behavior:**\nA 404 error is shown.\n\n**Additional Context:**\nThe endpoint or file generation process for the RSS feed is not correctly configured."}
{"bad_prompt": "the user can't see the robots.txt file", "good_prompt": "### SEO: Create a `robots.txt` File\n\n**Objective:**\nCreate a `robots.txt` file to provide instructions to web crawlers and bots about which pages on our site should or should not be crawled.\n\n**Feature Description:**\nCreate a `robots.txt` file in the root of the public directory. The initial configuration should allow all user agents to crawl the entire site and should point to our `sitemap.xml`.\n\n**Acceptance Criteria:**\n- A `robots.txt` file is accessible at the root of the website.\n- The file contains the following content:\n  ```\n  User-agent: *\n  Allow: /\n  Sitemap: https://www.our-site.com/sitemap.xml\n  ```"}
{"bad_prompt": "the user can't see the humans.txt file", "good_prompt": "### Feature: Create a `humans.txt` File\n\n**Objective:**\nCreate a `humans.txt` file to give credit to the team that built the website.\n\n**Feature Description:**\nCreate a `humans.txt` file in the root of the public directory. The file should contain information about the development team and the technologies used.\n\n**Acceptance Criteria:**\n- A `humans.txt` file is accessible at the root of the website.\n- The file contains relevant information about the team."}
{"bad_prompt": "the user can't see the security.txt file", "good_prompt": "### Security: Create a `security.txt` File\n\n**Objective:**\nCreate a `security.txt` file to provide a point of contact for security researchers who may find vulnerabilities in our website.\n\n**Feature Description:**\nCreate a `security.txt` file in the `.well-known` directory of the public folder. The file should follow the standard format and include contact information for reporting security issues.\n\n**Acceptance Criteria:**\n- A `security.txt` file is accessible at `/.well-known/security.txt`.\n- The file contains a valid contact email for security reports."}
{"bad_prompt": "the user can't see the ads.txt file", "good_prompt": "### Advertising: Create an `ads.txt` File\n\n**Objective:**\nCreate an `ads.txt` file to declare the authorized sellers of our ad inventory and prevent ad fraud.\n\n**Feature Description:**\nCreate an `ads.txt` file in the root of the public directory. The file should contain the list of authorized ad sellers provided by the ad operations team.\n\n**Acceptance Criteria:**\n- An `ads.txt` file is accessible at the root of the website.\n- The file contains the correct information for our authorized ad sellers."}
{"bad_prompt": "the user can't see the app-ads.txt file", "good_prompt": "### Advertising: Create an `app-ads.txt` File\n\n**Objective:**\nCreate an `app-ads.txt` file for our mobile app to declare the authorized sellers of our in-app ad inventory.\n\n**Feature Description:**\nCreate an `app-ads.txt` file in the root of the public directory. The file should contain the list of authorized ad sellers for our mobile app.\n\n**Acceptance Criteria:**\n- An `app-ads.txt` file is accessible at the root of the website.\n- The file contains the correct information for our authorized mobile ad sellers."}
{"bad_prompt": "the user can't see the header", "good_prompt": "### Bug Fix: The Website Header is Missing on the Login Page\n\n**Bug Description:**\nThe main website header, which contains the logo and navigation, is missing on the login page.\n\n**Steps to Reproduce:**\n1. Navigate to the `/login` page.\n\n**Expected Behavior:**\nThe website header should be visible at the top of the page.\n\n**Actual Behavior:**\nThe header is missing.\n\n**Additional Context:**\nThe page template for the login page is likely using a different layout that excludes the main header component."}
{"bad_prompt": "the user can't see the search bar", "good_prompt": "### Bug Fix: The Search Bar is Missing on Mobile Devices\n\n**Bug Description:**\nThe global search bar, which should be in the header, is not visible on mobile devices.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Observe the header.\n\n**Expected Behavior:**\nThe search bar should be visible or accessible through the mobile menu.\n\n**Actual Behavior:**\nThe search bar is not present.\n\n**Additional Context:**\nThe CSS for the header component is likely hiding the search bar on smaller screen sizes. This needs to be adjusted to make it accessible."}
{"bad_prompt": "the user can't see the new post", "good_prompt": "### Bug Fix: New Blog Posts Are Not Appearing on the Blog Listing Page\n\n**Bug Description:**\nWhen a new blog post is created and published, it does not appear on the main `/blog` listing page.\n\n**Steps to Reproduce:**\n1. Create and publish a new blog post via the CMS.\n2. Go to the `/blog` page.\n\n**Expected Behavior:**\nThe new blog post should appear at the top of the list.\n\n**Actual Behavior:**\nThe new post is not listed.\n\n**Additional Context:**\nThe API endpoint that fetches the list of blog posts is likely not being revalidated or is being cached too aggressively. We need to implement a revalidation strategy (e.g., Incremental Static Regeneration - ISR) to ensure the list is updated when new posts are published."}
{"bad_prompt": "the user can't see the new product", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "the user can't see the new category", "good_prompt": "### Bug Fix: New Product Categories Are Not Appearing in the Filter Sidebar\n\n**Bug Description:**\nWhen a new product category is created in the admin panel, it does not appear in the list of filterable categories on the products page sidebar.\n\n**Steps to Reproduce:**\n1. Create a new product category in the admin panel.\n2. Go to the `/products` page.\n3. Observe the filter sidebar.\n\n**Expected Behavior:**\nThe new category should be listed as a filter option.\n\n**Actual Behavior:**\nThe new category is missing."}
{"bad_prompt": "the user can't see the new user", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "the user can't see the new order", "good_prompt": "### Bug Fix: New Orders Are Not Appearing in the User's Order History\n\n**Bug Description:**\nAfter a user successfully places a new order, the order does not appear in their 'Order History' page until they log out and log back in.\n\n**Steps to Reproduce:**\n1. Place a new order.\n2. Go to the 'Order History' page in your account.\n\n**Expected Behavior:**\nThe new order should be listed at the top of the order history.\n\n**Actual Behavior:**\nThe new order is not visible.\n\n**Additional Context:**\nThe frontend application is likely caching the order history data and is not re-fetching it after a new order is placed. The local state or cache needs to be invalidated and updated after a successful checkout."}
{"bad_prompt": "the user can't see the new comment", "good_prompt": "### Bug Fix: New Comments Are Not Appearing in Real-Time\n\n**Bug Description:**\nWhen a user posts a comment, it is successfully saved to the database, but it does not appear on the page for other users unless they manually refresh the page.\n\n**Steps to Reproduce:**\n1. Open a blog post in two different browsers (or as two different users).\n2. Post a comment in one browser.\n3. Observe the comment section in the second browser.\n\n**Expected Behavior:**\nThe new comment should appear in the second browser in real-time (or near real-time) without a refresh.\n\n**Actual Behavior:**\nThe comment section in the second browser does not update.\n\n**Additional Context:**\nTo solve this, we need to implement a real-time solution, such as using WebSockets or a library like Pusher to push new comments to all connected clients. Alternatively, the frontend could poll the server for new comments periodically."}
{"bad_prompt": "the user can't see the new profile picture", "good_prompt": "### Bug Fix: Other Users Cannot See a User's New Profile Picture\n\n**Bug Description:**\nWhen a user updates their profile picture, they can see the new picture, but other users still see their old one. This points to a caching issue.\n\n**Steps to Reproduce:**\n1. User A updates their profile picture.\n2. User B views User A's profile page.\n\n**Expected Behavior:**\nUser B should see User A's new profile picture.\n\n**Actual Behavior:**\nUser B still sees User A's old profile picture.\n\n**Additional Context:**\nThe URLs for profile pictures are likely being cached aggressively at the CDN or in the browser. We need to implement a cache-busting strategy, such as appending a version number or timestamp as a query parameter to the image URL whenever it's updated (e.g., `.../avatar.jpg?v=12345`)."}
{"bad_prompt": "the user can't log out", "good_prompt": "### Bug Fix: The 'Logout' Button is Not Working\n\n**Bug Description:**\nClicking the 'Logout' button does not log the user out. The user remains logged in.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the 'Logout' button in the header.\n\n**Expected Behavior:**\nThe user should be logged out and redirected to the login page.\n\n**Actual Behavior:**\nNothing happens. The user remains logged in.\n\n**Additional Context:**\nThe click handler for the logout button is not correctly clearing the user's session from local storage and is not calling the backend API to invalidate the session token."}
{"bad_prompt": "the user can't see their own profile picture", "good_prompt": "### Bug Fix: User's Own Profile Picture is Not Displayed on Their Profile Page\n\n**Bug Description:**\nWhile the user's avatar is displayed correctly in the header, their full-size profile picture is not appearing on their own profile page. A placeholder image is shown instead.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Navigate to your own profile page.\n\n**Expected Behavior:**\nThe user's full-size profile picture should be displayed.\n\n**Actual Behavior:**\nA placeholder image is shown.\n\n**Additional Context:**\nThe component responsible for rendering the profile page is likely fetching the user data but is not correctly accessing the `profile_picture_url` attribute."}
{"bad_prompt": "the user can't see the terms of service", "good_prompt": "### Bug Fix: The 'Terms of Service' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Terms of Service' link in the website footer is pointing to a non-existent page (`/tos`) instead of the correct page (`/terms-of-service`).\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Terms of Service' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/terms-of-service` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the privacy policy", "good_prompt": "### Bug Fix: The 'Privacy Policy' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Privacy Policy' link in the website footer is pointing to an incorrect URL.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Privacy Policy' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/privacy-policy` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the new user", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "the user can't see the new order", "good_prompt": "### Bug Fix: New Orders Are Not Appearing in the User's Order History\n\n**Bug Description:**\nAfter a user successfully places a new order, the order does not appear in their 'Order History' page until they log out and log back in.\n\n**Steps to Reproduce:**\n1. Place a new order.\n2. Go to the 'Order History' page in your account.\n\n**Expected Behavior:**\nThe new order should be listed at the top of the order history.\n\n**Actual Behavior:**\nThe new order is not visible.\n\n**Additional Context:**\nThe frontend application is likely caching the order history data and is not re-fetching it after a new order is placed. The local state or cache needs to be invalidated and updated after a successful checkout."}
{"bad_prompt": "the user can't see the new category", "good_prompt": "### Bug Fix: New Product Categories Are Not Appearing in the Filter Sidebar\n\n**Bug Description:**\nWhen a new product category is created in the admin panel, it does not appear in the list of filterable categories on the products page sidebar.\n\n**Steps to Reproduce:**\n1. Create a new product category in the admin panel.\n2. Go to the `/products` page.\n3. Observe the filter sidebar.\n\n**Expected Behavior:**\nThe new category should be listed as a filter option.\n\n**Actual Behavior:**\nThe new category is missing."}
{"bad_prompt": "the user can't see the new product", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "the user can't see the new post", "good_prompt": "### Bug Fix: New Blog Posts Are Not Appearing on the Blog Listing Page\n\n**Bug Description:**\nWhen a new blog post is created and published, it does not appear on the main `/blog` listing page.\n\n**Steps to Reproduce:**\n1. Create and publish a new blog post via the CMS.\n2. Go to the `/blog` page.\n\n**Expected Behavior:**\nThe new blog post should appear at the top of the list.\n\n**Actual Behavior:**\nThe new post is not listed.\n\n**Additional Context:**\nThe API endpoint that fetches the list of blog posts is likely not being revalidated or is being cached too aggressively. We need to implement a revalidation strategy (e.g., Incremental Static Regeneration - ISR) to ensure the list is updated when new posts are published."}
{"bad_prompt": "the user can't see the search bar", "good_prompt": "### Bug Fix: The Search Bar is Missing on Mobile Devices\n\n**Bug Description:**\nThe global search bar, which should be in the header, is not visible on mobile devices.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Observe the header.\n\n**Expected Behavior:**\nThe search bar should be visible or accessible through the mobile menu.\n\n**Actual Behavior:**\nThe search bar is not present.\n\n**Additional Context:**\nThe CSS for the header component is likely hiding the search bar on smaller screen sizes. This needs to be adjusted to make it accessible."}
{"bad_prompt": "the user can't see the header", "good_prompt": "### Bug Fix: The Website Header is Missing on the Login Page\n\n**Bug Description:**\nThe main website header, which contains the logo and navigation, is missing on the login page.\n\n**Steps to Reproduce:**\n1. Navigate to the `/login` page.\n\n**Expected Behavior:**\nThe website header should be visible at the top of the page.\n\n**Actual Behavior:**\nThe header is missing.\n\n**Additional Context:**\nThe page template for the login page is likely using a different layout that excludes the main header component."}
{"bad_prompt": "the user can't see the footer", "good_prompt": "### Bug Fix: The Website Footer is Missing on Some Pages\n\n**Bug Description:**\nThe main website footer is not being displayed on certain pages, specifically the blog post detail pages.\n\n**Steps to Reproduce:**\n1. Navigate to any blog post detail page.\n2. Scroll to the bottom of the page.\n\n**Expected Behavior:**\nThe website footer should be visible.\n\n**Actual Behavior:**\nThe footer is missing.\n\n**Additional Context:**\nThe page template for blog posts is likely missing the component that renders the footer."}
{"bad_prompt": "the user can't see the new profile picture", "good_prompt": "### Bug Fix: Other Users Cannot See a User's New Profile Picture\n\n**Bug Description:**\nWhen a user updates their profile picture, they can see the new picture, but other users still see their old one. This points to a caching issue.\n\n**Steps to Reproduce:**\n1. User A updates their profile picture.\n2. User B views User A's profile page.\n\n**Expected Behavior:**\nUser B should see User A's new profile picture.\n\n**Actual Behavior:**\nUser B still sees User A's old profile picture.\n\n**Additional Context:**\nThe URLs for profile pictures are likely being cached aggressively at the CDN or in the browser. We need to implement a cache-busting strategy, such as appending a version number or timestamp as a query parameter to the image URL whenever it's updated (e.g., `.../avatar.jpg?v=12345`)."}
{"bad_prompt": "the user can't see the new user", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "the user can't see the new order", "good_prompt": "### Bug Fix: New Orders Are Not Appearing in the User's Order History\n\n**Bug Description:**\nAfter a user successfully places a new order, the order does not appear in their 'Order History' page until they log out and log back in.\n\n**Steps to Reproduce:**\n1. Place a new order.\n2. Go to the 'Order History' page in your account.\n\n**Expected Behavior:**\nThe new order should be listed at the top of the order history.\n\n**Actual Behavior:**\nThe new order is not visible.\n\n**Additional Context:**\nThe frontend application is likely caching the order history data and is not re-fetching it after a new order is placed. The local state or cache needs to be invalidated and updated after a successful checkout."}
{"bad_prompt": "the user can't see the new category", "good_prompt": "### Bug Fix: New Product Categories Are Not Appearing in the Filter Sidebar\n\n**Bug Description:**\nWhen a new product category is created in the admin panel, it does not appear in the list of filterable categories on the products page sidebar.\n\n**Steps to Reproduce:**\n1. Create a new product category in the admin panel.\n2. Go to the `/products` page.\n3. Observe the filter sidebar.\n\n**Expected Behavior:**\nThe new category should be listed as a filter option.\n\n**Actual Behavior:**\nThe new category is missing."}
{"bad_prompt": "the user can't see the new product", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "the user can't see the new post", "good_prompt": "### Bug Fix: New Blog Posts Are Not Appearing on the Blog Listing Page\n\n**Bug Description:**\nWhen a new blog post is created and published, it does not appear on the main `/blog` listing page.\n\n**Steps to Reproduce:**\n1. Create and publish a new blog post via the CMS.\n2. Go to the `/blog` page.\n\n**Expected Behavior:**\nThe new blog post should appear at the top of the list.\n\n**Actual Behavior:**\nThe new post is not listed.\n\n**Additional Context:**\nThe API endpoint that fetches the list of blog posts is likely not being revalidated or is being cached too aggressively. We need to implement a revalidation strategy (e.g., Incremental Static Regeneration - ISR) to ensure the list is updated when new posts are published."}
{"bad_prompt": "the user can't see the search bar", "good_prompt": "### Bug Fix: The Search Bar is Missing on Mobile Devices\n\n**Bug Description:**\nThe global search bar, which should be in the header, is not visible on mobile devices.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Observe the header.\n\n**Expected Behavior:**\nThe search bar should be visible or accessible through the mobile menu.\n\n**Actual Behavior:**\nThe search bar is not present.\n\n**Additional Context:**\nThe CSS for the header component is likely hiding the search bar on smaller screen sizes. This needs to be adjusted to make it accessible."}
{"bad_prompt": "the user can't see the header", "good_prompt": "### Bug Fix: The Website Header is Missing on the Login Page\n\n**Bug Description:**\nThe main website header, which contains the logo and navigation, is missing on the login page.\n\n**Steps to Reproduce:**\n1. Navigate to the `/login` page.\n\n**Expected Behavior:**\nThe website header should be visible at the top of the page.\n\n**Actual Behavior:**\nThe header is missing.\n\n**Additional Context:**\nThe page template for the login page is likely using a different layout that excludes the main header component."}
{"bad_prompt": "the user can't see the footer", "good_prompt": "### Bug Fix: The Website Footer is Missing on Some Pages\n\n**Bug Description:**\nThe main website footer is not being displayed on certain pages, specifically the blog post detail pages.\n\n**Steps to Reproduce:**\n1. Navigate to any blog post detail page.\n2. Scroll to the bottom of the page.\n\n**Expected Behavior:**\nThe website footer should be visible.\n\n**Actual Behavior:**\nThe footer is missing.\n\n**Additional Context:**\nThe page template for blog posts is likely missing the component that renders the footer."}
{"bad_prompt": "the user can't see the new profile picture", "good_prompt": "### Bug Fix: Other Users Cannot See a User's New Profile Picture\n\n**Bug Description:**\nWhen a user updates their profile picture, they can see the new picture, but other users still see their old one. This points to a caching issue.\n\n**Steps to Reproduce:**\n1. User A updates their profile picture.\n2. User B views User A's profile page.\n\n**Expected Behavior:**\nUser B should see User A's new profile picture.\n\n**Actual Behavior:**\nUser B still sees User A's old profile picture.\n\n**Additional Context:**\nThe URLs for profile pictures are likely being cached aggressively at the CDN or in the browser. We need to implement a cache-busting strategy, such as appending a version number or timestamp as a query parameter to the image URL whenever it's updated (e.g., `.../avatar.jpg?v=12345`)."}
{"bad_prompt": "the user can't see the header", "good_prompt": "### Bug Fix: The Website Header is Missing on the Login Page\n\n**Bug Description:**\nThe main website header, which contains the logo and navigation, is missing on the login page.\n\n**Steps to Reproduce:**\n1. Navigate to the `/login` page.\n\n**Expected Behavior:**\nThe website header should be visible at the top of the page.\n\n**Actual Behavior:**\nThe header is missing.\n\n**Additional Context:**\nThe page template for the login page is likely using a different layout that excludes the main header component."}
{"bad_prompt": "the user can't see the footer", "good_prompt": "### Bug Fix: The Website Footer is Missing on Some Pages\n\n**Bug Description:**\nThe main website footer is not being displayed on certain pages, specifically the blog post detail pages.\n\n**Steps to Reproduce:**\n1. Navigate to any blog post detail page.\n2. Scroll to the bottom of the page.\n\n**Expected Behavior:**\nThe website footer should be visible.\n\n**Actual Behavior:**\nThe footer is missing.\n\n**Additional Context:**\nThe page template for blog posts is likely missing the component that renders the footer."}
{"bad_prompt": "the user can't see the search bar", "good_prompt": "### Bug Fix: The Search Bar is Missing on Mobile Devices\n\n**Bug Description:**\nThe global search bar, which should be in the header, is not visible on mobile devices.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Observe the header.\n\n**Expected Behavior:**\nThe search bar should be visible or accessible through the mobile menu.\n\n**Actual Behavior:**\nThe search bar is not present.\n\n**Additional Context:**\nThe CSS for the header component is likely hiding the search bar on smaller screen sizes. This needs to be adjusted to make it accessible."}
{"bad_prompt": "the user can't see the new product", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "the user can't see the new category", "good_prompt": "### Bug Fix: New Product Categories Are Not Appearing in the Filter Sidebar\n\n**Bug Description:**\nWhen a new product category is created in the admin panel, it does not appear in the list of filterable categories on the products page sidebar.\n\n**Steps to Reproduce:**\n1. Create a new product category in the admin panel.\n2. Go to the `/products` page.\n3. Observe the filter sidebar.\n\n**Expected Behavior:**\nThe new category should be listed as a filter option.\n\n**Actual Behavior:**\nThe new category is missing."}
{"bad_prompt": "the user can't see the new user", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "the user can't see the new order", "good_prompt": "### Bug Fix: New Orders Are Not Appearing in the User's Order History\n\n**Bug Description:**\nAfter a user successfully places a new order, the order does not appear in their 'Order History' page until they log out and log back in.\n\n**Steps to Reproduce:**\n1. Place a new order.\n2. Go to the 'Order History' page in your account.\n\n**Expected Behavior:**\nThe new order should be listed at the top of the order history.\n\n**Actual Behavior:**\nThe new order is not visible.\n\n**Additional Context:**\nThe frontend application is likely caching the order history data and is not re-fetching it after a new order is placed. The local state or cache needs to be invalidated and updated after a successful checkout."}
{"bad_prompt": "the user can't see the new comment", "good_prompt": "### Bug Fix: New Comments Are Not Appearing in Real-Time\n\n**Bug Description:**\nWhen a user posts a comment, it is successfully saved to the database, but it does not appear on the page for other users unless they manually refresh the page.\n\n**Steps to Reproduce:**\n1. Open a blog post in two different browsers (or as two different users).\n2. Post a comment in one browser.\n3. Observe the comment section in the second browser.\n\n**Expected Behavior:**\nThe new comment should appear in the second browser in real-time (or near real-time) without a refresh.\n\n**Actual Behavior:**\nThe comment section in the second browser does not update.\n\n**Additional Context:**\nTo solve this, we need to implement a real-time solution, such as using WebSockets or a library like Pusher to push new comments to all connected clients. Alternatively, the frontend could poll the server for new comments periodically."}
{"bad_prompt": "the user can't see the new profile picture", "good_prompt": "### Bug Fix: Other Users Cannot See a User's New Profile Picture\n\n**Bug Description:**\nWhen a user updates their profile picture, they can see the new picture, but other users still see their old one. This points to a caching issue.\n\n**Steps to Reproduce:**\n1. User A updates their profile picture.\n2. User B views User A's profile page.\n\n**Expected Behavior:**\nUser B should see User A's new profile picture.\n\n**Actual Behavior:**\nUser B still sees User A's old profile picture.\n\n**Additional Context:**\nThe URLs for profile pictures are likely being cached aggressively at the CDN or in the browser. We need to implement a cache-busting strategy, such as appending a version number or timestamp as a query parameter to the image URL whenever it's updated (e.g., `.../avatar.jpg?v=12345`)."}
{"bad_prompt": "the user can't see the new comment", "good_prompt": "### Bug Fix: New Comments Are Not Appearing in Real-Time\n\n**Bug Description:**\nWhen a user posts a comment, it is successfully saved to the database, but it does not appear on the page for other users unless they manually refresh the page.\n\n**Steps to Reproduce:**\n1. Open a blog post in two different browsers (or as two different users).\n2. Post a comment in one browser.\n3. Observe the comment section in the second browser.\n\n**Expected Behavior:**\nThe new comment should appear in the second browser in real-time (or near real-time) without a refresh.\n\n**Actual Behavior:**\nThe comment section in the second browser does not update.\n\n**Additional Context:**\nTo solve this, we need to implement a real-time solution, such as using WebSockets or a library like Pusher to push new comments to all connected clients. Alternatively, the frontend could poll the server for new comments periodically."}
{"bad_prompt": "the user can't see the new order", "good_prompt": "### Bug Fix: New Orders Are Not Appearing in the User's Order History\n\n**Bug Description:**\nAfter a user successfully places a new order, the order does not appear in their 'Order History' page until they log out and log back in.\n\n**Steps to Reproduce:**\n1. Place a new order.\n2. Go to the 'Order History' page in your account.\n\n**Expected Behavior:**\nThe new order should be listed at the top of the order history.\n\n**Actual Behavior:**\nThe new order is not visible.\n\n**Additional Context:**\nThe frontend application is likely caching the order history data and is not re-fetching it after a new order is placed. The local state or cache needs to be invalidated and updated after a successful checkout."}
{"bad_prompt": "the user can't see the new user", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "the user can't see the new category", "good_prompt": "### Bug Fix: New Product Categories Are Not Appearing in the Filter Sidebar\n\n**Bug Description:**\nWhen a new product category is created in the admin panel, it does not appear in the list of filterable categories on the products page sidebar.\n\n**Steps to Reproduce:**\n1. Create a new product category in the admin panel.\n2. Go to the `/products` page.\n3. Observe the filter sidebar.\n\n**Expected Behavior:**\nThe new category should be listed as a filter option.\n\n**Actual Behavior:**\nThe new category is missing."}
{"bad_prompt": "the user can't see the new product", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "the user can't see the new post", "good_prompt": "### Bug Fix: New Blog Posts Are Not Appearing on the Blog Listing Page\n\n**Bug Description:**\nWhen a new blog post is created and published, it does not appear on the main `/blog` listing page.\n\n**Steps to Reproduce:**\n1. Create and publish a new blog post via the CMS.\n2. Go to the `/blog` page.\n\n**Expected Behavior:**\nThe new blog post should appear at the top of the list.\n\n**Actual Behavior:**\nThe new post is not listed.\n\n**Additional Context:**\nThe API endpoint that fetches the list of blog posts is likely not being revalidated or is being cached too aggressively. We need to implement a revalidation strategy (e.g., Incremental Static Regeneration - ISR) to ensure the list is updated when new posts are published."}
{"bad_prompt": "the user can't see the search bar", "good_prompt": "### Bug Fix: The Search Bar is Missing on Mobile Devices\n\n**Bug Description:**\nThe global search bar, which should be in the header, is not visible on mobile devices.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Observe the header.\n\n**Expected Behavior:**\nThe search bar should be visible or accessible through the mobile menu.\n\n**Actual Behavior:**\nThe search bar is not present.\n\n**Additional Context:**\nThe CSS for the header component is likely hiding the search bar on smaller screen sizes. This needs to be adjusted to make it accessible."}
{"bad_prompt": "the user can't see the header", "good_prompt": "### Bug Fix: The Website Header is Missing on the Login Page\n\n**Bug Description:**\nThe main website header, which contains the logo and navigation, is missing on the login page.\n\n**Steps to Reproduce:**\n1. Navigate to the `/login` page.\n\n**Expected Behavior:**\nThe website header should be visible at the top of the page.\n\n**Actual Behavior:**\nThe header is missing.\n\n**Additional Context:**\nThe page template for the login page is likely using a different layout that excludes the main header component."}
{"bad_prompt": "the user can't see the footer", "good_prompt": "### Bug Fix: The Website Footer is Missing on Some Pages\n\n**Bug Description:**\nThe main website footer is not being displayed on certain pages, specifically the blog post detail pages.\n\n**Steps to Reproduce:**\n1. Navigate to any blog post detail page.\n2. Scroll to the bottom of the page.\n\n**Expected Behavior:**\nThe website footer should be visible.\n\n**Actual Behavior:**\nThe footer is missing.\n\n**Additional Context:**\nThe page template for blog posts is likely missing the component that renders the footer."}
{"bad_prompt": "the xser list is not sorted", "good_prompt": "### Bug Fix: The User List in the Admin Panel is Not Sorted Alphabetically\n\n**Bug Description:**\nThe list of users in the admin panel is displayed in a random order, making it difficult to find a specific user.\n\n**Steps to Reproduce:**\n1. Log in as an admin user.\n2. Go to the 'Users' page in the admin panel.\n3. Observe the order of the user list.\n\n**Expected Behavior:**\nThe user list should be sorted alphabetically by username by default.\n\n**Actual Behavior:**\nThe user list is not sorted."}
{"bad_prompt": "Could you the site is not using a CDN", "good_prompt": "### Performance: Use a CDN to Serve Static Assets\n\n**Objective:**\nImprove the global loading performance of the website by serving all static assets (CSS, JavaScript, images) from a Content Delivery Network (CDN).\n\n**Feature Description:**\nConfigure the application's build process and server to serve all static assets from a CDN (e.g., Cloudflare, AWS CloudFront). This involves updating the asset URLs in the application's HTML to point to the CDN.\n\n**Acceptance Criteria:**\n- All CSS, JS, and image files are served from the CDN's domain, not our origin server.\n- The website loads correctly with the assets being served from the CDN.\n- The page load time for users in different geographic regions is significantly reduced."}
{"bad_prompt": "the user can't upload a file", "good_prompt": "### Bug Fix: File Upload Fails for Files Larger Than 10MB\n\n**Bug Description:**\nThe file upload functionality is failing for any file larger than 10MB. The upload starts but then fails with a 'Request Entity Too Large' error.\n\n**Steps to Reproduce:**\n1. Try to upload a file that is larger than 10MB.\n2. Observe the error message.\n\n**Expected Behavior:**\nThe user should be able to upload files up to the intended limit of 50MB.\n\n**Actual Behavior:**\nThe upload fails for files over 10MB.\n\n**Additional Context:**\nThe file size limit needs to be increased in the web server's configuration (e.g., in Nginx's `client_max_body_size` directive) and in the application's backend configuration."}
{"bad_prompt": "Can you please the tests are failing", "good_prompt": "### Bug Fix: Resolve Failing Unit Tests in the CI Pipeline\n\n**Bug Description:**\nThe unit tests are currently failing in the Continuous Integration (CI) pipeline, which is preventing new changes from being merged. The failure appears to be in the `test_user_model.py` file.\n\n**Steps to Reproduce:**\n1. Push a new commit to any branch.\n2. Observe the CI pipeline status in GitHub Actions.\n3. See the failure in the 'Run Tests' step.\n\n**Expected Behavior:**\nAll unit tests should pass, and the CI pipeline should be green.\n\n**Actual Behavior:**\nThe 'Run Tests' step fails with an error related to a mock object in `test_user_model.py`.\n\n**Additional Context:**\nThe failure started after the `auth-library` dependency was updated. The logs from the CI run can be found here: [Link to CI logs]"}
{"bad_prompt": "need a search bar", "good_prompt": "### New Feature Request: Implement a Global Search Bar in the Header\n\n**User Story:**\nAs a user, I want a search bar that is always accessible in the header so that I can easily find articles from anywhere on the site.\n\n**Feature Description:**\nAdd a search input field to the right side of the main navigation header. This search bar should allow users to type a query and press Enter or click a search icon to navigate to a search results page.\n\n**Acceptance Criteria:**\n- A search input field and a search icon are visible in the site header.\n- Entering text and pressing Enter redirects the user to `/search?q=<query>`.\n- The search bar is responsive and displays correctly on all screen sizes."}
{"bad_prompt": "the user profile is slow", "good_prompt": "### Performance: Optimize User Profile Page Load Time\n\n**Objective:**\nThe user profile page is taking more than 3 seconds to load, which is a poor user experience. This task is to investigate and resolve the performance bottlenecks.\n\n**Acceptance Criteria:**\n- The load time of the user profile page should be reduced to under 1 second.\n- The number of database queries executed when loading the page should be minimized.\n- A performance audit should be conducted using browser developer tools to identify and fix any frontend bottlenecks (e.g., large images, render-blocking scripts)."}
{"bad_prompt": "the user can't log nut", "good_prompt": "### Bug Fix: The 'Logout' Button is Not Working\n\n**Bug Description:**\nClicking the 'Logout' button does not log the user out. The user remains logged in.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the 'Logout' button in the header.\n\n**Expected Behavior:**\nThe user should be logged out and redirected to the login page.\n\n**Actual Behavior:**\nNothing happens. The user remains logged in.\n\n**Additional Context:**\nThe click handler for the logout button is not correctly clearing the user's session from local storage and is not calling the backend API to invalidate the session token."}
{"bad_prompt": "Could you ths user can't see the new profile picture", "good_prompt": "### Bug Fix: Other Users Cannot See a User's New Profile Picture\n\n**Bug Description:**\nWhen a user updates their profile picture, they can see the new picture, but other users still see their old one. This points to a caching issue.\n\n**Steps to Reproduce:**\n1. User A updates their profile picture.\n2. User B views User A's profile page.\n\n**Expected Behavior:**\nUser B should see User A's new profile picture.\n\n**Actual Behavior:**\nUser B still sees User A's old profile picture.\n\n**Additional Context:**\nThe URLs for profile pictures are likely being cached aggressively at the CDN or in the browser. We need to implement a cache-busting strategy, such as appending a version number or timestamp as a query parameter to the image URL whenever it's updated (e.g., `.../avatar.jpg?v=12345`)."}
{"bad_prompt": "Can you please the user can't pay with paypal", "good_prompt": "### New Feature Request: Add PayPal as a Payment Option\n\n**User Story:**\nAs a customer, I want to be able to pay for my order using PayPal so that I can use my preferred payment method.\n\n**Feature Description:**\nIntegrate the PayPal payment gateway into our checkout process. The user should see a 'Pay with PayPal' button on the payment page. Clicking this button should initiate the PayPal checkout flow. After a successful payment, the user should be returned to our order confirmation page.\n\n**Acceptance Criteria:**\n- A 'Pay with PayPal' button is available on the checkout page.\n- The user can successfully complete a purchase using PayPal.\n- The order is marked as 'Paid' in our system after a successful PayPal transaction."}
{"bad_prompt": "Could you i forgot my pawsword", "good_prompt": "### New Feature Request: Implement a 'Forgot Password' Flow\n\n**User Story:**\nAs a user who has forgotten my password, I want to be able to reset it securely so that I can regain access to my account.\n\n**Feature Description:**\nImplement a 'Forgot Password' flow. This should include:\n1. A 'Forgot Password?' link on the login page.\n2. A page where the user can enter their email address to request a password reset.\n3. An email sent to the user with a secure, time-limited link to a password reset page.\n4. A page where the user can enter and confirm their new password.\n\n**Acceptance Criteria:**\n- The 'Forgot Password?' link exists and works.\n- The system correctly sends a password reset email with a unique token.\n- The user can successfully set a new password using the link in the email.\n- The old password is no longer valid after the reset."}
{"bad_prompt": "the user can't see the nvw order", "good_prompt": "### Bug Fix: New Orders Are Not Appearing in the User's Order History\n\n**Bug Description:**\nAfter a user successfully places a new order, the order does not appear in their 'Order History' page until they log out and log back in.\n\n**Steps to Reproduce:**\n1. Place a new order.\n2. Go to the 'Order History' page in your account.\n\n**Expected Behavior:**\nThe new order should be listed at the top of the order history.\n\n**Actual Behavior:**\nThe new order is not visible.\n\n**Additional Context:**\nThe frontend application is likely caching the order history data and is not re-fetching it after a new order is placed. The local state or cache needs to be invalidated and updated after a successful checkout."}
{"bad_prompt": "the api is not logging errors", "good_prompt": "### Observability: Add Error Logging to the API\n\n**Objective:**\nImprove our ability to debug issues by adding structured error logging to the API.\n\n**Feature Description:**\nIntegrate a logging library (like Winston or Pino) into the API. All caught errors in the API endpoints should be logged in a structured JSON format. The logs should include a timestamp, error message, stack trace, and request ID.\n\n**Acceptance Criteria:**\n- All API errors are logged to the console or a log file in JSON format.\n- The logs contain all the required fields (timestamp, message, stack trace, request ID)."}
{"bad_prompt": "the rss feed is brokbn", "good_prompt": "### Bug Fix: The RSS Feed is Not Valid XML\n\n**Bug Description:**\nThe RSS feed at `/rss.xml` is not working correctly because it is not generating valid XML. When trying to use the feed with an RSS reader, it fails with a parsing error.\n\n**Steps to Reproduce:**\n1. Go to `/rss.xml` in a browser or use a validator tool.\n2. Observe the XML parsing error.\n\n**Expected Behavior:**\nThe `/rss.xml` endpoint should return a valid RSS feed in the correct XML format.\n\n**Actual Behavior:**\nThe feed is malformed, likely due to unescaped characters in the content or an incorrect structure."}
{"bad_prompt": "hhe user can't see the header", "good_prompt": "### Bug Fix: The Website Header is Missing on the Login Page\n\n**Bug Description:**\nThe main website header, which contains the logo and navigation, is missing on the login page.\n\n**Steps to Reproduce:**\n1. Navigate to the `/login` page.\n\n**Expected Behavior:**\nThe website header should be visible at the top of the page.\n\n**Actual Behavior:**\nThe header is missing.\n\n**Additional Context:**\nThe page template for the login page is likely using a different layout that excludes the main header component."}
{"bad_prompt": "We need to the user can't see the footer", "good_prompt": "### Bug Fix: The Website Footer is Missing on Some Pages\n\n**Bug Description:**\nThe main website footer is not being displayed on certain pages, specifically the blog post detail pages.\n\n**Steps to Reproduce:**\n1. Navigate to any blog post detail page.\n2. Scroll to the bottom of the page.\n\n**Expected Behavior:**\nThe website footer should be visible.\n\n**Actual Behavior:**\nThe footer is missing.\n\n**Additional Context:**\nThe page template for blog posts is likely missing the component that renders the footer."}
{"bad_prompt": "the useh can't see the about page", "good_prompt": "### Bug Fix: The 'About Us' Link in the Header is Broken\n\n**Bug Description:**\nThe 'About Us' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'About Us' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/about` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Can you please the video player is broken", "good_prompt": "### Bug Fix: Embedded Video Player is Not Working on Firefox\n\n**Bug Description:**\nThe embedded video player on the `/watch/{id}` page does not load or play videos when using the Firefox browser. It works correctly in Chrome and Safari.\n\n**Steps to Reproduce:**\n1. Open the website in the Firefox browser.\n2. Navigate to any video page (e.g., `/watch/123`).\n3. Observe the video player area.\n\n**Expected Behavior:**\nThe video player should load and be able to play the video.\n\n**Actual Behavior:**\nThe video player is black and does not respond to clicks. There may be a console error related to video codecs or a browser-specific API."}
{"bad_prompt": "the user can't see the documentatoon page", "good_prompt": "### Bug Fix: The 'Documentation' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Documentation' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Documentation' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/docs` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Can you please i need to be able to elport my data", "good_prompt": "### New Feature Request: Allow Users to Export Their Data\n\n**User Story:**\nAs a user, I want to be able to export all my data in a machine-readable format (like JSON) to comply with data portability regulations (like GDPR).\n\n**Feature Description:**\nAdd a new 'Export Data' section to the user's account settings page. This section should have a button that allows the user to request a full export of their data. The export process should run in the background, and the user should be notified by email when their export file is ready to be downloaded.\n\n**Acceptance Criteria:**\n- A 'Request Data Export' button is available in the account settings.\n- Clicking the button triggers an asynchronous job to generate the export.\n- The user receives an email with a secure link to download their data as a JSON file."}
{"bad_prompt": "Could you the user can't see their own comments", "good_prompt": "### Bug Fix: User's Own Comments Are Not Displayed Until After a Page Refresh\n\n**Bug Description:**\nWhen a user submits a comment on a blog post, their comment does not appear on the page immediately. They have to manually refresh the page to see it. This is a poor user experience.\n\n**Steps to Reproduce:**\n1. Go to a blog post.\n2. Submit a new comment.\n3. Observe the comment section.\n\n**Expected Behavior:**\nThe new comment should be added to the comment list on the page instantly, without requiring a refresh.\n\n**Actual Behavior:**\nThe comment list does not update.\n\n**Additional Context:**\nThe frontend application needs to update its state with the new comment after the submission API call is successful. The API should return the newly created comment object, which the frontend can then append to its list of comments."}
{"bad_prompt": "Could you the user canft see the new user", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "i need to be able to see my profile", "good_prompt": "### New Feature Request: Create a User Profile Page\n\n**User Story:**\nAs a logged-in user, I want to be able to view my profile information so that I can see my account details.\n\n**Feature Description:**\nCreate a new 'Profile' page that is accessible from the user's account dashboard. This page should display the user's information, such as their username, email address, and registration date.\n\n**Acceptance Criteria:**\n- A new 'Profile' page is created at `/account/profile`.\n- The page displays the logged-in user's username and email address.\n- There is a link to this page from the main dashboard."}
{"bad_prompt": "We need to the user can't see their own comments", "good_prompt": "### Bug Fix: User's Own Comments Are Not Displayed Until After a Page Refresh\n\n**Bug Description:**\nWhen a user submits a comment on a blog post, their comment does not appear on the page immediately. They have to manually refresh the page to see it. This is a poor user experience.\n\n**Steps to Reproduce:**\n1. Go to a blog post.\n2. Submit a new comment.\n3. Observe the comment section.\n\n**Expected Behavior:**\nThe new comment should be added to the comment list on the page instantly, without requiring a refresh.\n\n**Actual Behavior:**\nThe comment list does not update.\n\n**Additional Context:**\nThe frontend application needs to update its state with the new comment after the submission API call is successful. The API should return the newly created comment object, which the frontend can then append to its list of comments."}
{"bad_prompt": "the usgr can't see the header", "good_prompt": "### Bug Fix: The Website Header is Missing on the Login Page\n\n**Bug Description:**\nThe main website header, which contains the logo and navigation, is missing on the login page.\n\n**Steps to Reproduce:**\n1. Navigate to the `/login` page.\n\n**Expected Behavior:**\nThe website header should be visible at the top of the page.\n\n**Actual Behavior:**\nThe header is missing.\n\n**Additional Context:**\nThe page template for the login page is likely using a different layout that excludes the main header component."}
{"bad_prompt": "the user can't see the careers page", "good_prompt": "### Bug Fix: The 'Careers' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Careers' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Careers' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/careers` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Could you the user profile picture is not updating", "good_prompt": "### Bug Fix: The User's Profile Picture Does Not Update After Uploading a New One\n\n**Bug Description:**\nAfter a user successfully uploads a new profile picture, the old picture is still displayed in the header and on their profile page. The new picture only appears after a hard refresh or clearing the cache.\n\n**Steps to Reproduce:**\n1. Upload a new profile picture on the profile settings page.\n2. Observe the avatar in the header.\n\n**Expected Behavior:**\nThe new profile picture should be displayed immediately throughout the application without requiring a hard refresh.\n\n**Actual Behavior:**\nThe old picture remains visible due to a caching issue.\n\n**Additional Context:**\nWe need to add a cache-busting parameter (like a timestamp or version number) to the image URL to ensure that the browser fetches the new version of the image after it has been updated."}
{"bad_prompt": "the user can't see the 500 page", "good_prompt": "### Bug Fix: The Custom 500 Page is Not Being Used\n\n**Bug Description:**\nWhen a server-side error occurs, the server's default 500 error page is shown instead of our custom-designed 500 page.\n\n**Steps to Reproduce:**\n1. Trigger a server-side error (e.g., by making an API call that is known to fail).\n\n**Expected Behavior:**\nOur custom 500 'Internal Server Error' page should be displayed.\n\n**Actual Behavior:**\nThe default server or browser 500 page is shown.\n\n**Additional Context:**\nThe application's error handling configuration needs to be updated to render our custom 500 page component when an unhandled server-side exception occurs."}
{"bad_prompt": "thu site is not translated correctly", "good_prompt": "### Bug Fix: Incomplete Translations on the Spanish Version of the Site\n\n**Bug Description:**\nSeveral sections of the Spanish version of the website (`/es`) are still showing English text. This is particularly noticeable in the footer and on the contact page.\n\n**Steps to Reproduce:**\n1. Switch the website's language to Spanish.\n2. Navigate to the footer and the `/es/contacto` page.\n\n**Expected Behavior:**\nAll text on the page should be in Spanish.\n\n**Actual Behavior:**\nSome text, especially in the footer links and form labels, remains in English.\n\n**Additional Context:**\nThe translation files (e.g., `es.json`) for the i18n library are likely missing the keys for these specific text elements. They need to be added."}
{"bad_prompt": "the mobile menu is broken", "good_prompt": "### Bug Fix: The Mobile Navigation Menu Does Not Close After Clicking a Link\n\n**Bug Description:**\nOn mobile devices, when the user opens the navigation menu and clicks on a link, the application navigates to the new page, but the menu remains open, covering the content.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Tap the hamburger icon to open the navigation menu.\n3. Tap on any link in the menu (e.g., 'About Us').\n\n**Expected Behavior:**\nThe application should navigate to the new page, and the mobile menu should automatically close.\n\n**Actual Behavior:**\nThe page changes, but the menu stays open."}
{"bad_prompt": "Could you the site looks bad in safari", "good_prompt": "### Bug Fix: Resolve CSS Styling Issues on Safari\n\n**Bug Description:**\nSeveral CSS styles, particularly those using Flexbox and Grid, are not rendering correctly in the Safari browser. This causes layout issues on several pages, including the homepage and the dashboard.\n\n**Steps to Reproduce:**\n1. Open the website in the latest version of Safari.\n2. Navigate to the homepage and the dashboard page.\n3. Observe the layout and styling compared to Chrome or Firefox.\n\n**Expected Behavior:**\nThe website's layout and styling should be consistent across all modern browsers, including Safari.\n\n**Actual Behavior:**\nIn Safari, some elements are misaligned, and the grid layout is broken.\n\n**Additional Context:**\nThis likely requires adding vendor prefixes for certain CSS properties (e.g., `-webkit-`) to ensure cross-browser compatibility."}
{"bad_prompt": "the login form is not autofilling", "good_prompt": "### Bug Fix: The Login Form is Not Allowing Browser Autofill\n\n**Bug Description:**\nBrowsers are not able to autofill the username and password fields on the login form. This is likely due to the use of non-standard `name` or `id` attributes on the input fields.\n\n**Steps to Reproduce:**\n1. Go to the login page.\n2. Try to use the browser's built-in password manager to autofill the login credentials.\n\n**Expected Behavior:**\nThe browser should be able to autofill the username and password fields.\n\n**Actual Behavior:**\nThe fields remain blank.\n\n**Additional Context:**\nTo fix this, we should ensure that the email/username input has `autocomplete=\"username\"` and the password input has `autocomplete=\"current-password\"`."}
{"bad_prompt": "Can you please the useh can't see the privacy policy", "good_prompt": "### Bug Fix: The 'Privacy Policy' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Privacy Policy' link in the website footer is pointing to an incorrect URL.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Privacy Policy' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/privacy-policy` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Can you please the user can't see the ads.txt file", "good_prompt": "### Advertising: Create an `ads.txt` File\n\n**Objective:**\nCreate an `ads.txt` file to declare the authorized sellers of our ad inventory and prevent ad fraud.\n\n**Feature Description:**\nCreate an `ads.txt` file in the root of the public directory. The file should contain the list of authorized ad sellers provided by the ad operations team.\n\n**Acceptance Criteria:**\n- An `ads.txt` file is accessible at the root of the website.\n- The file contains the correct information for our authorized ad sellers."}
{"bad_prompt": "the user can't see the security.txt file", "good_prompt": "### Security: Create a `security.txt` File\n\n**Objective:**\nCreate a `security.txt` file to provide a point of contact for security researchers who may find vulnerabilities in our website.\n\n**Feature Description:**\nCreate a `security.txt` file in the `.well-known` directory of the public folder. The file should follow the standard format and include contact information for reporting security issues.\n\n**Acceptance Criteria:**\n- A `security.txt` file is accessible at `/.well-known/security.txt`.\n- The file contains a valid contact email for security reports."}
{"bad_prompt": "Can you please the blog comments are not working", "good_prompt": "### Bug Fix: Submitting a Comment on a Blog Post Fails\n\n**Bug Description:**\nWhen a user tries to submit a comment on a blog post, the submission fails with a client-side JavaScript error. The error message in the console is `Uncaught TypeError: Cannot read properties of null (reading 'value')`.\n\n**Steps to Reproduce:**\n1. Go to any blog post page.\n2. Type a comment in the comment form.\n3. Click the 'Submit Comment' button.\n4. Observe the error in the browser's developer console.\n\n**Expected Behavior:**\nThe comment should be submitted successfully and appear on the page.\n\n**Actual Behavior:**\nThe submission fails, and a JavaScript error is thrown."}
{"bad_prompt": "the site xeeds a blog", "good_prompt": "### New Feature Request: Create a Blog\n\n**Objective:**\nCreate a new blog section on the website to publish articles and company news.\n\n**Feature Description:**\nCreate a new section of the website for a blog. This should include:\n1. A blog listing page (`/blog`) that displays a paginated list of all blog posts.\n2. A blog post detail page (`/blog/{slug}`) that displays the full content of a single post.\n3. A backend system (or integration with a headless CMS) to manage and create blog posts.\n\n**Acceptance Criteria:**\n- The `/blog` page lists all published blog posts.\n- Users can click on a post to view its full content.\n- The blog post detail page displays the post title, author, date, and content."}
{"bad_prompt": "the user can't see the logaut page", "good_prompt": "### Bug Fix: The 'Logout' Link in the User Dropdown is Not Working Correctly\n\n**Bug Description:**\nClicking the 'Logout' link in the user dropdown menu does not log the user out properly. It redirects to a non-existent page.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the user's avatar in the header to open the dropdown.\n3. Click the 'Logout' link.\n\n**Expected Behavior:**\nThe user should be logged out and redirected to the homepage or login page.\n\n**Actual Behavior:**\nThe user is taken to a 404 Not Found error page and remains logged in."}
{"bad_prompt": "Could you i need a way to contact support", "good_prompt": "### New Feature Request: Create a Customer Support Contact Form\n\n**User Story:**\nAs a user who is having a problem, I want a way to contact customer support directly through the website.\n\n**Feature Description:**\nCreate a new 'Contact Support' page, accessible from the main navigation. This page should contain a form where users can enter their name, email, subject, and a detailed description of their issue. Submitting the form should create a new ticket in our customer support system (e.g., Zendesk) via its API.\n\n**Acceptance Criteria:**\n- A new 'Contact Support' page is created.\n- The form on the page includes fields for name, email, subject, and description.\n- Submitting the form successfully creates a new ticket in Zendesk."}
{"bad_prompt": "Can you please the lzgin form is not autofilling", "good_prompt": "### Bug Fix: The Login Form is Not Allowing Browser Autofill\n\n**Bug Description:**\nBrowsers are not able to autofill the username and password fields on the login form. This is likely due to the use of non-standard `name` or `id` attributes on the input fields.\n\n**Steps to Reproduce:**\n1. Go to the login page.\n2. Try to use the browser's built-in password manager to autofill the login credentials.\n\n**Expected Behavior:**\nThe browser should be able to autofill the username and password fields.\n\n**Actual Behavior:**\nThe fields remain blank.\n\n**Additional Context:**\nTo fix this, we should ensure that the email/username input has `autocomplete=\"username\"` and the password input has `autocomplete=\"current-password\"`."}
{"bad_prompt": "Can you please the user can't see the dxshboard page", "good_prompt": "### Bug Fix: The 'Dashboard' Link in the Header is Broken After Login\n\n**Bug Description:**\nAfter a user logs in, the 'Dashboard' link in the header is broken and leads to a 404 error.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the 'Dashboard' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to their dashboard page at `/dashboard`.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the conpact page", "good_prompt": "### Bug Fix: The 'Contact Us' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Contact Us' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Contact Us' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/contact` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user caf't see the new post", "good_prompt": "### Bug Fix: New Blog Posts Are Not Appearing on the Blog Listing Page\n\n**Bug Description:**\nWhen a new blog post is created and published, it does not appear on the main `/blog` listing page.\n\n**Steps to Reproduce:**\n1. Create and publish a new blog post via the CMS.\n2. Go to the `/blog` page.\n\n**Expected Behavior:**\nThe new blog post should appear at the top of the list.\n\n**Actual Behavior:**\nThe new post is not listed.\n\n**Additional Context:**\nThe API endpoint that fetches the list of blog posts is likely not being revalidated or is being cached too aggressively. We need to implement a revalidation strategy (e.g., Incremental Static Regeneration - ISR) to ensure the list is updated when new posts are published."}
{"bad_prompt": "Can you please the video player bs broken", "good_prompt": "### Bug Fix: Embedded Video Player is Not Working on Firefox\n\n**Bug Description:**\nThe embedded video player on the `/watch/{id}` page does not load or play videos when using the Firefox browser. It works correctly in Chrome and Safari.\n\n**Steps to Reproduce:**\n1. Open the website in the Firefox browser.\n2. Navigate to any video page (e.g., `/watch/123`).\n3. Observe the video player area.\n\n**Expected Behavior:**\nThe video player should load and be able to play the video.\n\n**Actual Behavior:**\nThe video player is black and does not respond to clicks. There may be a console error related to video codecs or a browser-specific API."}
{"bad_prompt": "Could you the user can't see the new profile picture", "good_prompt": "### Bug Fix: Other Users Cannot See a User's New Profile Picture\n\n**Bug Description:**\nWhen a user updates their profile picture, they can see the new picture, but other users still see their old one. This points to a caching issue.\n\n**Steps to Reproduce:**\n1. User A updates their profile picture.\n2. User B views User A's profile page.\n\n**Expected Behavior:**\nUser B should see User A's new profile picture.\n\n**Actual Behavior:**\nUser B still sees User A's old profile picture.\n\n**Additional Context:**\nThe URLs for profile pictures are likely being cached aggressively at the CDN or in the browser. We need to implement a cache-busting strategy, such as appending a version number or timestamp as a query parameter to the image URL whenever it's updated (e.g., `.../avatar.jpg?v=12345`)."}
{"bad_prompt": "Could you the snock status is wrong", "good_prompt": "### Bug Fix: Product Stock Status is Not Updating Correctly\n\n**Bug Description:**\nWhen a product goes out of stock, its status on the product page still shows as 'In Stock'. The stock level is not being updated in real-time.\n\n**Steps to Reproduce:**\n1. Manually set the stock level of a product to 0 in the database.\n2. View that product's page on the website.\n\n**Expected Behavior:**\nThe product page should display an 'Out of Stock' message, and the 'Add to Cart' button should be disabled.\n\n**Actual Behavior:**\nThe product page still shows 'In Stock', and the user can add it to the cart.\n\n**Additional Context:**\nThere may be a caching issue with the product data API, or the frontend is not correctly re-validating the data."}
{"bad_prompt": "the user cxn create an account with a weak password", "good_prompt": "### Security: Enforce Stronger Password Requirements\n\n**Objective:**\nImprove the security of user accounts by enforcing stronger password requirements during registration and password changes.\n\n**Feature Description:**\nUpdate the password validation logic to require passwords to meet certain complexity requirements. Passwords must:\n1. Be at least 12 characters long.\n2. Contain at least one uppercase letter, one lowercase letter, one number, and one special character.\n\n**Acceptance Criteria:**\n- The registration and 'change password' forms display the new password requirements to the user.\n- The server rejects any passwords that do not meet these requirements with a clear error message."}
{"bad_prompt": "the user can't see the privacy policy", "good_prompt": "### Bug Fix: The 'Privacy Policy' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Privacy Policy' link in the website footer is pointing to an incorrect URL.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Privacy Policy' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/privacy-policy` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Could you the user avatars are broken", "good_prompt": "### Bug Fix: User Avatars Are Not Displaying and Show a Broken Image Icon\n\n**Bug Description:**\nUser avatars are not being displayed anywhere in the application (e.g., in the header, on profile pages, in comments). Instead, a broken image icon is shown.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Observe the user avatar in the top-right corner of the header.\n3. Go to a user's profile page.\n\n**Expected Behavior:**\nThe user's avatar image should be displayed correctly.\n\n**Actual Behavior:**\nA broken image icon is displayed.\n\n**Additional Context:**\nThe URL for the avatar images seems to be pointing to an incorrect path. The image URLs should be checked to ensure they are being generated correctly."}
{"bad_prompt": "We need to the site is not accessible", "good_prompt": "### Accessibility: Ensure All Images Have Alt Text\n\n**Objective:**\nImprove the accessibility of the website by ensuring that all `<img>` tags have descriptive `alt` attributes. This is crucial for users who use screen readers.\n\n**Acceptance Criteria:**\n- Perform a site-wide audit to identify all `<img>` tags that are missing an `alt` attribute or have a non-descriptive one (e.g., `alt=\"image\"`).\n- For each image, add a descriptive `alt` attribute that accurately describes the content of the image.\n- For purely decorative images, use an empty `alt` attribute (`alt=\"\"`).\n- Run an accessibility checker tool (like WAVE or Axe) to verify that all images have appropriate alt text."}
{"bad_prompt": "the user cax't see their own posts", "good_prompt": "### Bug Fix: A User's Own Posts Are Not Appearing on Their Profile Page\n\n**Bug Description:**\nThe 'My Posts' section on a user's profile page is always empty, even when the user has created posts.\n\n**Steps to Reproduce:**\n1. Create a new post.\n2. Go to your own profile page.\n3. Observe the 'My Posts' section.\n\n**Expected Behavior:**\nThe 'My Posts' section should display a list of all the posts created by the logged-in user.\n\n**Actual Behavior:**\nThe section is empty.\n\n**Additional Context:**\nThe API endpoint that fetches the posts for the profile page is likely not correctly filtering the posts by the user's ID."}
{"bad_prompt": "i need to see my order history", "good_prompt": "### New Feature Request: Create an Order History Page\n\n**User Story:**\nAs a customer, I want to be able to see a list of my past orders so that I can track my purchases.\n\n**Feature Description:**\nCreate a new 'Order History' page that is accessible from the user's account dashboard. This page should display a list of all the orders the user has placed. Each item in the list should show the order date, the total amount, the order status, and a link to view the order details.\n\n**Acceptance Criteria:**\n- A new 'Order History' page is created at `/account/orders`.\n- The page displays a list of the logged-in user's past orders.\n- Each order in the list displays the date, total, and status.\n- Clicking on an order takes the user to a detailed order view page."}
{"bad_prompt": "the api is missing a health check", "good_prompt": "### Feature: Add a Health Check Endpoint to the API\n\n**Objective:**\nCreate a new `/health` endpoint for the API that can be used by our monitoring services to check if the application is running and healthy.\n\n**Feature Description:**\nImplement a new GET endpoint at `/api/health`. This endpoint should perform a quick check to ensure that the application can connect to the database and then return a 200 OK status with a simple JSON response like `{\"status\": \"ok\"}`.\n\n**Acceptance Criteria:**\n- A GET request to `/api/health` returns a 200 OK status code.\n- The response body is `{\"status\": \"ok\"}`.\n- If the database connection fails, the endpoint should return a 503 Service Unavailable status."}
{"bad_prompt": "Could you the form doesn't work", "good_prompt": "### Bug Fix: The Contact Form Submission Fails with a Network Error\n\n**Bug Description:**\nWhen a user fills out and submits the contact form on the `/contact` page, the submission fails, and a 'Network Error' message is displayed to the user.\n\n**Steps to Reproduce:**\n1. Go to the `/contact` page.\n2. Fill in all the required fields (Name, Email, Message).\n3. Click the 'Submit' button.\n4. Observe the error message that appears below the form.\n\n**Expected Behavior:**\nThe form should submit successfully, and a 'Thank you for your message!' confirmation should be displayed.\n\n**Actual Behavior:**\nThe form submission fails, and a red 'Network Error' message is shown."}
{"bad_prompt": "the site needs a contact page", "good_prompt": "### New Feature Request: Create a 'Contact Us' Page\n\n**Objective:**\nCreate a 'Contact Us' page that provides users with our contact information and a contact form.\n\n**Feature Description:**\nCreate a new static page at `/contact`. This page should display our company's address, phone number, and email address. It should also include a contact form that users can fill out to send us a message directly. Submitting the form should send an email to our support team.\n\n**Acceptance Criteria:**\n- A new page is created at `/contact`.\n- The page displays the correct contact information.\n- The contact form includes fields for name, email, and message.\n- Submitting the form successfully sends an email to the support team."}
{"bad_prompt": "Can you please the user can't see the cookie policy", "good_prompt": "### Bug Fix: The 'Cookie Policy' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Cookie Policy' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Cookie Policy' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/cookie-policy` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "We need to the mobile app crashes", "good_prompt": "### Bug Fix: iOS App Crashes on Startup for iOS 17\n\n**Bug Description:**\nThe iOS application is crashing immediately upon startup for users running iOS 17. The app is unusable for these users.\n\n**Steps to Reproduce:**\n1. Install the app on a device running iOS 17.\n2. Try to open the app.\n\n**Expected Behavior:**\nThe app should open and function normally.\n\n**Actual Behavior:**\nThe app crashes immediately.\n\n**Additional Context:**\nThe crash logs indicate a null pointer exception in the `AppDelegate` related to the initialization of a third-party library that may not be compatible with iOS 17."}
{"bad_prompt": "the currency is wrong", "good_prompt": "### Bug Fix: Prices are Displayed in USD instead of EUR\n\n**Bug Description:**\nAll prices on the product and checkout pages are being displayed with a dollar sign ($) and are formatted as USD. The requirement is for all prices to be displayed in Euros (\u20ac).\n\n**Acceptance Criteria:**\n- All prices displayed to the user should use the Euro symbol (\u20ac).\n- The currency formatting should be updated sitewide.\n- A reusable currency formatting utility should be created to ensure consistency."}
{"bad_prompt": "Can you please images are slow", "good_prompt": "### Performance: Optimize Image Loading on the Homepage\n\n**Objective:**\nImprove the loading performance of the homepage by optimizing the images in the main hero section.\n\n**Acceptance Criteria:**\n- All JPEG and PNG images in the hero section should be compressed to reduce their file size by at least 50% without a significant loss in quality.\n- Images should be served in a next-gen format like WebP to browsers that support it.\n- Images should be lazy-loaded to prevent them from blocking the initial page render.\n\n**Additional Context:**\nThis task is critical for improving our Core Web Vitals score, specifically the Largest Contentful Paint (LCP)."}
{"bad_prompt": "Could you the site crashes on IE11", "good_prompt": "### Bug Fix: The Application Crashes on Internet Explorer 11\n\n**Bug Description:**\nThe entire application fails to load and crashes on Internet Explorer 11. The console shows a JavaScript error related to an unsupported ES6 feature.\n\n**Steps to Reproduce:**\n1. Open the website in an Internet Explorer 11 browser.\n2. Observe the blank page and the JavaScript error in the developer console.\n\n**Expected Behavior:**\nThe website should render correctly and be functional on Internet Explorer 11, even if with limited styling.\n\n**Actual Behavior:**\nThe page is blank, and a syntax error is thrown because of an unsupported feature (e.g., arrow functions, const/let).\n\n**Additional Context:**\nWe need to add a polyfill service or update our build process to transpile the JavaScript code to be compatible with IE11."}
{"bad_prompt": "Could you the user cah't see the products page", "good_prompt": "### Bug Fix: The 'Products' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Products' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Products' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/products` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the logout page", "good_prompt": "### Bug Fix: The 'Logout' Link in the User Dropdown is Not Working Correctly\n\n**Bug Description:**\nClicking the 'Logout' link in the user dropdown menu does not log the user out properly. It redirects to a non-existent page.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the user's avatar in the header to open the dropdown.\n3. Click the 'Logout' link.\n\n**Expected Behavior:**\nThe user should be logged out and redirected to the homepage or login page.\n\n**Actual Behavior:**\nThe user is taken to a 404 Not Found error page and remains logged in."}
{"bad_prompt": "We need to the paginatvon is not working", "good_prompt": "### Bug Fix: Pagination on the Blog Page is Broken\n\n**Bug Description:**\nWhen a user clicks on the 'Next Page' or a page number link in the pagination control on the blog page, it does not navigate to the correct set of posts. It appears to be reloading the same first page of posts.\n\n**Steps to Reproduce:**\n1. Go to the `/blog` page.\n2. Scroll down to the bottom to find the pagination control.\n3. Click on page '2' or the 'Next Page' link.\n\n**Expected Behavior:**\nThe page should display the next set of blog posts (e.g., posts 11-20).\n\n**Actual Behavior:**\nThe page reloads but still shows the first set of posts (posts 1-10)."}
{"bad_prompt": "We need to the user can't see the terms of service", "good_prompt": "### Bug Fix: The 'Terms of Service' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Terms of Service' link in the website footer is pointing to a non-existent page (`/tos`) instead of the correct page (`/terms-of-service`).\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Terms of Service' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/terms-of-service` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user list is not sorted", "good_prompt": "### Bug Fix: The User List in the Admin Panel is Not Sorted Alphabetically\n\n**Bug Description:**\nThe list of users in the admin panel is displayed in a random order, making it difficult to find a specific user.\n\n**Steps to Reproduce:**\n1. Log in as an admin user.\n2. Go to the 'Users' page in the admin panel.\n3. Observe the order of the user list.\n\n**Expected Behavior:**\nThe user list should be sorted alphabetically by username by default.\n\n**Actual Behavior:**\nThe user list is not sorted."}
{"bad_prompt": "Could you the user can'i see the login page", "good_prompt": "### Bug Fix: The 'Login' Button in the Header is Broken\n\n**Bug Description:**\nThe 'Login' button in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Login' button in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/login` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Can you please uhe user can't see the new features", "good_prompt": "### Feature Flag: Enable New Dashboard Features for All Users\n\n**Objective:**\nRoll out the new dashboard features, which are currently behind a feature flag, to all users.\n\n**Feature Description:**\nRemove the feature flag that is currently hiding the new dashboard features. The new features should become visible to all users upon deployment.\n\n**Acceptance Criteria:**\n- The feature flag logic for the new dashboard is removed from the code.\n- All users can see and use the new dashboard features in the production environment after the next deployment."}
{"bad_prompt": "Could you the stock status it wrong", "good_prompt": "### Bug Fix: Product Stock Status is Not Updating Correctly\n\n**Bug Description:**\nWhen a product goes out of stock, its status on the product page still shows as 'In Stock'. The stock level is not being updated in real-time.\n\n**Steps to Reproduce:**\n1. Manually set the stock level of a product to 0 in the database.\n2. View that product's page on the website.\n\n**Expected Behavior:**\nThe product page should display an 'Out of Stock' message, and the 'Add to Cart' button should be disabled.\n\n**Actual Behavior:**\nThe product page still shows 'In Stock', and the user can add it to the cart.\n\n**Additional Context:**\nThere may be a caching issue with the product data API, or the frontend is not correctly re-validating the data."}
{"bad_prompt": "the site needs a privacy policy", "good_prompt": "### Legal: Create and Add Privacy Policy Page\n\n**Objective:**\nCreate a 'Privacy Policy' page to comply with legal requirements and inform users about our data practices.\n\n**Feature Description:**\nCreate a new static page at `/privacy`. The content for this page will be provided by the legal department. This page must be linked from the website footer.\n\n**Acceptance Criteria:**\n- A new page is created at `/privacy`.\n- The legal team's content is added to the page.\n- A link to the 'Privacy Policy' page is present in the site footer on all pages."}
{"bad_prompt": "Could you the user can't see the settings page", "good_prompt": "### Bug Fix: The 'Settings' Link in the User Dropdown is Broken\n\n**Bug Description:**\nThe 'Settings' link in the user dropdown menu (in the header) is broken.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the user's avatar in the header to open the dropdown.\n3. Click the 'Settings' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/account/settings` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "add a link to the footer", "good_prompt": "### Content: Add 'About Us' Link to Site Footer\n\n**Objective:**\nAdd a link to the 'About Us' page in the footer of the website to improve navigation.\n\n**Acceptance Criteria:**\n- A new link with the text 'About Us' is present in the site footer.\n- The link correctly navigates to the `/about` page."}
{"bad_prompt": "Can you please the stock statux is wrong", "good_prompt": "### Bug Fix: Product Stock Status is Not Updating Correctly\n\n**Bug Description:**\nWhen a product goes out of stock, its status on the product page still shows as 'In Stock'. The stock level is not being updated in real-time.\n\n**Steps to Reproduce:**\n1. Manually set the stock level of a product to 0 in the database.\n2. View that product's page on the website.\n\n**Expected Behavior:**\nThe product page should display an 'Out of Stock' message, and the 'Add to Cart' button should be disabled.\n\n**Actual Behavior:**\nThe product page still shows 'In Stock', and the user can add it to the cart.\n\n**Additional Context:**\nThere may be a caching issue with the product data API, or the frontend is not correctly re-validating the data."}
{"bad_prompt": "the user can't see the new post", "good_prompt": "### Bug Fix: New Blog Posts Are Not Appearing on the Blog Listing Page\n\n**Bug Description:**\nWhen a new blog post is created and published, it does not appear on the main `/blog` listing page.\n\n**Steps to Reproduce:**\n1. Create and publish a new blog post via the CMS.\n2. Go to the `/blog` page.\n\n**Expected Behavior:**\nThe new blog post should appear at the top of the list.\n\n**Actual Behavior:**\nThe new post is not listed.\n\n**Additional Context:**\nThe API endpoint that fetches the list of blog posts is likely not being revalidated or is being cached too aggressively. We need to implement a revalidation strategy (e.g., Incremental Static Regeneration - ISR) to ensure the list is updated when new posts are published."}
{"bad_prompt": "Can you please need a search bar", "good_prompt": "### New Feature Request: Implement a Global Search Bar in the Header\n\n**User Story:**\nAs a user, I want a search bar that is always accessible in the header so that I can easily find articles from anywhere on the site.\n\n**Feature Description:**\nAdd a search input field to the right side of the main navigation header. This search bar should allow users to type a query and press Enter or click a search icon to navigate to a search results page.\n\n**Acceptance Criteria:**\n- A search input field and a search icon are visible in the site header.\n- Entering text and pressing Enter redirects the user to `/search?q=<query>`.\n- The search bar is responsive and displays correctly on all screen sizes."}
{"bad_prompt": "the user can't see the products page", "good_prompt": "### Bug Fix: The 'Products' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Products' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Products' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/products` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the documentation page", "good_prompt": "### Bug Fix: The 'Documentation' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Documentation' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Documentation' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/docs` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "implement a sitemap", "good_prompt": "### SEO: Generate a `sitemap.xml` File\n\n**Objective:**\nImprove the site's SEO by generating a `sitemap.xml` file that helps search engines discover and index all the pages on our website.\n\n**Feature Description:**\nCreate a script that automatically generates a `sitemap.xml` file. This script should be run as part of our build process. The sitemap should include the URLs for all static pages (e.g., homepage, about, contact) and all dynamic pages (e.g., blog posts, product pages).\n\n**Acceptance Criteria:**\n- A `sitemap.xml` file is generated in the root of the public directory after the build process.\n- The sitemap is correctly formatted XML.\n- The sitemap includes all public pages of the website."}
{"bad_prompt": "the user can't see the pronucts page", "good_prompt": "### Bug Fix: The 'Products' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Products' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Products' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/products` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Could you the api is missing a health check", "good_prompt": "### Feature: Add a Health Check Endpoint to the API\n\n**Objective:**\nCreate a new `/health` endpoint for the API that can be used by our monitoring services to check if the application is running and healthy.\n\n**Feature Description:**\nImplement a new GET endpoint at `/api/health`. This endpoint should perform a quick check to ensure that the application can connect to the database and then return a 200 OK status with a simple JSON response like `{\"status\": \"ok\"}`.\n\n**Acceptance Criteria:**\n- A GET request to `/api/health` returns a 200 OK status code.\n- The response body is `{\"status\": \"ok\"}`.\n- If the database connection fails, the endpoint should return a 503 Service Unavailable status."}
{"bad_prompt": "fix the header", "good_prompt": "### Bug Fix: Resolve Header Layout Issue on Mobile Devices\n\n**Bug Description:**\nThe main site header is not rendering correctly on mobile screen sizes (below 600px). The logo overlaps the navigation links, making them unclickable.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device or in a browser with the viewport width set to less than 600px.\n2. Observe the main header at the top of the page.\n\n**Expected Behavior:**\nThe header elements should be aligned properly, with no overlap. A hamburger menu should be visible to toggle the navigation links.\n\n**Actual Behavior:**\nThe logo and navigation links are overlapping."}
{"bad_prompt": "Can you please the used can't upload a file", "good_prompt": "### Bug Fix: File Upload Fails for Files Larger Than 10MB\n\n**Bug Description:**\nThe file upload functionality is failing for any file larger than 10MB. The upload starts but then fails with a 'Request Entity Too Large' error.\n\n**Steps to Reproduce:**\n1. Try to upload a file that is larger than 10MB.\n2. Observe the error message.\n\n**Expected Behavior:**\nThe user should be able to upload files up to the intended limit of 50MB.\n\n**Actual Behavior:**\nThe upload fails for files over 10MB.\n\n**Additional Context:**\nThe file size limit needs to be increased in the web server's configuration (e.g., in Nginx's `client_max_body_size` directive) and in the application's backend configuration."}
{"bad_prompt": "the site is not logging user actions", "good_prompt": "### Feature: Implement an Audit Log for User Actions\n\n**Objective:**\nCreate an audit log that records important user actions for security and compliance purposes.\n\n**Feature Description:**\nCreate a new logging system that records key user actions to a secure log file or database table. The actions to be logged should include:\n- User login/logout\n- Password change/reset\n- Profile information updates\n- Account deletion\nEach log entry should include a timestamp, the user's ID, the action performed, and the user's IP address.\n\n**Acceptance Criteria:**\n- All specified user actions are being logged correctly.\n- The audit log is stored securely and is accessible only to administrators."}
{"bad_prompt": "Could you the user can't see the register page", "good_prompt": "### Bug Fix: The 'Register' Button in the Header is Broken\n\n**Bug Description:**\nThe 'Register' button in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Register' button in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/register` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the currenfy is wrong", "good_prompt": "### Bug Fix: Prices are Displayed in USD instead of EUR\n\n**Bug Description:**\nAll prices on the product and checkout pages are being displayed with a dollar sign ($) and are formatted as USD. The requirement is for all prices to be displayed in Euros (\u20ac).\n\n**Acceptance Criteria:**\n- All prices displayed to the user should use the Euro symbol (\u20ac).\n- The currency formatting should be updated sitewide.\n- A reusable currency formatting utility should be created to ensure consistency."}
{"bad_prompt": "We need to the user can'b see the careers page", "good_prompt": "### Bug Fix: The 'Careers' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Careers' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Careers' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/careers` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the search results are wrong", "good_prompt": "### Bug Fix: Search Results Are Not Relevant to the Search Query\n\n**Bug Description:**\nThe search functionality is returning results that are not relevant to the user's search query. For example, a search for 'billing' returns articles about 'user profiles'.\n\n**Steps to Reproduce:**\n1. Go to the search page.\n2. Enter a specific query like 'billing'.\n3. Observe the list of results.\n\n**Expected Behavior:**\nThe search results should be highly relevant to the search term, with the most relevant articles appearing first.\n\n**Actual Behavior:**\nThe results seem to be semi-random and not related to the query.\n\n**Additional Context:**\nThe search algorithm may be misconfigured. It might be overweighting tags or categories instead of the content body."}
{"bad_prompt": "the user avatars are broken", "good_prompt": "### Bug Fix: User Avatars Are Not Displaying and Show a Broken Image Icon\n\n**Bug Description:**\nUser avatars are not being displayed anywhere in the application (e.g., in the header, on profile pages, in comments). Instead, a broken image icon is shown.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Observe the user avatar in the top-right corner of the header.\n3. Go to a user's profile page.\n\n**Expected Behavior:**\nThe user's avatar image should be displayed correctly.\n\n**Actual Behavior:**\nA broken image icon is displayed.\n\n**Additional Context:**\nThe URL for the avatar images seems to be pointing to an incorrect path. The image URLs should be checked to ensure they are being generated correctly."}
{"bad_prompt": "the table sorting is broken", "good_prompt": "### Bug Fix: Table Column Sorting Does Not Work Correctly for Dates\n\n**Bug Description:**\nWhen a user clicks on the header of the 'Date Created' column in the main data table, the sorting is incorrect. It appears to be sorting the dates alphabetically instead of chronologically.\n\n**Steps to Reproduce:**\n1. Go to the dashboard page.\n2. Click on the 'Date Created' column header to sort the table.\n3. Observe the order of the rows.\n\n**Expected Behavior:**\nThe table should be sorted chronologically by the 'Date Created' column, either ascending or descending.\n\n**Actual Behavior:**\nThe table is sorted alphabetically by the date string (e.g., 'April', 'August', 'December')."}
{"bad_prompt": "Could you the site is not yobile friendly", "good_prompt": "### Responsive Design: Ensure the Entire Website is Mobile-Friendly\n\n**Objective:**\nPerform a full audit and update of the website's CSS to ensure that all pages are fully responsive and provide an excellent user experience on mobile devices.\n\n**Feature Description:**\nReview every page of the website on a mobile device and fix any layout, styling, or usability issues. This includes, but is not limited to:\n- Ensuring that text is readable and does not require horizontal scrolling.\n- Making sure that all buttons and links are easily tappable.\n- Adapting complex components like tables and forms to a mobile-friendly layout.\n\n**Acceptance Criteria:**\n- All pages of the website render correctly and are usable on screen sizes down to 320px wide.\n- There are no horizontal scrollbars on any page.\n- The site passes Google's Mobile-Friendly Test."}
{"bad_prompt": "the user can't see the new produbt", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "the user can't see the new category", "good_prompt": "### Bug Fix: New Product Categories Are Not Appearing in the Filter Sidebar\n\n**Bug Description:**\nWhen a new product category is created in the admin panel, it does not appear in the list of filterable categories on the products page sidebar.\n\n**Steps to Reproduce:**\n1. Create a new product category in the admin panel.\n2. Go to the `/products` page.\n3. Observe the filter sidebar.\n\n**Expected Behavior:**\nThe new category should be listed as a filter option.\n\n**Actual Behavior:**\nThe new category is missing."}
{"bad_prompt": "We need to need a search bar", "good_prompt": "### New Feature Request: Implement a Global Search Bar in the Header\n\n**User Story:**\nAs a user, I want a search bar that is always accessible in the header so that I can easily find articles from anywhere on the site.\n\n**Feature Description:**\nAdd a search input field to the right side of the main navigation header. This search bar should allow users to type a query and press Enter or click a search icon to navigate to a search results page.\n\n**Acceptance Criteria:**\n- A search input field and a search icon are visible in the site header.\n- Entering text and pressing Enter redirects the user to `/search?q=<query>`.\n- The search bar is responsive and displays correctly on all screen sizes."}
{"bad_prompt": "We need to the api is returning the wrong dgta", "good_prompt": "### Bug Fix: The `/api/analytics` Endpoint Returns Data for the Wrong Date Range\n\n**Bug Description:**\nThe `/api/analytics` endpoint is supposed to return data for the date range specified in the query parameters (`startDate`, `endDate`). However, it is ignoring these parameters and always returning data for the last 30 days.\n\n**Steps to Reproduce:**\n1. Make a GET request to `/api/analytics?startDate=2023-01-01&endDate=2023-01-31`.\n2. Observe the data returned in the response.\n\n**Expected Behavior:**\nThe response should contain analytics data only for January 2023.\n\n**Actual Behavior:**\nThe response contains data for the last 30 days from the current date.\n\n**Additional Context:**\nThe backend logic for the endpoint is likely not parsing the `startDate` and `endDate` query parameters correctly and is falling back to a default date range."}
{"bad_prompt": "Could you the checkout is broken", "good_prompt": "### Bug Fix: Checkout Fails with 'Payment Gateway Error'\n\n**Bug Description:**\nWhen a user tries to complete a purchase, the checkout process fails at the payment step with a generic 'Payment Gateway Error'. No specific details are provided to the user.\n\n**Steps to Reproduce:**\n1. Add an item to the cart.\n2. Proceed to the checkout page.\n3. Fill in all the details and enter valid payment information.\n4. Click 'Complete Purchase'.\n\n**Expected Behavior:**\nThe payment should be processed successfully, and the user should be taken to an order confirmation page.\n\n**Actual Behavior:**\nThe process fails with a 'Payment Gateway Error'.\n\n**Additional Context:**\nThe server logs show a '401 Unauthorized' error from the Stripe API, suggesting that our API key may be incorrect or has expired."}
{"bad_prompt": "Can you please update the dependencies", "good_prompt": "### Chore: Update Outdated NPM Dependencies\n\n**Objective:**\nUpdate all outdated NPM dependencies to their latest stable versions to ensure the project is secure and up-to-date.\n\n**Acceptance Criteria:**\n- Run `npm outdated` to identify all outdated packages.\n- Update each package to its latest major or minor version as appropriate in the `package.json` file.\n- Run `npm install` to update the `package-lock.json` file.\n- After updating, run the test suite (`npm test`) to ensure that the updates have not introduced any breaking changes.\n- Manually test the core application flows (login, form submission) to verify functionality."}
{"bad_prompt": "the form doesn't work", "good_prompt": "### Bug Fix: The Contact Form Submission Fails with a Network Error\n\n**Bug Description:**\nWhen a user fills out and submits the contact form on the `/contact` page, the submission fails, and a 'Network Error' message is displayed to the user.\n\n**Steps to Reproduce:**\n1. Go to the `/contact` page.\n2. Fill in all the required fields (Name, Email, Message).\n3. Click the 'Submit' button.\n4. Observe the error message that appears below the form.\n\n**Expected Behavior:**\nThe form should submit successfully, and a 'Thank you for your message!' confirmation should be displayed.\n\n**Actual Behavior:**\nThe form submission fails, and a red 'Network Error' message is shown."}
{"bad_prompt": "the user canrt see the new profile picture", "good_prompt": "### Bug Fix: Other Users Cannot See a User's New Profile Picture\n\n**Bug Description:**\nWhen a user updates their profile picture, they can see the new picture, but other users still see their old one. This points to a caching issue.\n\n**Steps to Reproduce:**\n1. User A updates their profile picture.\n2. User B views User A's profile page.\n\n**Expected Behavior:**\nUser B should see User A's new profile picture.\n\n**Actual Behavior:**\nUser B still sees User A's old profile picture.\n\n**Additional Context:**\nThe URLs for profile pictures are likely being cached aggressively at the CDN or in the browser. We need to implement a cache-busting strategy, such as appending a version number or timestamp as a query parameter to the image URL whenever it's updated (e.g., `.../avatar.jpg?v=12345`)."}
{"bad_prompt": "the user can't see the ads.txt file", "good_prompt": "### Advertising: Create an `ads.txt` File\n\n**Objective:**\nCreate an `ads.txt` file to declare the authorized sellers of our ad inventory and prevent ad fraud.\n\n**Feature Description:**\nCreate an `ads.txt` file in the root of the public directory. The file should contain the list of authorized ad sellers provided by the ad operations team.\n\n**Acceptance Criteria:**\n- An `ads.txt` file is accessible at the root of the website.\n- The file contains the correct information for our authorized ad sellers."}
{"bad_prompt": "We need to i can't remove items from the cart", "good_prompt": "### Bug Fix: Removing an Item from the Shopping Cart Does Not Work\n\n**Bug Description:**\nWhen a user clicks the 'Remove' button next to an item in their shopping cart, the item is not removed, and the page simply reloads.\n\n**Steps to Reproduce:**\n1. Add an item to the shopping cart.\n2. Go to the shopping cart page.\n3. Click the 'Remove' button for the item.\n\n**Expected Behavior:**\nThe item should be removed from the shopping cart, and the cart total should be updated.\n\n**Actual Behavior:**\nThe page reloads, but the item remains in the cart."}
{"bad_prompt": "Could you the user can't see tpe new comment", "good_prompt": "### Bug Fix: New Comments Are Not Appearing in Real-Time\n\n**Bug Description:**\nWhen a user posts a comment, it is successfully saved to the database, but it does not appear on the page for other users unless they manually refresh the page.\n\n**Steps to Reproduce:**\n1. Open a blog post in two different browsers (or as two different users).\n2. Post a comment in one browser.\n3. Observe the comment section in the second browser.\n\n**Expected Behavior:**\nThe new comment should appear in the second browser in real-time (or near real-time) without a refresh.\n\n**Actual Behavior:**\nThe comment section in the second browser does not update.\n\n**Additional Context:**\nTo solve this, we need to implement a real-time solution, such as using WebSockets or a library like Pusher to push new comments to all connected clients. Alternatively, the frontend could poll the server for new comments periodically."}
{"bad_prompt": "Could you i need to be able to see my profile", "good_prompt": "### New Feature Request: Create a User Profile Page\n\n**User Story:**\nAs a logged-in user, I want to be able to view my profile information so that I can see my account details.\n\n**Feature Description:**\nCreate a new 'Profile' page that is accessible from the user's account dashboard. This page should display the user's information, such as their username, email address, and registration date.\n\n**Acceptance Criteria:**\n- A new 'Profile' page is created at `/account/profile`.\n- The page displays the logged-in user's username and email address.\n- There is a link to this page from the main dashboard."}
{"bad_prompt": "Could you the user can't see the tew comment", "good_prompt": "### Bug Fix: New Comments Are Not Appearing in Real-Time\n\n**Bug Description:**\nWhen a user posts a comment, it is successfully saved to the database, but it does not appear on the page for other users unless they manually refresh the page.\n\n**Steps to Reproduce:**\n1. Open a blog post in two different browsers (or as two different users).\n2. Post a comment in one browser.\n3. Observe the comment section in the second browser.\n\n**Expected Behavior:**\nThe new comment should appear in the second browser in real-time (or near real-time) without a refresh.\n\n**Actual Behavior:**\nThe comment section in the second browser does not update.\n\n**Additional Context:**\nTo solve this, we need to implement a real-time solution, such as using WebSockets or a library like Pusher to push new comments to all connected clients. Alternatively, the frontend could poll the server for new comments periodically."}
{"bad_prompt": "the user can't see the niw category", "good_prompt": "### Bug Fix: New Product Categories Are Not Appearing in the Filter Sidebar\n\n**Bug Description:**\nWhen a new product category is created in the admin panel, it does not appear in the list of filterable categories on the products page sidebar.\n\n**Steps to Reproduce:**\n1. Create a new product category in the admin panel.\n2. Go to the `/products` page.\n3. Observe the filter sidebar.\n\n**Expected Behavior:**\nThe new category should be listed as a filter option.\n\n**Actual Behavior:**\nThe new category is missing."}
{"bad_prompt": "the dropdown is not working on mobile", "good_prompt": "### Bug Fix: The Main Navigation Dropdown Menu is Not Clickable on Mobile\n\n**Bug Description:**\nThe dropdown menu in the main navigation bar cannot be opened on mobile devices (touch screens). Tapping on the menu item does nothing.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device or a browser in mobile emulation mode.\n2. Tap on the 'Services' navigation item, which is supposed to have a dropdown menu.\n\n**Expected Behavior:**\nA dropdown menu should appear, showing the sub-pages.\n\n**Actual Behavior:**\nNothing happens when the navigation item is tapped."}
{"bad_prompt": "Can you please the contact form has no spam protection", "good_prompt": "### Security: Add Spam Protection to the Contact Form\n\n**Objective:**\nProtect the contact form from spam submissions by implementing a CAPTCHA service.\n\n**Feature Description:**\nIntegrate a CAPTCHA service (like Google reCAPTCHA or hCaptcha) into the contact form. The user must successfully complete the CAPTCHA challenge before the form can be submitted.\n\n**Acceptance Criteria:**\n- A CAPTCHA widget is present on the contact form.\n- The form cannot be submitted unless the CAPTCHA is successfully validated on the server-side."}
{"bad_prompt": "add a button", "good_prompt": "### New Feature Request: Add 'Export to CSV' Button to a User Dashboard\n\n**User Story:**\nAs a user, I want to be able to export my data table as a CSV file so that I can perform my own analysis in other tools.\n\n**Feature Description:**\nImplement a new button labeled 'Export to CSV' on the main user dashboard. When clicked, this button should generate a CSV file of the data currently displayed in the main table and initiate a download for the user.\n\n**Acceptance Criteria:**\n- A button with the text 'Export to CSV' is present on the user dashboard.\n- Clicking the button triggers a CSV download.\n- The downloaded CSV file contains all the data from the table, including correct headers."}
{"bad_prompt": "Could you the api needs pagination", "good_prompt": "### Feature: Add Pagination to the `/api/posts` Endpoint\n\n**Objective:**\nThe `/api/posts` endpoint currently returns all posts at once, which is inefficient and slow. This task is to add pagination to this endpoint to improve performance.\n\n**Acceptance Criteria:**\n- The `/api/posts` endpoint should accept two optional query parameters: `page` (the page number, defaulting to 1) and `limit` (the number of items per page, defaulting to 10).\n- The API response should be a JSON object containing the list of posts for the requested page (`data`) and pagination metadata (`total`, `page`, `limit`).\n- For example, a request to `/api/posts?page=2&limit=5` should return posts 6-10."}
{"bad_prompt": "Could you the xser can't see the robots.txt file", "good_prompt": "### SEO: Create a `robots.txt` File\n\n**Objective:**\nCreate a `robots.txt` file to provide instructions to web crawlers and bots about which pages on our site should or should not be crawled.\n\n**Feature Description:**\nCreate a `robots.txt` file in the root of the public directory. The initial configuration should allow all user agents to crawl the entire site and should point to our `sitemap.xml`.\n\n**Acceptance Criteria:**\n- A `robots.txt` file is accessible at the root of the website.\n- The file contains the following content:\n  ```\n  User-agent: *\n  Allow: /\n  Sitemap: https://www.our-site.com/sitemap.xml\n  ```"}
{"bad_prompt": "Can you please make the site faster", "good_prompt": "### Performance: Implement Server-Side Caching for API Responses\n\n**Objective:**\nImprove the response time of the API by implementing a caching layer for frequently accessed, non-dynamic data.\n\n**Feature Description:**\nImplement a caching strategy (e.g., using Redis) for the `/api/products` endpoint. The data from this endpoint is the same for all users and only updates once per day. The cache should store the JSON response for this endpoint.\n\n**Acceptance Criteria:**\n- When the `/api/products` endpoint is called for the first time, it should fetch data from the database and store the result in the Redis cache with a 24-hour expiration.\n- Subsequent calls to the endpoint within 24 hours should return the cached data directly, without hitting the database.\n- The average response time for the endpoint should be reduced by at least 80% for cached responses."}
{"bad_prompt": "Can you please the sbte is not accessible", "good_prompt": "### Accessibility: Ensure All Images Have Alt Text\n\n**Objective:**\nImprove the accessibility of the website by ensuring that all `<img>` tags have descriptive `alt` attributes. This is crucial for users who use screen readers.\n\n**Acceptance Criteria:**\n- Perform a site-wide audit to identify all `<img>` tags that are missing an `alt` attribute or have a non-descriptive one (e.g., `alt=\"image\"`).\n- For each image, add a descriptive `alt` attribute that accurately describes the content of the image.\n- For purely decorative images, use an empty `alt` attribute (`alt=\"\"`).\n- Run an accessibility checker tool (like WAVE or Axe) to verify that all images have appropriate alt text."}
{"bad_prompt": "the user can't see the press page", "good_prompt": "### Bug Fix: The 'Press' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Press' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Press' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/press` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the search results page is ugly", "good_prompt": "### UI Improvement: Redesign the Search Results Page\n\n**Objective:**\nImprove the design and usability of the search results page to provide a better user experience.\n\n**Feature Description:**\nRedesign the `/search` page based on the new mockups. The new design should include:\n1. A cleaner layout for each search result item, with a clear title, a short snippet of the content, and the URL.\n2. Highlighting the user's search query within the search results.\n3. A more prominent display of the total number of results found.\n\n**Acceptance Criteria:**\n- The layout of the search results page matches the new design in Figma.\n- The user's search term is highlighted in the titles and snippets of the results.\n- The total number of results is displayed clearly at the top of the page.\n\n**Additional Context:**\nFigma mockups: [Link to Figma]"}
{"bad_prompt": "Can you please the site looks bad in safari", "good_prompt": "### Bug Fix: Resolve CSS Styling Issues on Safari\n\n**Bug Description:**\nSeveral CSS styles, particularly those using Flexbox and Grid, are not rendering correctly in the Safari browser. This causes layout issues on several pages, including the homepage and the dashboard.\n\n**Steps to Reproduce:**\n1. Open the website in the latest version of Safari.\n2. Navigate to the homepage and the dashboard page.\n3. Observe the layout and styling compared to Chrome or Firefox.\n\n**Expected Behavior:**\nThe website's layout and styling should be consistent across all modern browsers, including Safari.\n\n**Actual Behavior:**\nIn Safari, some elements are misaligned, and the grid layout is broken.\n\n**Additional Context:**\nThis likely requires adding vendor prefixes for certain CSS properties (e.g., `-webkit-`) to ensure cross-browser compatibility."}
{"bad_prompt": "Could you the cookie banner is annoying", "good_prompt": "### UX Improvement: Make the Cookie Banner Less Intrusive\n\n**Objective:**\nImprove the user experience by making the cookie consent banner less intrusive while still being compliant with regulations.\n\n**Feature Description:**\nRedesign the current cookie banner, which is a large modal that blocks the center of the page. The new design should be a small banner at the bottom of the screen that does not block the main content. The user should be able to dismiss it easily.\n\n**Acceptance Criteria:**\n- The cookie consent banner is displayed at the bottom of the screen.\n- The banner does not cover up any critical navigation or content.\n- The user's consent choice is saved correctly, and the banner does not reappear on subsequent visits."}
{"bad_prompt": "Can you please the umer can't see the new order", "good_prompt": "### Bug Fix: New Orders Are Not Appearing in the User's Order History\n\n**Bug Description:**\nAfter a user successfully places a new order, the order does not appear in their 'Order History' page until they log out and log back in.\n\n**Steps to Reproduce:**\n1. Place a new order.\n2. Go to the 'Order History' page in your account.\n\n**Expected Behavior:**\nThe new order should be listed at the top of the order history.\n\n**Actual Behavior:**\nThe new order is not visible.\n\n**Additional Context:**\nThe frontend application is likely caching the order history data and is not re-fetching it after a new order is placed. The local state or cache needs to be invalidated and updated after a successful checkout."}
{"bad_prompt": "We need to the user can't see the humans.txt file", "good_prompt": "### Feature: Create a `humans.txt` File\n\n**Objective:**\nCreate a `humans.txt` file to give credit to the team that built the website.\n\n**Feature Description:**\nCreate a `humans.txt` file in the root of the public directory. The file should contain information about the development team and the technologies used.\n\n**Acceptance Criteria:**\n- A `humans.txt` file is accessible at the root of the website.\n- The file contains relevant information about the team."}
{"bad_prompt": "update the colors", "good_prompt": "### UI Improvement: Update Site Color Palette to Match New Branding Guidelines\n\n**Objective:**\nUpdate the website's color scheme to align with the new branding guidelines provided by the design team.\n\n**Acceptance Criteria:**\n- The primary color used for buttons and links should be changed from the old blue (`#007bff`) to the new brand purple (`#6f42c1`).\n- The background color of the header and footer should be updated to the new dark grey (`#343a40`).\n- All text colors should be checked for accessibility and contrast against the new background colors.\n\n**Additional Context:**\nThe new branding guidelines can be found here: [Link to Figma/Style Guide]"}
{"bad_prompt": "the welcome email is ugly", "good_prompt": "### UI Improvement: Redesign the New User Welcome Email\n\n**Objective:**\nRedesign the welcome email that is sent to new users upon registration to be more visually appealing and on-brand.\n\n**Feature Description:**\nUpdate the HTML template for the welcome email to match the new design provided by the marketing team. This includes using the brand's fonts and colors, adding the company logo, and updating the copy to be more welcoming.\n\n**Acceptance Criteria:**\n- The welcome email's design matches the new template in Figma.\n- The email renders correctly in major email clients (Gmail, Outlook, Apple Mail).\n\n**Additional Context:**\nThe Figma design for the new email template is here: [Link to Figma]"}
{"bad_prompt": "Can you please the useu can't see the logout page", "good_prompt": "### Bug Fix: The 'Logout' Link in the User Dropdown is Not Working Correctly\n\n**Bug Description:**\nClicking the 'Logout' link in the user dropdown menu does not log the user out properly. It redirects to a non-existent page.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the user's avatar in the header to open the dropdown.\n3. Click the 'Logout' link.\n\n**Expected Behavior:**\nThe user should be logged out and redirected to the homepage or login page.\n\n**Actual Behavior:**\nThe user is taken to a 404 Not Found error page and remains logged in."}
{"bad_prompt": "Can you please the search results are wrong", "good_prompt": "### Bug Fix: Search Results Are Not Relevant to the Search Query\n\n**Bug Description:**\nThe search functionality is returning results that are not relevant to the user's search query. For example, a search for 'billing' returns articles about 'user profiles'.\n\n**Steps to Reproduce:**\n1. Go to the search page.\n2. Enter a specific query like 'billing'.\n3. Observe the list of results.\n\n**Expected Behavior:**\nThe search results should be highly relevant to the search term, with the most relevant articles appearing first.\n\n**Actual Behavior:**\nThe results seem to be semi-random and not related to the query.\n\n**Additional Context:**\nThe search algorithm may be misconfigured. It might be overweighting tags or categories instead of the content body."}
{"bad_prompt": "Could you the user data export is not working", "good_prompt": "### Bug Fix: The User Data Export Feature is Timing Out\n\n**Bug Description:**\nWhen a user requests to export their data, the process times out and fails for users with a large amount of data. The server returns a 504 Gateway Timeout error.\n\n**Steps to Reproduce:**\n1. Log in as a user with a large amount of data (e.g., user ID 456).\n2. Go to the 'Export Data' page in the account settings.\n3. Click the 'Export My Data' button.\n\n**Expected Behavior:**\nThe system should generate a data export file and provide a download link to the user, even for large accounts.\n\n**Actual Behavior:**\nThe request hangs for a long time and then fails with a 504 error.\n\n**Additional Context:**\nThe data export process is currently running as a synchronous web request. This should be refactored into an asynchronous background job. The user should be notified (e.g., by email) when their export is ready for download."}
{"bad_prompt": "the privacy policy page is missing", "good_prompt": "### Content: Create a 'Privacy Policy' Page\n\n**Objective:**\nCreate a new 'Privacy Policy' page to inform users about how we collect, use, and protect their data.\n\n**Feature Description:**\nCreate a new static page at `/privacy-policy`. The content for this page will be provided by the legal team. The page should be linked in the website's footer.\n\n**Acceptance Criteria:**\n- A new page is created at `/privacy-policy`.\n- The content provided by the legal team is added to the page.\n- A link to the 'Privacy Policy' page is present in the site footer."}
{"bad_prompt": "the back button is not working", "good_prompt": "### Bug Fix: The Browser's Back Button Does Not Work as Expected in the Single Page Application\n\n**Bug Description:**\nAfter navigating between a few pages within our Single Page Application (SPA), using the browser's back button does not take the user to the previously viewed page. Instead, it either does nothing or takes them out of the application entirely.\n\n**Steps to Reproduce:**\n1. Go to the homepage.\n2. Click a link to the '/about' page.\n3. Click a link to the '/contact' page.\n4. Click the browser's back button.\n\n**Expected Behavior:**\nThe user should be taken back to the '/about' page.\n\n**Actual Behavior:**\nThe URL might change, but the page content does not, or the user is taken to the page they were on before visiting our site.\n\n**Additional Context:**\nThis is likely an issue with our client-side router. We need to ensure that we are using the History API (`pushState`) correctly to create new entries in the browser's session history for each navigation."}
{"bad_prompt": "the contact form has no spam protectaon", "good_prompt": "### Security: Add Spam Protection to the Contact Form\n\n**Objective:**\nProtect the contact form from spam submissions by implementing a CAPTCHA service.\n\n**Feature Description:**\nIntegrate a CAPTCHA service (like Google reCAPTCHA or hCaptcha) into the contact form. The user must successfully complete the CAPTCHA challenge before the form can be submitted.\n\n**Acceptance Criteria:**\n- A CAPTCHA widget is present on the contact form.\n- The form cannot be submitted unless the CAPTCHA is successfully validated on the server-side."}
{"bad_prompt": "the user can't see phe cookie policy", "good_prompt": "### Bug Fix: The 'Cookie Policy' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Cookie Policy' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Cookie Policy' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/cookie-policy` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Could you the table sorting is broken", "good_prompt": "### Bug Fix: Table Column Sorting Does Not Work Correctly for Dates\n\n**Bug Description:**\nWhen a user clicks on the header of the 'Date Created' column in the main data table, the sorting is incorrect. It appears to be sorting the dates alphabetically instead of chronologically.\n\n**Steps to Reproduce:**\n1. Go to the dashboard page.\n2. Click on the 'Date Created' column header to sort the table.\n3. Observe the order of the rows.\n\n**Expected Behavior:**\nThe table should be sorted chronologically by the 'Date Created' column, either ascending or descending.\n\n**Actual Behavior:**\nThe table is sorted alphabetically by the date string (e.g., 'April', 'August', 'December')."}
{"bad_prompt": "the user can't see the new proiuct", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "i need to be able to delete my account", "good_prompt": "### New Feature Request: Add Account Deletion Functionality\n\n**User Story:**\nAs a user, I want to be able to permanently delete my account and all my data from the platform.\n\n**Feature Description:**\nAdd a 'Delete Account' button in the 'Account Settings' section of the user profile page. When clicked, this button should open a confirmation modal that warns the user that the action is irreversible. If the user confirms, the system should permanently delete the user's account and all associated data from the database.\n\n**Acceptance Criteria:**\n- A 'Delete Account' button is present in the user's settings.\n- Clicking the button shows a confirmation modal with a clear warning.\n- Confirming the deletion permanently removes the user's data.\n- The user is logged out and redirected to the homepage after deletion."}
{"bad_prompt": "Could you the api is returning the wrong data", "good_prompt": "### Bug Fix: The `/api/analytics` Endpoint Returns Data for the Wrong Date Range\n\n**Bug Description:**\nThe `/api/analytics` endpoint is supposed to return data for the date range specified in the query parameters (`startDate`, `endDate`). However, it is ignoring these parameters and always returning data for the last 30 days.\n\n**Steps to Reproduce:**\n1. Make a GET request to `/api/analytics?startDate=2023-01-01&endDate=2023-01-31`.\n2. Observe the data returned in the response.\n\n**Expected Behavior:**\nThe response should contain analytics data only for January 2023.\n\n**Actual Behavior:**\nThe response contains data for the last 30 days from the current date.\n\n**Additional Context:**\nThe backend logic for the endpoint is likely not parsing the `startDate` and `endDate` query parameters correctly and is falling back to a default date range."}
{"bad_prompt": "We need to it's broken", "good_prompt": "### Bug Fix: API Endpoint `api/users/{id}` Throws a 500 Error\n\n**Bug Description:**\nThe API endpoint responsible for fetching a single user's data is consistently returning a 500 Internal Server Error when a valid user ID is provided.\n\n**Steps to Reproduce:**\n1. Send a GET request to the endpoint `/api/users/123` (where 123 is a valid user ID).\n2. Observe the HTTP response code.\n\n**Expected Behavior:**\nThe API should return a 200 OK status code with the user's data in the response body.\n\n**Actual Behavior:**\nThe API returns a 500 Internal Server Error."}
{"bad_prompt": "Could you the blog comments are not working", "good_prompt": "### Bug Fix: Submitting a Comment on a Blog Post Fails\n\n**Bug Description:**\nWhen a user tries to submit a comment on a blog post, the submission fails with a client-side JavaScript error. The error message in the console is `Uncaught TypeError: Cannot read properties of null (reading 'value')`.\n\n**Steps to Reproduce:**\n1. Go to any blog post page.\n2. Type a comment in the comment form.\n3. Click the 'Submit Comment' button.\n4. Observe the error in the browser's developer console.\n\n**Expected Behavior:**\nThe comment should be submitted successfully and appear on the page.\n\n**Actual Behavior:**\nThe submission fails, and a JavaScript error is thrown."}
{"bad_prompt": "i forgot my passrord", "good_prompt": "### New Feature Request: Implement a 'Forgot Password' Flow\n\n**User Story:**\nAs a user who has forgotten my password, I want to be able to reset it securely so that I can regain access to my account.\n\n**Feature Description:**\nImplement a 'Forgot Password' flow. This should include:\n1. A 'Forgot Password?' link on the login page.\n2. A page where the user can enter their email address to request a password reset.\n3. An email sent to the user with a secure, time-limited link to a password reset page.\n4. A page where the user can enter and confirm their new password.\n\n**Acceptance Criteria:**\n- The 'Forgot Password?' link exists and works.\n- The system correctly sends a password reset email with a unique token.\n- The user can successfully set a new password using the link in the email.\n- The old password is no longer valid after the reset."}
{"bad_prompt": "the user can't see the search bar", "good_prompt": "### Bug Fix: The Search Bar is Missing on Mobile Devices\n\n**Bug Description:**\nThe global search bar, which should be in the header, is not visible on mobile devices.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Observe the header.\n\n**Expected Behavior:**\nThe search bar should be visible or accessible through the mobile menu.\n\n**Actual Behavior:**\nThe search bar is not present.\n\n**Additional Context:**\nThe CSS for the header component is likely hiding the search bar on smaller screen sizes. This needs to be adjusted to make it accessible."}
{"bad_prompt": "Could you the user can't see the blog page", "good_prompt": "### Bug Fix: The 'Blog' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Blog' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Blog' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/blog` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Could you the site nieds a cookie policy page", "good_prompt": "### Content: Create a 'Cookie Policy' Page\n\n**Objective:**\nCreate a new 'Cookie Policy' page to provide users with detailed information about the cookies we use on our website.\n\n**Feature Description:**\nCreate a new static page at `/cookie-policy`. The content for this page will be provided by the legal team. The page should be linked in the website's footer and from the cookie consent banner.\n\n**Acceptance Criteria:**\n- A new page is created at `/cookie-policy`.\n- The content provided by the legal team is added to the page.\n- A link to the 'Cookie Policy' page is present in the site footer."}
{"bad_prompt": "the user can't see the new order", "good_prompt": "### Bug Fix: New Orders Are Not Appearing in the User's Order History\n\n**Bug Description:**\nAfter a user successfully places a new order, the order does not appear in their 'Order History' page until they log out and log back in.\n\n**Steps to Reproduce:**\n1. Place a new order.\n2. Go to the 'Order History' page in your account.\n\n**Expected Behavior:**\nThe new order should be listed at the top of the order history.\n\n**Actual Behavior:**\nThe new order is not visible.\n\n**Additional Context:**\nThe frontend application is likely caching the order history data and is not re-fetching it after a new order is placed. The local state or cache needs to be invalidated and updated after a successful checkout."}
{"bad_prompt": "Could you the user can't log out", "good_prompt": "### Bug Fix: The 'Logout' Button is Not Working\n\n**Bug Description:**\nClicking the 'Logout' button does not log the user out. The user remains logged in.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the 'Logout' button in the header.\n\n**Expected Behavior:**\nThe user should be logged out and redirected to the login page.\n\n**Actual Behavior:**\nNothing happens. The user remains logged in.\n\n**Additional Context:**\nThe click handler for the logout button is not correctly clearing the user's session from local storage and is not calling the backend API to invalidate the session token."}
{"bad_prompt": "images are slow", "good_prompt": "### Performance: Optimize Image Loading on the Homepage\n\n**Objective:**\nImprove the loading performance of the homepage by optimizing the images in the main hero section.\n\n**Acceptance Criteria:**\n- All JPEG and PNG images in the hero section should be compressed to reduce their file size by at least 50% without a significant loss in quality.\n- Images should be served in a next-gen format like WebP to browsers that support it.\n- Images should be lazy-loaded to prevent them from blocking the initial page render.\n\n**Additional Context:**\nThis task is critical for improving our Core Web Vitals score, specifically the Largest Contentful Paint (LCP)."}
{"bad_prompt": "the sqarch results page is ugly", "good_prompt": "### UI Improvement: Redesign the Search Results Page\n\n**Objective:**\nImprove the design and usability of the search results page to provide a better user experience.\n\n**Feature Description:**\nRedesign the `/search` page based on the new mockups. The new design should include:\n1. A cleaner layout for each search result item, with a clear title, a short snippet of the content, and the URL.\n2. Highlighting the user's search query within the search results.\n3. A more prominent display of the total number of results found.\n\n**Acceptance Criteria:**\n- The layout of the search results page matches the new design in Figma.\n- The user's search term is highlighted in the titles and snippets of the results.\n- The total number of results is displayed clearly at the top of the page.\n\n**Additional Context:**\nFigma mockups: [Link to Figma]"}
{"bad_prompt": "the user can't see tge new profile picture", "good_prompt": "### Bug Fix: Other Users Cannot See a User's New Profile Picture\n\n**Bug Description:**\nWhen a user updates their profile picture, they can see the new picture, but other users still see their old one. This points to a caching issue.\n\n**Steps to Reproduce:**\n1. User A updates their profile picture.\n2. User B views User A's profile page.\n\n**Expected Behavior:**\nUser B should see User A's new profile picture.\n\n**Actual Behavior:**\nUser B still sees User A's old profile picture.\n\n**Additional Context:**\nThe URLs for profile pictures are likely being cached aggressively at the CDN or in the browser. We need to implement a cache-busting strategy, such as appending a version number or timestamp as a query parameter to the image URL whenever it's updated (e.g., `.../avatar.jpg?v=12345`)."}
{"bad_prompt": "the api keys are visible in the code", "good_prompt": "### Security: Remove Hardcoded API Keys from the Frontend Code\n\n**Bug Description:**\nAPI keys for a third-party service are currently hardcoded directly in the frontend JavaScript code, making them publicly visible. This is a major security vulnerability.\n\n**Objective:**\nRemove the hardcoded API keys from the client-side code and move them to a secure backend environment.\n\n**Feature Description:**\n1. Create a new backend API endpoint (e.g., `/api/third-party-service`).\n2. Move the logic that calls the third-party service from the frontend to this new backend endpoint.\n3. Store the API keys securely as environment variables on the server.\n4. Update the frontend code to call our new backend endpoint instead of the third-party service directly.\n\n**Acceptance Criteria:**\n- The hardcoded API keys are completely removed from all frontend JavaScript files.\n- The functionality that relies on the third-party service still works correctly by going through our secure backend endpoint."}
{"bad_prompt": "the user can't see the sitemap", "good_prompt": "### Bug Fix: The `sitemap.xml` File is Not Accessible\n\n**Bug Description:**\nNavigating to `/sitemap.xml` results in a 404 Not Found error. The sitemap is being generated during the build process but is not being placed in the correct public directory.\n\n**Steps to Reproduce:**\n1. Go to `/sitemap.xml`.\n\n**Expected Behavior:**\nThe XML content of the sitemap should be displayed.\n\n**Actual Behavior:**\nA 404 error is shown.\n\n**Additional Context:**\nThe build script that generates the sitemap needs to be updated to place the final `sitemap.xml` file into the root of the public output directory."}
{"bad_prompt": "add a 404 paxe", "good_prompt": "### New Feature Request: Create a Custom 404 'Not Found' Page\n\n**Objective:**\nCreate a custom, user-friendly 404 'Not Found' page to improve the user experience when they navigate to a non-existent URL.\n\n**Feature Description:**\nDesign and implement a custom 404 page that replaces the default server/browser error. The page should have a friendly message, an illustration or graphic, and a clear link or button to return to the homepage.\n\n**Acceptance Criteria:**\n- Navigating to a URL that does not exist (e.g., `/a-fake-page`) displays the new custom 404 page.\n- The page includes a helpful message like 'Page Not Found'.\n- The page includes a prominent link or button that takes the user back to the homepage."}
{"bad_prompt": "the user can't log in with facebook", "good_prompt": "### Bug Fix: Facebook OAuth Login Fails with 'Invalid Scopes' Error\n\n**Bug Description:**\nWhen a user attempts to log in using the 'Login with Facebook' option, the process fails after they authorize the app. They are redirected back to our site with an error message indicating 'Invalid Scopes'.\n\n**Steps to Reproduce:**\n1. Go to the login page.\n2. Click 'Login with Facebook'.\n3. Authorize the application in the Facebook popup.\n\n**Expected Behavior:**\nThe user should be logged in successfully.\n\n**Actual Behavior:**\nThe user is redirected back with an error.\n\n**Additional Context:**\nThe scopes we are requesting in our OAuth call (e.g., `email`, `public_profile`) likely do not match the scopes that are enabled for our application in the Facebook Developer portal. The configurations need to be synchronized."}
{"bad_prompt": "Could you the user can't see the new category", "good_prompt": "### Bug Fix: New Product Categories Are Not Appearing in the Filter Sidebar\n\n**Bug Description:**\nWhen a new product category is created in the admin panel, it does not appear in the list of filterable categories on the products page sidebar.\n\n**Steps to Reproduce:**\n1. Create a new product category in the admin panel.\n2. Go to the `/products` page.\n3. Observe the filter sidebar.\n\n**Expected Behavior:**\nThe new category should be listed as a filter option.\n\n**Actual Behavior:**\nThe new category is missing."}
{"bad_prompt": "the site looks bad in safari", "good_prompt": "### Bug Fix: Resolve CSS Styling Issues on Safari\n\n**Bug Description:**\nSeveral CSS styles, particularly those using Flexbox and Grid, are not rendering correctly in the Safari browser. This causes layout issues on several pages, including the homepage and the dashboard.\n\n**Steps to Reproduce:**\n1. Open the website in the latest version of Safari.\n2. Navigate to the homepage and the dashboard page.\n3. Observe the layout and styling compared to Chrome or Firefox.\n\n**Expected Behavior:**\nThe website's layout and styling should be consistent across all modern browsers, including Safari.\n\n**Actual Behavior:**\nIn Safari, some elements are misaligned, and the grid layout is broken.\n\n**Additional Context:**\nThis likely requires adding vendor prefixes for certain CSS properties (e.g., `-webkit-`) to ensure cross-browser compatibility."}
{"bad_prompt": "Can you please the user can't upload a file", "good_prompt": "### Bug Fix: File Upload Fails for Files Larger Than 10MB\n\n**Bug Description:**\nThe file upload functionality is failing for any file larger than 10MB. The upload starts but then fails with a 'Request Entity Too Large' error.\n\n**Steps to Reproduce:**\n1. Try to upload a file that is larger than 10MB.\n2. Observe the error message.\n\n**Expected Behavior:**\nThe user should be able to upload files up to the intended limit of 50MB.\n\n**Actual Behavior:**\nThe upload fails for files over 10MB.\n\n**Additional Context:**\nThe file size limit needs to be increased in the web server's configuration (e.g., in Nginx's `client_max_body_size` directive) and in the application's backend configuration."}
{"bad_prompt": "implement a 'save for later' feature", "good_prompt": "### New Feature Request: Implement a 'Save for Later' Feature in the Shopping Cart\n\n**User Story:**\nAs a shopper, I want to be able to move items from my shopping cart to a 'Save for Later' list so that I can purchase them at a later time without losing them.\n\n**Feature Description:**\nAdd a 'Save for Later' button to each item in the shopping cart. When a user clicks this button, the item should be removed from the cart and added to a new 'Saved for Later' section on the same page. The user should also be able to move items from the 'Saved for Later' list back to the cart.\n\n**Acceptance Criteria:**\n- Each item in the cart has a 'Save for Later' button.\n- Clicking the button moves the item to the 'Saved for Later' list.\n- The 'Saved for Later' list has a 'Move to Cart' button for each item."}
{"bad_prompt": "Can you please the user can't see the new category", "good_prompt": "### Bug Fix: New Product Categories Are Not Appearing in the Filter Sidebar\n\n**Bug Description:**\nWhen a new product category is created in the admin panel, it does not appear in the list of filterable categories on the products page sidebar.\n\n**Steps to Reproduce:**\n1. Create a new product category in the admin panel.\n2. Go to the `/products` page.\n3. Observe the filter sidebar.\n\n**Expected Behavior:**\nThe new category should be listed as a filter option.\n\n**Actual Behavior:**\nThe new category is missing."}
{"bad_prompt": "Could you the site ic down", "good_prompt": "### Outage: The Website is Currently Down (502 Bad Gateway)\n\n**Bug Description:**\nThe entire website is currently inaccessible and is returning a 502 Bad Gateway error. This indicates an issue with the upstream server or application.\n\n**Steps to Reproduce:**\n1. Navigate to the website's homepage.\n2. Observe the 502 error page.\n\n**Expected Behavior:**\nThe website should load correctly.\n\n**Actual Behavior:**\nA 502 Bad Gateway error is displayed.\n\n**Additional Context:**\nThis is a critical production issue. The server logs need to be checked immediately to identify the root cause. This could be a crashed application process or a misconfiguration in the load balancer."}
{"bad_prompt": "the user can't see the pricing page", "good_prompt": "### Bug Fix: The 'Pricing' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Pricing' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Pricing' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/pricing` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "We need to the terms of service page is missing", "good_prompt": "### Content: Create a 'Terms of Service' Page\n\n**Objective:**\nCreate a new 'Terms of Service' page to provide users with the legal terms and conditions for using our website and services.\n\n**Feature Description:**\nCreate a new static page at `/terms-of-service`. The content for this page will be provided by the legal team. The page should be linked in the website's footer.\n\n**Acceptance Criteria:**\n- A new page is created at `/terms-of-service`.\n- The content provided by the legal team is added to the page.\n- A link to the 'Terms of Service' page is present in the site footer."}
{"bad_prompt": "the site iu not using a CDN", "good_prompt": "### Performance: Use a CDN to Serve Static Assets\n\n**Objective:**\nImprove the global loading performance of the website by serving all static assets (CSS, JavaScript, images) from a Content Delivery Network (CDN).\n\n**Feature Description:**\nConfigure the application's build process and server to serve all static assets from a CDN (e.g., Cloudflare, AWS CloudFront). This involves updating the asset URLs in the application's HTML to point to the CDN.\n\n**Acceptance Criteria:**\n- All CSS, JS, and image files are served from the CDN's domain, not our origin server.\n- The website loads correctly with the assets being served from the CDN.\n- The page load time for users in different geographic regions is significantly reduced."}
{"bad_prompt": "the user can't change their email", "good_prompt": "### Bug Fix: Changing Email Address Fails\n\n**Bug Description:**\nWhen a user tries to change their email address in their profile settings, it fails with an error message 'This email is already taken', even when the new email address is unique.\n\n**Steps to Reproduce:**\n1. Go to the user profile page.\n2. Click 'Edit' next to the email address.\n3. Enter a new, unique email address.\n4. Click 'Save'.\n\n**Expected Behavior:**\nThe user's email address should be updated successfully.\n\n**Actual Behavior:**\nAn error message 'This email is already taken' is displayed.\n\n**Additional Context:**\nThe validation logic is likely checking the new email against all users, including the current user, which causes it to always find a match (itself). The validation should exclude the current user's ID."}
{"bad_prompt": "We need to the api is missing a health check", "good_prompt": "### Feature: Add a Health Check Endpoint to the API\n\n**Objective:**\nCreate a new `/health` endpoint for the API that can be used by our monitoring services to check if the application is running and healthy.\n\n**Feature Description:**\nImplement a new GET endpoint at `/api/health`. This endpoint should perform a quick check to ensure that the application can connect to the database and then return a 200 OK status with a simple JSON response like `{\"status\": \"ok\"}`.\n\n**Acceptance Criteria:**\n- A GET request to `/api/health` returns a 200 OK status code.\n- The response body is `{\"status\": \"ok\"}`.\n- If the database connection fails, the endpoint should return a 503 Service Unavailable status."}
{"bad_prompt": "Can you please the site is down", "good_prompt": "### Outage: The Website is Currently Down (502 Bad Gateway)\n\n**Bug Description:**\nThe entire website is currently inaccessible and is returning a 502 Bad Gateway error. This indicates an issue with the upstream server or application.\n\n**Steps to Reproduce:**\n1. Navigate to the website's homepage.\n2. Observe the 502 error page.\n\n**Expected Behavior:**\nThe website should load correctly.\n\n**Actual Behavior:**\nA 502 Bad Gateway error is displayed.\n\n**Additional Context:**\nThis is a critical production issue. The server logs need to be checked immediately to identify the root cause. This could be a crashed application process or a misconfiguration in the load balancer."}
{"bad_prompt": "Can you please the site needs a cookie policy page", "good_prompt": "### Content: Create a 'Cookie Policy' Page\n\n**Objective:**\nCreate a new 'Cookie Policy' page to provide users with detailed information about the cookies we use on our website.\n\n**Feature Description:**\nCreate a new static page at `/cookie-policy`. The content for this page will be provided by the legal team. The page should be linked in the website's footer and from the cookie consent banner.\n\n**Acceptance Criteria:**\n- A new page is created at `/cookie-policy`.\n- The content provided by the legal team is added to the page.\n- A link to the 'Cookie Policy' page is present in the site footer."}
{"bad_prompt": "We need to the user can't log out", "good_prompt": "### Bug Fix: The 'Logout' Button is Not Working\n\n**Bug Description:**\nClicking the 'Logout' button does not log the user out. The user remains logged in.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the 'Logout' button in the header.\n\n**Expected Behavior:**\nThe user should be logged out and redirected to the login page.\n\n**Actual Behavior:**\nNothing happens. The user remains logged in.\n\n**Additional Context:**\nThe click handler for the logout button is not correctly clearing the user's session from local storage and is not calling the backend API to invalidate the session token."}
{"bad_prompt": "We need to i need to be able to upload a profile picture", "good_prompt": "### New Feature Request: Allow Users to Upload a Profile Picture\n\n**User Story:**\nAs a user, I want to be able to upload a profile picture so that I can personalize my account.\n\n**Feature Description:**\nAdd a feature that allows users to upload a profile picture. This should include:\n1. An image upload component on the user profile page.\n2. The ability to crop the uploaded image.\n3. The uploaded image should be stored securely (e.g., in an S3 bucket).\n4. The user's profile picture should be displayed in the header and on their profile page.\n\n**Acceptance Criteria:**\n- Users can select and upload a JPG or PNG image.\n- The uploaded image is displayed on their profile page.\n- The user's avatar in the header is updated with the new picture."}
{"bad_prompt": "Could you the site needs a cookie policy page", "good_prompt": "### Content: Create a 'Cookie Policy' Page\n\n**Objective:**\nCreate a new 'Cookie Policy' page to provide users with detailed information about the cookies we use on our website.\n\n**Feature Description:**\nCreate a new static page at `/cookie-policy`. The content for this page will be provided by the legal team. The page should be linked in the website's footer and from the cookie consent banner.\n\n**Acceptance Criteria:**\n- A new page is created at `/cookie-policy`.\n- The content provided by the legal team is added to the page.\n- A link to the 'Cookie Policy' page is present in the site footer."}
{"bad_prompt": "the user can't see the images", "good_prompt": "### Bug Fix: Images Not Loading Due to CORS Policy Error\n\n**Bug Description:**\nImages that are hosted on our separate CDN domain are not loading on the website. The browser's developer console shows a Cross-Origin Resource Sharing (CORS) policy error.\n\n**Steps to Reproduce:**\n1. Go to the homepage.\n2. Observe that the main hero image is missing.\n3. Check the browser's developer console for errors.\n\n**Expected Behavior:**\nAll images should load correctly.\n\n**Actual Behavior:**\nImages are blocked by the browser due to a CORS error.\n\n**Additional Context:**\nThe CDN server needs to be configured to send the correct CORS headers, specifically `Access-Control-Allow-Origin: https://www.our-site.com`."}
{"bad_prompt": "Could you the user can't see the new features", "good_prompt": "### Feature Flag: Enable New Dashboard Features for All Users\n\n**Objective:**\nRoll out the new dashboard features, which are currently behind a feature flag, to all users.\n\n**Feature Description:**\nRemove the feature flag that is currently hiding the new dashboard features. The new features should become visible to all users upon deployment.\n\n**Acceptance Criteria:**\n- The feature flag logic for the new dashboard is removed from the code.\n- All users can see and use the new dashboard features in the production environment after the next deployment."}
{"bad_prompt": "We need to the user can't see the new posh", "good_prompt": "### Bug Fix: New Blog Posts Are Not Appearing on the Blog Listing Page\n\n**Bug Description:**\nWhen a new blog post is created and published, it does not appear on the main `/blog` listing page.\n\n**Steps to Reproduce:**\n1. Create and publish a new blog post via the CMS.\n2. Go to the `/blog` page.\n\n**Expected Behavior:**\nThe new blog post should appear at the top of the list.\n\n**Actual Behavior:**\nThe new post is not listed.\n\n**Additional Context:**\nThe API endpoint that fetches the list of blog posts is likely not being revalidated or is being cached too aggressively. We need to implement a revalidation strategy (e.g., Incremental Static Regeneration - ISR) to ensure the list is updated when new posts are published."}
{"bad_prompt": "the user is not logged out when the session expires", "good_prompt": "### Bug Fix: User is Not Redirected to Login Page After Session Expiration\n\n**Bug Description:**\nWhen a user's session expires, they are not automatically logged out or redirected to the login page. Instead, their next action (e.g., clicking a link) results in an unexpected error page (e.g., a 401 or 403 error).\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Wait for the session to expire (e.g., 1 hour).\n3. Try to navigate to another page within the application.\n\n**Expected Behavior:**\nThe user should be automatically redirected to the login page with a message indicating that their session has expired.\n\n**Actual Behavior:**\nThe user sees an unfriendly error page, which is a poor user experience.\n\n**Additional Context:**\nThe API client on the frontend should be configured to handle 401 Unauthorized responses globally. When a 401 is received, it should clear the user's session data from local storage and redirect them to the login page."}
{"bad_prompt": "the user can't jee the footer", "good_prompt": "### Bug Fix: The Website Footer is Missing on Some Pages\n\n**Bug Description:**\nThe main website footer is not being displayed on certain pages, specifically the blog post detail pages.\n\n**Steps to Reproduce:**\n1. Navigate to any blog post detail page.\n2. Scroll to the bottom of the page.\n\n**Expected Behavior:**\nThe website footer should be visible.\n\n**Actual Behavior:**\nThe footer is missing.\n\n**Additional Context:**\nThe page template for blog posts is likely missing the component that renders the footer."}
{"bad_prompt": "We need to the user can't see the app-ads.txt file", "good_prompt": "### Advertising: Create an `app-ads.txt` File\n\n**Objective:**\nCreate an `app-ads.txt` file for our mobile app to declare the authorized sellers of our in-app ad inventory.\n\n**Feature Description:**\nCreate an `app-ads.txt` file in the root of the public directory. The file should contain the list of authorized ad sellers for our mobile app.\n\n**Acceptance Criteria:**\n- An `app-ads.txt` file is accessible at the root of the website.\n- The file contains the correct information for our authorized mobile ad sellers."}
{"bad_prompt": "We need to the currency is wrong", "good_prompt": "### Bug Fix: Prices are Displayed in USD instead of EUR\n\n**Bug Description:**\nAll prices on the product and checkout pages are being displayed with a dollar sign ($) and are formatted as USD. The requirement is for all prices to be displayed in Euros (\u20ac).\n\n**Acceptance Criteria:**\n- All prices displayed to the user should use the Euro symbol (\u20ac).\n- The currency formatting should be updated sitewide.\n- A reusable currency formatting utility should be created to ensure consistency."}
{"bad_prompt": "Could you the text is too small", "good_prompt": "### Accessibility: Increase the Base Font Size for Better Readability\n\n**Objective:**\nImprove the accessibility and readability of the website's content by increasing the base font size.\n\n**Acceptance Criteria:**\n- The base font size for all body text (paragraphs, lists, etc.) should be increased from 14px to 16px.\n- All headings (H1, H2, H3, etc.) should be adjusted proportionally to maintain the visual hierarchy.\n- The line height should be adjusted to 1.5 to ensure comfortable reading with the new font size.\n\n**Additional Context:**\nThis change should be implemented in the global CSS file to ensure it applies sitewide."}
{"bad_prompt": "the user can't see the headbr", "good_prompt": "### Bug Fix: The Website Header is Missing on the Login Page\n\n**Bug Description:**\nThe main website header, which contains the logo and navigation, is missing on the login page.\n\n**Steps to Reproduce:**\n1. Navigate to the `/login` page.\n\n**Expected Behavior:**\nThe website header should be visible at the top of the page.\n\n**Actual Behavior:**\nThe header is missing.\n\n**Additional Context:**\nThe page template for the login page is likely using a different layout that excludes the main header component."}
{"bad_prompt": "i can't upload a pdf", "good_prompt": "### Bug Fix: File Upload Component Rejects PDF Files\n\n**Bug Description:**\nThe file upload component on the 'Documents' page is incorrectly rejecting PDF files. When a user tries to upload a PDF, they receive an 'Invalid file type' error.\n\n**Steps to Reproduce:**\n1. Go to the '/documents' page.\n2. Click the 'Upload' button.\n3. Select a PDF file from the file picker.\n\n**Expected Behavior:**\nThe PDF file should be accepted and uploaded successfully.\n\n**Actual Behavior:**\nAn 'Invalid file type' error message is displayed, and the upload is blocked.\n\n**Additional Context:**\nThe list of accepted file types in the component's configuration is likely missing the `application/pdf` MIME type."}
{"bad_prompt": "i need to be able to share blog posts on social media", "good_prompt": "### New Feature Request: Add Social Media Sharing Buttons to Blog Posts\n\n**User Story:**\nAs a reader, I want to be able to easily share a blog post on social media so that I can share it with my friends and followers.\n\n**Feature Description:**\nAdd social media sharing buttons to each blog post page. The buttons should allow users to share the post on Twitter, Facebook, and LinkedIn. The sharing action should pre-fill the post with the blog post's title and a link to the page.\n\n**Acceptance Criteria:**\n- Sharing buttons for Twitter, Facebook, and LinkedIn are present on each blog post page.\n- Clicking the Twitter button opens a new window with a pre-filled tweet containing the post title and URL.\n- Clicking the Facebook button opens a new window to share the URL.\n- Clicking the LinkedIn button opens a new window to share the URL."}
{"bad_prompt": "implement a budton", "good_prompt": "### New Feature Request: Add 'Export to CSV' Button to a User Dashboard\n\n**User Story:**\nAs a user, I want to be able to export my data table as a CSV file so that I can perform my own analysis in other tools.\n\n**Feature Description:**\nImplement a new button labeled 'Export to CSV' on the main user dashboard. When clicked, this button should generate a CSV file of the data currently displayed in the main table and initiate a download for the user.\n\n**Acceptance Criteria:**\n- A button with the text 'Export to CSV' is present on the user dashboard.\n- Clicking the button triggers a CSV download.\n- The downloaded CSV file contains all the data from the table, including correct headers."}
{"bad_prompt": "the user can't see their own profile picture", "good_prompt": "### Bug Fix: User's Own Profile Picture is Not Displayed on Their Profile Page\n\n**Bug Description:**\nWhile the user's avatar is displayed correctly in the header, their full-size profile picture is not appearing on their own profile page. A placeholder image is shown instead.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Navigate to your own profile page.\n\n**Expected Behavior:**\nThe user's full-size profile picture should be displayed.\n\n**Actual Behavior:**\nA placeholder image is shown.\n\n**Additional Context:**\nThe component responsible for rendering the profile page is likely fetching the user data but is not correctly accessing the `profile_picture_url` attribute."}
{"bad_prompt": "Can you please the site xs not accessible", "good_prompt": "### Accessibility: Ensure All Images Have Alt Text\n\n**Objective:**\nImprove the accessibility of the website by ensuring that all `<img>` tags have descriptive `alt` attributes. This is crucial for users who use screen readers.\n\n**Acceptance Criteria:**\n- Perform a site-wide audit to identify all `<img>` tags that are missing an `alt` attribute or have a non-descriptive one (e.g., `alt=\"image\"`).\n- For each image, add a descriptive `alt` attribute that accurately describes the content of the image.\n- For purely decorative images, use an empty `alt` attribute (`alt=\"\"`).\n- Run an accessibility checker tool (like WAVE or Axe) to verify that all images have appropriate alt text."}
{"bad_prompt": "add a dark mode", "good_prompt": "### New Feature Request: Implement a Dark Mode Theme\n\n**User Story:**\nAs a user who often works at night, I want to be able to switch the website to a dark mode theme to reduce eye strain.\n\n**Feature Description:**\nImplement a dark mode theme for the entire website. A toggle switch should be added to the header that allows users to switch between the default (light) and dark themes. The user's preference should be saved in `localStorage` so that it persists across sessions.\n\n**Acceptance Criteria:**\n- A theme toggle switch is present in the header.\n- Clicking the toggle switches the site's color scheme between light and dark modes.\n- All components (buttons, forms, text, backgrounds) have appropriate styles for both themes.\n- The user's selected theme is remembered when they revisit the site."}
{"bad_prompt": "We need to the user can't see the home page", "good_prompt": "### Bug Fix: The Site Logo Link to the Homepage is Broken\n\n**Bug Description:**\nClicking the site logo in the header, which should take the user to the homepage, is not working correctly.\n\n**Steps to Reproduce:**\n1. Navigate to any page other than the homepage (e.g., `/about`).\n2. Click the main site logo in the header.\n\n**Expected Behavior:**\nThe user should be taken back to the homepage (`/`).\n\n**Actual Behavior:**\nNothing happens, or the link points to an incorrect URL."}
{"bad_prompt": "odd a dark mode", "good_prompt": "### New Feature Request: Implement a Dark Mode Theme\n\n**User Story:**\nAs a user who often works at night, I want to be able to switch the website to a dark mode theme to reduce eye strain.\n\n**Feature Description:**\nImplement a dark mode theme for the entire website. A toggle switch should be added to the header that allows users to switch between the default (light) and dark themes. The user's preference should be saved in `localStorage` so that it persists across sessions.\n\n**Acceptance Criteria:**\n- A theme toggle switch is present in the header.\n- Clicking the toggle switches the site's color scheme between light and dark modes.\n- All components (buttons, forms, text, backgrounds) have appropriate styles for both themes.\n- The user's selected theme is remembered when they revisit the site."}
{"bad_prompt": "We need to the site is not translated corrpctly", "good_prompt": "### Bug Fix: Incomplete Translations on the Spanish Version of the Site\n\n**Bug Description:**\nSeveral sections of the Spanish version of the website (`/es`) are still showing English text. This is particularly noticeable in the footer and on the contact page.\n\n**Steps to Reproduce:**\n1. Switch the website's language to Spanish.\n2. Navigate to the footer and the `/es/contacto` page.\n\n**Expected Behavior:**\nAll text on the page should be in Spanish.\n\n**Actual Behavior:**\nSome text, especially in the footer links and form labels, remains in English.\n\n**Additional Context:**\nThe translation files (e.g., `es.json`) for the i18n library are likely missing the keys for these specific text elements. They need to be added."}
{"bad_prompt": "Can you please the user can't see the new usee", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "the user can't see the new profile picturx", "good_prompt": "### Bug Fix: Other Users Cannot See a User's New Profile Picture\n\n**Bug Description:**\nWhen a user updates their profile picture, they can see the new picture, but other users still see their old one. This points to a caching issue.\n\n**Steps to Reproduce:**\n1. User A updates their profile picture.\n2. User B views User A's profile page.\n\n**Expected Behavior:**\nUser B should see User A's new profile picture.\n\n**Actual Behavior:**\nUser B still sees User A's old profile picture.\n\n**Additional Context:**\nThe URLs for profile pictures are likely being cached aggressively at the CDN or in the browser. We need to implement a cache-busting strategy, such as appending a version number or timestamp as a query parameter to the image URL whenever it's updated (e.g., `.../avatar.jpg?v=12345`)."}
{"bad_prompt": "Can you please the mobile menu is broken", "good_prompt": "### Bug Fix: The Mobile Navigation Menu Does Not Close After Clicking a Link\n\n**Bug Description:**\nOn mobile devices, when the user opens the navigation menu and clicks on a link, the application navigates to the new page, but the menu remains open, covering the content.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Tap the hamburger icon to open the navigation menu.\n3. Tap on any link in the menu (e.g., 'About Us').\n\n**Expected Behavior:**\nThe application should navigate to the new page, and the mobile menu should automatically close.\n\n**Actual Behavior:**\nThe page changes, but the menu stays open."}
{"bad_prompt": "Could you the api is timing out", "good_prompt": "### Bug Fix: API Gateway Timeout on `/api/reports` Endpoint\n\n**Bug Description:**\nRequests to the `/api/reports` endpoint are consistently failing with a 504 Gateway Timeout error, especially for large date ranges. This is preventing users from generating reports.\n\n**Steps to Reproduce:**\n1. Make a GET request to `/api/reports` with a date range of more than 90 days.\n2. Observe the 504 error response.\n\n**Expected Behavior:**\nThe API should successfully generate and return the report, even for large date ranges.\n\n**Actual Behavior:**\nThe request times out.\n\n**Additional Context:**\nThe report generation query is too slow and needs to be optimized. This process should also be moved to an asynchronous background job to avoid timeouts."}
{"bad_prompt": "Could you the user can't see the terms of service", "good_prompt": "### Bug Fix: The 'Terms of Service' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Terms of Service' link in the website footer is pointing to a non-existent page (`/tos`) instead of the correct page (`/terms-of-service`).\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Terms of Service' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/terms-of-service` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "i need to be able to filter the products", "good_prompt": "### New Feature Request: Add Filtering to the Products Page\n\n**User Story:**\nAs a user, I want to be able to filter the products by category and price so that I can find what I'm looking for more easily.\n\n**Feature Description:**\nAdd a filtering sidebar to the products page. This sidebar should contain:\n1. A list of product categories (as checkboxes).\n2. A price range slider.\nWhen a user applies a filter, the list of products on the page should update to show only the products that match the selected criteria.\n\n**Acceptance Criteria:**\n- A filtering sidebar is present on the products page.\n- Users can filter products by selecting one or more categories.\n- Users can filter products by adjusting the price range slider.\n- The product list updates in real-time as the filters are changed."}
{"bad_prompt": "We need to the user can't see the new order", "good_prompt": "### Bug Fix: New Orders Are Not Appearing in the User's Order History\n\n**Bug Description:**\nAfter a user successfully places a new order, the order does not appear in their 'Order History' page until they log out and log back in.\n\n**Steps to Reproduce:**\n1. Place a new order.\n2. Go to the 'Order History' page in your account.\n\n**Expected Behavior:**\nThe new order should be listed at the top of the order history.\n\n**Actual Behavior:**\nThe new order is not visible.\n\n**Additional Context:**\nThe frontend application is likely caching the order history data and is not re-fetching it after a new order is placed. The local state or cache needs to be invalidated and updated after a successful checkout."}
{"bad_prompt": "the user can't see the new user", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "the user can't filter by date", "good_prompt": "### New Feature Request: Add Date Range Filtering to the Orders Page\n\n**User Story:**\nAs a user, I want to be able to filter my order history by a date range so that I can find orders from a specific period.\n\n**Feature Description:**\nAdd a date range filter to the 'Order History' page. The filter should consist of two date input fields: 'Start Date' and 'End Date'. When the user selects a date range and clicks 'Apply', the list of orders should be filtered to show only the orders placed within that range.\n\n**Acceptance Criteria:**\n- 'Start Date' and 'End Date' input fields are present on the order history page.\n- The list of orders updates correctly when the date range filter is applied."}
{"bad_prompt": "the email notifications are not wooking", "good_prompt": "### Bug Fix: Email Notifications Are Not Being Sent for New User Registrations\n\n**Bug Description:**\nThe system is not sending the 'Welcome' email notification when a new user registers for an account.\n\n**Steps to Reproduce:**\n1. Create a new user account through the registration page.\n2. Check the email inbox for the address used to register.\n3. Check the logs for the email sending service (e.g., SendGrid).\n\n**Expected Behavior:**\nA 'Welcome' email should be sent to the new user's email address immediately after registration.\n\n**Actual Behavior:**\nNo email is sent. The email service logs show that no API call is being made from our application for new registrations."}
{"bad_prompt": "rdd a 'save for later' feature", "good_prompt": "### New Feature Request: Implement a 'Save for Later' Feature in the Shopping Cart\n\n**User Story:**\nAs a shopper, I want to be able to move items from my shopping cart to a 'Save for Later' list so that I can purchase them at a later time without losing them.\n\n**Feature Description:**\nAdd a 'Save for Later' button to each item in the shopping cart. When a user clicks this button, the item should be removed from the cart and added to a new 'Saved for Later' section on the same page. The user should also be able to move items from the 'Saved for Later' list back to the cart.\n\n**Acceptance Criteria:**\n- Each item in the cart has a 'Save for Later' button.\n- Clicking the button moves the item to the 'Saved for Later' list.\n- The 'Saved for Later' list has a 'Move to Cart' button for each item."}
{"bad_prompt": "We need to the user can't see twe new category", "good_prompt": "### Bug Fix: New Product Categories Are Not Appearing in the Filter Sidebar\n\n**Bug Description:**\nWhen a new product category is created in the admin panel, it does not appear in the list of filterable categories on the products page sidebar.\n\n**Steps to Reproduce:**\n1. Create a new product category in the admin panel.\n2. Go to the `/products` page.\n3. Observe the filter sidebar.\n\n**Expected Behavior:**\nThe new category should be listed as a filter option.\n\n**Actual Behavior:**\nThe new category is missing."}
{"bad_prompt": "Can you please the user data is not being deleted correctly", "good_prompt": "### Bug Fix: Deleting a User Account Does Not Delete All of Their Data\n\n**Bug Description:**\nWhen a user deletes their account, their main user record is deleted, but their associated data (like their posts and comments) remains in the database, orphaned.\n\n**Steps to Reproduce:**\n1. Create a user and have them create some posts.\n2. Delete the user's account.\n3. Check the database to see if the user's posts still exist.\n\n**Expected Behavior:**\nWhen a user account is deleted, all of their associated data (posts, comments, etc.) should also be deleted (cascading delete).\n\n**Actual Behavior:**\nOnly the user record is deleted, leaving orphaned data in the database.\n\n**Additional Context:**\nThe database schema needs to be updated to use a cascading delete for the foreign key relationships, or the application logic needs to be updated to manually delete all associated data when a user is deleted."}
{"bad_prompt": "We need to the user is not logged out when the session expires", "good_prompt": "### Bug Fix: User is Not Redirected to Login Page After Session Expiration\n\n**Bug Description:**\nWhen a user's session expires, they are not automatically logged out or redirected to the login page. Instead, their next action (e.g., clicking a link) results in an unexpected error page (e.g., a 401 or 403 error).\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Wait for the session to expire (e.g., 1 hour).\n3. Try to navigate to another page within the application.\n\n**Expected Behavior:**\nThe user should be automatically redirected to the login page with a message indicating that their session has expired.\n\n**Actual Behavior:**\nThe user sees an unfriendly error page, which is a poor user experience.\n\n**Additional Context:**\nThe API client on the frontend should be configured to handle 401 Unauthorized responses globally. When a 401 is received, it should clear the user's session data from local storage and redirect them to the login page."}
{"bad_prompt": "Can you please the user can't see their bwn profile picture", "good_prompt": "### Bug Fix: User's Own Profile Picture is Not Displayed on Their Profile Page\n\n**Bug Description:**\nWhile the user's avatar is displayed correctly in the header, their full-size profile picture is not appearing on their own profile page. A placeholder image is shown instead.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Navigate to your own profile page.\n\n**Expected Behavior:**\nThe user's full-size profile picture should be displayed.\n\n**Actual Behavior:**\nA placeholder image is shown.\n\n**Additional Context:**\nThe component responsible for rendering the profile page is likely fetching the user data but is not correctly accessing the `profile_picture_url` attribute."}
{"bad_prompt": "We need to the forv doesn't work", "good_prompt": "### Bug Fix: The Contact Form Submission Fails with a Network Error\n\n**Bug Description:**\nWhen a user fills out and submits the contact form on the `/contact` page, the submission fails, and a 'Network Error' message is displayed to the user.\n\n**Steps to Reproduce:**\n1. Go to the `/contact` page.\n2. Fill in all the required fields (Name, Email, Message).\n3. Click the 'Submit' button.\n4. Observe the error message that appears below the form.\n\n**Expected Behavior:**\nThe form should submit successfully, and a 'Thank you for your message!' confirmation should be displayed.\n\n**Actual Behavior:**\nThe form submission fails, and a red 'Network Error' message is shown."}
{"bad_prompt": "the user can't see the foqter", "good_prompt": "### Bug Fix: The Website Footer is Missing on Some Pages\n\n**Bug Description:**\nThe main website footer is not being displayed on certain pages, specifically the blog post detail pages.\n\n**Steps to Reproduce:**\n1. Navigate to any blog post detail page.\n2. Scroll to the bottom of the page.\n\n**Expected Behavior:**\nThe website footer should be visible.\n\n**Actual Behavior:**\nThe footer is missing.\n\n**Additional Context:**\nThe page template for blog posts is likely missing the component that renders the footer."}
{"bad_prompt": "the tbsts are failing", "good_prompt": "### Bug Fix: Resolve Failing Unit Tests in the CI Pipeline\n\n**Bug Description:**\nThe unit tests are currently failing in the Continuous Integration (CI) pipeline, which is preventing new changes from being merged. The failure appears to be in the `test_user_model.py` file.\n\n**Steps to Reproduce:**\n1. Push a new commit to any branch.\n2. Observe the CI pipeline status in GitHub Actions.\n3. See the failure in the 'Run Tests' step.\n\n**Expected Behavior:**\nAll unit tests should pass, and the CI pipeline should be green.\n\n**Actual Behavior:**\nThe 'Run Tests' step fails with an error related to a mock object in `test_user_model.py`.\n\n**Additional Context:**\nThe failure started after the `auth-library` dependency was updated. The logs from the CI run can be found here: [Link to CI logs]"}
{"bad_prompt": "We need to the user can't see the about page", "good_prompt": "### Bug Fix: The 'About Us' Link in the Header is Broken\n\n**Bug Description:**\nThe 'About Us' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'About Us' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/about` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Can you please the search is not working", "good_prompt": "### Bug Fix: Search Functionality Returns an Empty Result for Valid Queries\n\n**Bug Description:**\nThe search functionality on the `/search` page is not returning any results, even for queries that should match existing content. It always displays a 'No results found' message.\n\n**Steps to Reproduce:**\n1. Go to the `/search` page.\n2. Enter a valid search term that is known to be in the content (e.g., 'performance').\n3. Click the 'Search' button.\n\n**Expected Behavior:**\nThe page should display a list of search results that match the query.\n\n**Actual Behavior:**\nThe page displays the 'No results found' message."}
{"bad_prompt": "i need to be able to export my data", "good_prompt": "### New Feature Request: Allow Users to Export Their Data\n\n**User Story:**\nAs a user, I want to be able to export all my data in a machine-readable format (like JSON) to comply with data portability regulations (like GDPR).\n\n**Feature Description:**\nAdd a new 'Export Data' section to the user's account settings page. This section should have a button that allows the user to request a full export of their data. The export process should run in the background, and the user should be notified by email when their export file is ready to be downloaded.\n\n**Acceptance Criteria:**\n- A 'Request Data Export' button is available in the account settings.\n- Clicking the button triggers an asynchronous job to generate the export.\n- The user receives an email with a secure link to download their data as a JSON file."}
{"bad_prompt": "the email notifications are not worbing", "good_prompt": "### Bug Fix: Email Notifications Are Not Being Sent for New User Registrations\n\n**Bug Description:**\nThe system is not sending the 'Welcome' email notification when a new user registers for an account.\n\n**Steps to Reproduce:**\n1. Create a new user account through the registration page.\n2. Check the email inbox for the address used to register.\n3. Check the logs for the email sending service (e.g., SendGrid).\n\n**Expected Behavior:**\nA 'Welcome' email should be sent to the new user's email address immediately after registration.\n\n**Actual Behavior:**\nNo email is sent. The email service logs show that no API call is being made from our application for new registrations."}
{"bad_prompt": "Could you the usjr can't see the new features", "good_prompt": "### Feature Flag: Enable New Dashboard Features for All Users\n\n**Objective:**\nRoll out the new dashboard features, which are currently behind a feature flag, to all users.\n\n**Feature Description:**\nRemove the feature flag that is currently hiding the new dashboard features. The new features should become visible to all users upon deployment.\n\n**Acceptance Criteria:**\n- The feature flag logic for the new dashboard is removed from the code.\n- All users can see and use the new dashboard features in the production environment after the next deployment."}
{"bad_prompt": "Can you please the user can't see tho cookie policy", "good_prompt": "### Bug Fix: The 'Cookie Policy' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Cookie Policy' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Cookie Policy' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/cookie-policy` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Can you please the user can't see the careers page", "good_prompt": "### Bug Fix: The 'Careers' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Careers' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Careers' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/careers` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "txe user can't see the new comment", "good_prompt": "### Bug Fix: New Comments Are Not Appearing in Real-Time\n\n**Bug Description:**\nWhen a user posts a comment, it is successfully saved to the database, but it does not appear on the page for other users unless they manually refresh the page.\n\n**Steps to Reproduce:**\n1. Open a blog post in two different browsers (or as two different users).\n2. Post a comment in one browser.\n3. Observe the comment section in the second browser.\n\n**Expected Behavior:**\nThe new comment should appear in the second browser in real-time (or near real-time) without a refresh.\n\n**Actual Behavior:**\nThe comment section in the second browser does not update.\n\n**Additional Context:**\nTo solve this, we need to implement a real-time solution, such as using WebSockets or a library like Pusher to push new comments to all connected clients. Alternatively, the frontend could poll the server for new comments periodically."}
{"bad_prompt": "Could you the eite is not using a CDN", "good_prompt": "### Performance: Use a CDN to Serve Static Assets\n\n**Objective:**\nImprove the global loading performance of the website by serving all static assets (CSS, JavaScript, images) from a Content Delivery Network (CDN).\n\n**Feature Description:**\nConfigure the application's build process and server to serve all static assets from a CDN (e.g., Cloudflare, AWS CloudFront). This involves updating the asset URLs in the application's HTML to point to the CDN.\n\n**Acceptance Criteria:**\n- All CSS, JS, and image files are served from the CDN's domain, not our origin server.\n- The website loads correctly with the assets being served from the CDN.\n- The page load time for users in different geographic regions is significantly reduced."}
{"bad_prompt": "Could you update the dependencies", "good_prompt": "### Chore: Update Outdated NPM Dependencies\n\n**Objective:**\nUpdate all outdated NPM dependencies to their latest stable versions to ensure the project is secure and up-to-date.\n\n**Acceptance Criteria:**\n- Run `npm outdated` to identify all outdated packages.\n- Update each package to its latest major or minor version as appropriate in the `package.json` file.\n- Run `npm install` to update the `package-lock.json` file.\n- After updating, run the test suite (`npm test`) to ensure that the updates have not introduced any breaking changes.\n- Manually test the core application flows (login, form submission) to verify functionality."}
{"bad_prompt": "i can't undubscribe from the newsletter", "good_prompt": "### Bug Fix: The 'Unsubscribe' Link in Emails is Not Working\n\n**Bug Description:**\nWhen a user clicks the 'Unsubscribe' link in a marketing email, it leads to a 404 Not Found page. The unsubscribe functionality is completely broken.\n\n**Steps to Reproduce:**\n1. Receive a marketing email from our system.\n2. Click the 'Unsubscribe' link at the bottom of the email.\n\n**Expected Behavior:**\nThe user should be taken to a page where they can confirm that they want to unsubscribe from the newsletter.\n\n**Actual Behavior:**\nThe link leads to a 404 page.\n\n**Additional Context:**\nThe URL for the unsubscribe link being generated in our email templates is incorrect. The template needs to be updated with the correct URL for the unsubscribe page."}
{"bad_prompt": "Can you please the user list is not sorted", "good_prompt": "### Bug Fix: The User List in the Admin Panel is Not Sorted Alphabetically\n\n**Bug Description:**\nThe list of users in the admin panel is displayed in a random order, making it difficult to find a specific user.\n\n**Steps to Reproduce:**\n1. Log in as an admin user.\n2. Go to the 'Users' page in the admin panel.\n3. Observe the order of the user list.\n\n**Expected Behavior:**\nThe user list should be sorted alphabetically by username by default.\n\n**Actual Behavior:**\nThe user list is not sorted."}
{"bad_prompt": "the site nteds a careers page", "good_prompt": "### Content: Create a 'Careers' Page\n\n**Objective:**\nCreate a new 'Careers' page to list open job positions and attract potential candidates.\n\n**Feature Description:**\nCreate a new static page at `/careers`. The page should have an introduction about working at our company and a section that lists all the currently open job positions. The list of jobs can be hardcoded for now, or it can be integrated with our applicant tracking system (ATS) if an API is available.\n\n**Acceptance Criteria:**\n- A new page is created at `/careers`.\n- The page lists all open job positions with a title, location, and a link to apply."}
{"bad_prompt": "i need to be able to sort the user table", "good_prompt": "### New Feature Request: Add Sorting to the User Table in the Admin Panel\n\n**User Story:**\nAs an admin, I want to be able to sort the user table by username, email, and registration date so that I can better analyze the data.\n\n**Feature Description:**\nMake the column headers in the user table in the admin panel clickable. When a user clicks on a column header, the table should be sorted by that column. Clicking the same header again should reverse the sort order.\n\n**Acceptance Criteria:**\n- Users can sort the table by clicking on the 'Username', 'Email', and 'Registration Date' column headers.\n- The sorting works in both ascending and descending order.\n- A visual indicator (e.g., an arrow) shows the current sort column and direction."}
{"bad_prompt": "the user can't wee the settings page", "good_prompt": "### Bug Fix: The 'Settings' Link in the User Dropdown is Broken\n\n**Bug Description:**\nThe 'Settings' link in the user dropdown menu (in the header) is broken.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the user's avatar in the header to open the dropdown.\n3. Click the 'Settings' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/account/settings` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "We need to the user can't see the new oser", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "Could you the user can't see the new post", "good_prompt": "### Bug Fix: New Blog Posts Are Not Appearing on the Blog Listing Page\n\n**Bug Description:**\nWhen a new blog post is created and published, it does not appear on the main `/blog` listing page.\n\n**Steps to Reproduce:**\n1. Create and publish a new blog post via the CMS.\n2. Go to the `/blog` page.\n\n**Expected Behavior:**\nThe new blog post should appear at the top of the list.\n\n**Actual Behavior:**\nThe new post is not listed.\n\n**Additional Context:**\nThe API endpoint that fetches the list of blog posts is likely not being revalidated or is being cached too aggressively. We need to implement a revalidation strategy (e.g., Incremental Static Regeneration - ISR) to ensure the list is updated when new posts are published."}
{"bad_prompt": "Can you please the user can create an account with a weav password", "good_prompt": "### Security: Enforce Stronger Password Requirements\n\n**Objective:**\nImprove the security of user accounts by enforcing stronger password requirements during registration and password changes.\n\n**Feature Description:**\nUpdate the password validation logic to require passwords to meet certain complexity requirements. Passwords must:\n1. Be at least 12 characters long.\n2. Contain at least one uppercase letter, one lowercase letter, one number, and one special character.\n\n**Acceptance Criteria:**\n- The registration and 'change password' forms display the new password requirements to the user.\n- The server rejects any passwords that do not meet these requirements with a clear error message."}
{"bad_prompt": "We need to the user can't see the pricing page", "good_prompt": "### Bug Fix: The 'Pricing' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Pricing' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Pricing' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/pricing` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "i need to be able to download an invoice", "good_prompt": "### New Feature Request: Allow Users to Download Invoices\n\n**User Story:**\nAs a customer, I want to be able to download a PDF invoice for my past orders so that I can keep it for my records.\n\n**Feature Description:**\nIn the 'Order History' page, add a 'Download Invoice' button next to each completed order. When a user clicks this button, the system should generate a PDF invoice for that specific order and initiate a download.\n\n**Acceptance Criteria:**\n- A 'Download Invoice' button is present for each completed order in the user's order history.\n- Clicking the button downloads a correctly formatted PDF invoice.\n- The invoice contains all the relevant order details (products, prices, totals, billing information)."}
{"bad_prompt": "We need to the site needs a contact page", "good_prompt": "### New Feature Request: Create a 'Contact Us' Page\n\n**Objective:**\nCreate a 'Contact Us' page that provides users with our contact information and a contact form.\n\n**Feature Description:**\nCreate a new static page at `/contact`. This page should display our company's address, phone number, and email address. It should also include a contact form that users can fill out to send us a message directly. Submitting the form should send an email to our support team.\n\n**Acceptance Criteria:**\n- A new page is created at `/contact`.\n- The page displays the correct contact information.\n- The contact form includes fields for name, email, and message.\n- Submitting the form successfully sends an email to the support team."}
{"bad_prompt": "Could you the user can't see the favicon", "good_prompt": "### Bug Fix: The Favicon is Not Displayed\n\n**Bug Description:**\nThe website's favicon is not being displayed in the browser tab.\n\n**Steps to Reproduce:**\n1. Open the website in a browser.\n2. Look at the browser tab for the website.\n\n**Expected Behavior:**\nThe website's favicon should be displayed.\n\n**Actual Behavior:**\nA default browser icon is displayed.\n\n**Additional Context:**\nThe `<link>` tags for the favicon in the main HTML template are likely missing or have an incorrect `href` path."}
{"bad_prompt": "the checkout process is confusing", "good_prompt": "### UX Improvement: Simplify the Checkout Process\n\n**Objective:**\nImprove the user experience of the checkout process to reduce friction and increase conversion rates.\n\n**Feature Description:**\nRedesign the checkout flow from a multi-page process to a single-page checkout. All the necessary fields (shipping address, billing address, payment information) should be on a single page. The user's progress should be clearly indicated.\n\n**Acceptance Criteria:**\n- The entire checkout process is contained within a single `/checkout` page.\n- The user can enter their shipping, billing, and payment information without navigating to different pages.\n- The design matches the new single-page checkout mockups from the design team.\n\n**Additional Context:**\nFigma mockups: [Link to Figma]"}
{"bad_prompt": "tha user data export is not working", "good_prompt": "### Bug Fix: The User Data Export Feature is Timing Out\n\n**Bug Description:**\nWhen a user requests to export their data, the process times out and fails for users with a large amount of data. The server returns a 504 Gateway Timeout error.\n\n**Steps to Reproduce:**\n1. Log in as a user with a large amount of data (e.g., user ID 456).\n2. Go to the 'Export Data' page in the account settings.\n3. Click the 'Export My Data' button.\n\n**Expected Behavior:**\nThe system should generate a data export file and provide a download link to the user, even for large accounts.\n\n**Actual Behavior:**\nThe request hangs for a long time and then fails with a 504 error.\n\n**Additional Context:**\nThe data export process is currently running as a synchronous web request. This should be refactored into an asynchronous background job. The user should be notified (e.g., by email) when their export is ready for download."}
{"bad_prompt": "Could you the user can't zee the new user", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "the user can't log out", "good_prompt": "### Bug Fix: The 'Logout' Button is Not Working\n\n**Bug Description:**\nClicking the 'Logout' button does not log the user out. The user remains logged in.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the 'Logout' button in the header.\n\n**Expected Behavior:**\nThe user should be logged out and redirected to the login page.\n\n**Actual Behavior:**\nNothing happens. The user remains logged in.\n\n**Additional Context:**\nThe click handler for the logout button is not correctly clearing the user's session from local storage and is not calling the backend API to invalidate the session token."}
{"bad_prompt": "the password reset token expires too fast", "good_prompt": "### UX Improvement: Extend the Password Reset Token Expiration Time\n\n**Objective:**\nImprove the user experience for the password reset flow by extending the validity period of the password reset token.\n\n**Feature Description:**\nIncrease the expiration time for password reset tokens from the current 15 minutes to 1 hour. This change should be made in the authentication service's configuration.\n\n**Acceptance Criteria:**\n- A password reset link sent to a user's email should remain valid for 1 hour.\n- Attempting to use the link after 1 hour should result in a user-friendly error message indicating that the token has expired."}
{"bad_prompt": "Can you please the login is not secure", "good_prompt": "### Security: Implement Two-Factor Authentication (2FA) for User Login\n\n**User Story:**\nAs a security-conscious user, I want to enable Two-Factor Authentication for my account to prevent unauthorized access.\n\n**Feature Description:**\nIntegrate a 2FA system into the user authentication flow. Users should be able to enable 2FA in their account settings, which will require them to provide a one-time password (OTP) from an authenticator app (like Google Authenticator) upon login.\n\n**Acceptance Criteria:**\n- Users have a new 'Security' section in their account settings.\n- In the 'Security' section, users can enable 2FA by scanning a QR code.\n- When 2FA is enabled, the login page will require a second step to enter the OTP."}
{"bad_prompt": "update the dependensies", "good_prompt": "### Chore: Update Outdated NPM Dependencies\n\n**Objective:**\nUpdate all outdated NPM dependencies to their latest stable versions to ensure the project is secure and up-to-date.\n\n**Acceptance Criteria:**\n- Run `npm outdated` to identify all outdated packages.\n- Update each package to its latest major or minor version as appropriate in the `package.json` file.\n- Run `npm install` to update the `package-lock.json` file.\n- After updating, run the test suite (`npm test`) to ensure that the updates have not introduced any breaking changes.\n- Manually test the core application flows (login, form submission) to verify functionality."}
{"bad_prompt": "the msp on the contact page is not working", "good_prompt": "### Bug Fix: The Interactive Map on the Contact Page is Not Loading\n\n**Bug Description:**\nThe interactive map on the `/contact` page (e.g., Google Maps, Mapbox) is not loading. The area where the map should be is blank, and there is a JavaScript error in the console related to a missing API key.\n\n**Steps to Reproduce:**\n1. Go to the `/contact` page.\n2. Observe the map section.\n\n**Expected Behavior:**\nThe interactive map should load and display our office location.\n\n**Actual Behavior:**\nThe map area is blank, and there is a console error indicating that the API key is invalid or missing.\n\n**Additional Context:**\nThe API key for the map service needs to be added to the application's environment variables and included in the script that loads the map."}
{"bad_prompt": "implement d button", "good_prompt": "### New Feature Request: Add 'Export to CSV' Button to a User Dashboard\n\n**User Story:**\nAs a user, I want to be able to export my data table as a CSV file so that I can perform my own analysis in other tools.\n\n**Feature Description:**\nImplement a new button labeled 'Export to CSV' on the main user dashboard. When clicked, this button should generate a CSV file of the data currently displayed in the main table and initiate a download for the user.\n\n**Acceptance Criteria:**\n- A button with the text 'Export to CSV' is present on the user dashboard.\n- Clicking the button triggers a CSV download.\n- The downloaded CSV file contains all the data from the table, including correct headers."}
{"bad_prompt": "the user can't see the new commeat", "good_prompt": "### Bug Fix: New Comments Are Not Appearing in Real-Time\n\n**Bug Description:**\nWhen a user posts a comment, it is successfully saved to the database, but it does not appear on the page for other users unless they manually refresh the page.\n\n**Steps to Reproduce:**\n1. Open a blog post in two different browsers (or as two different users).\n2. Post a comment in one browser.\n3. Observe the comment section in the second browser.\n\n**Expected Behavior:**\nThe new comment should appear in the second browser in real-time (or near real-time) without a refresh.\n\n**Actual Behavior:**\nThe comment section in the second browser does not update.\n\n**Additional Context:**\nTo solve this, we need to implement a real-time solution, such as using WebSockets or a library like Pusher to push new comments to all connected clients. Alternatively, the frontend could poll the server for new comments periodically."}
{"bad_prompt": "Could you the site needs a careers page", "good_prompt": "### Content: Create a 'Careers' Page\n\n**Objective:**\nCreate a new 'Careers' page to list open job positions and attract potential candidates.\n\n**Feature Description:**\nCreate a new static page at `/careers`. The page should have an introduction about working at our company and a section that lists all the currently open job positions. The list of jobs can be hardcoded for now, or it can be integrated with our applicant tracking system (ATS) if an API is available.\n\n**Acceptance Criteria:**\n- A new page is created at `/careers`.\n- The page lists all open job positions with a title, location, and a link to apply."}
{"bad_prompt": "the sile is not updating", "good_prompt": "### Bug Fix: Content Changes from the CMS are Not Appearing on the Website\n\n**Bug Description:**\nWhen content is updated in our Headless CMS (e.g., Contentful, Strapi), the changes are not being reflected on the live website, even after a long wait. This suggests an issue with our build process or caching.\n\n**Steps to Reproduce:**\n1. Update the title of the homepage in the CMS.\n2. Save and publish the changes in the CMS.\n3. Visit the homepage of the live website.\n\n**Expected Behavior:**\nThe homepage should display the new, updated title.\n\n**Actual Behavior:**\nThe old title is still being displayed.\n\n**Additional Context:**\nThis could be caused by a few things:\n1. The webhook from the CMS to our build server is not firing or is misconfigured.\n2. The build server is not correctly re-building the site when it receives the webhook.\n3. An aggressive caching layer (e.g., at the CDN) is serving stale content. We need to investigate the build logs and cache settings."}
{"bad_prompt": "Could you images are slow", "good_prompt": "### Performance: Optimize Image Loading on the Homepage\n\n**Objective:**\nImprove the loading performance of the homepage by optimizing the images in the main hero section.\n\n**Acceptance Criteria:**\n- All JPEG and PNG images in the hero section should be compressed to reduce their file size by at least 50% without a significant loss in quality.\n- Images should be served in a next-gen format like WebP to browsers that support it.\n- Images should be lazy-loaded to prevent them from blocking the initial page render.\n\n**Additional Context:**\nThis task is critical for improving our Core Web Vitals score, specifically the Largest Contentful Paint (LCP)."}
{"bad_prompt": "We need to the site is not logging user actions", "good_prompt": "### Feature: Implement an Audit Log for User Actions\n\n**Objective:**\nCreate an audit log that records important user actions for security and compliance purposes.\n\n**Feature Description:**\nCreate a new logging system that records key user actions to a secure log file or database table. The actions to be logged should include:\n- User login/logout\n- Password change/reset\n- Profile information updates\n- Account deletion\nEach log entry should include a timestamp, the user's ID, the action performed, and the user's IP address.\n\n**Acceptance Criteria:**\n- All specified user actions are being logged correctly.\n- The audit log is stored securely and is accessible only to administrators."}
{"bad_prompt": "i neex to be able to filter the products", "good_prompt": "### New Feature Request: Add Filtering to the Products Page\n\n**User Story:**\nAs a user, I want to be able to filter the products by category and price so that I can find what I'm looking for more easily.\n\n**Feature Description:**\nAdd a filtering sidebar to the products page. This sidebar should contain:\n1. A list of product categories (as checkboxes).\n2. A price range slider.\nWhen a user applies a filter, the list of products on the page should update to show only the products that match the selected criteria.\n\n**Acceptance Criteria:**\n- A filtering sidebar is present on the products page.\n- Users can filter products by selecting one or more categories.\n- Users can filter products by adjusting the price range slider.\n- The product list updates in real-time as the filters are changed."}
{"bad_prompt": "the user can't change their pasnword", "good_prompt": "### Bug Fix: The 'Change Password' Functionality is Not Working\n\n**Bug Description:**\nWhen a user tries to change their password in their account settings, the operation fails with a generic 'An error occurred' message.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Go to the 'Account Settings' page.\n3. Enter the current password and a new password.\n4. Click 'Change Password'.\n\n**Expected Behavior:**\nThe user's password should be updated successfully.\n\n**Actual Behavior:**\nAn error message is displayed, and the password is not changed.\n\n**Additional Context:**\nThe server logs show that the 'current password' check is failing because it is being compared incorrectly. The password hashing logic needs to be reviewed."}
{"bad_prompt": "We need to the user can't see the favicon", "good_prompt": "### Bug Fix: The Favicon is Not Displayed\n\n**Bug Description:**\nThe website's favicon is not being displayed in the browser tab.\n\n**Steps to Reproduce:**\n1. Open the website in a browser.\n2. Look at the browser tab for the website.\n\n**Expected Behavior:**\nThe website's favicon should be displayed.\n\n**Actual Behavior:**\nA default browser icon is displayed.\n\n**Additional Context:**\nThe `<link>` tags for the favicon in the main HTML template are likely missing or have an incorrect `href` path."}
{"bad_prompt": "Could you i can't upload a pdf", "good_prompt": "### Bug Fix: File Upload Component Rejects PDF Files\n\n**Bug Description:**\nThe file upload component on the 'Documents' page is incorrectly rejecting PDF files. When a user tries to upload a PDF, they receive an 'Invalid file type' error.\n\n**Steps to Reproduce:**\n1. Go to the '/documents' page.\n2. Click the 'Upload' button.\n3. Select a PDF file from the file picker.\n\n**Expected Behavior:**\nThe PDF file should be accepted and uploaded successfully.\n\n**Actual Behavior:**\nAn 'Invalid file type' error message is displayed, and the upload is blocked.\n\n**Additional Context:**\nThe list of accepted file types in the component's configuration is likely missing the `application/pdf` MIME type."}
{"bad_prompt": "implement a link to the footer", "good_prompt": "### Content: Add 'About Us' Link to Site Footer\n\n**Objective:**\nAdd a link to the 'About Us' page in the footer of the website to improve navigation.\n\n**Acceptance Criteria:**\n- A new link with the text 'About Us' is present in the site footer.\n- The link correctly navigates to the `/about` page."}
{"bad_prompt": "the user data is not being deleted correctly", "good_prompt": "### Bug Fix: Deleting a User Account Does Not Delete All of Their Data\n\n**Bug Description:**\nWhen a user deletes their account, their main user record is deleted, but their associated data (like their posts and comments) remains in the database, orphaned.\n\n**Steps to Reproduce:**\n1. Create a user and have them create some posts.\n2. Delete the user's account.\n3. Check the database to see if the user's posts still exist.\n\n**Expected Behavior:**\nWhen a user account is deleted, all of their associated data (posts, comments, etc.) should also be deleted (cascading delete).\n\n**Actual Behavior:**\nOnly the user record is deleted, leaving orphaned data in the database.\n\n**Additional Context:**\nThe database schema needs to be updated to use a cascading delete for the foreign key relationships, or the application logic needs to be updated to manually delete all associated data when a user is deleted."}
{"bad_prompt": "Can you please the site is not secure (no https)", "good_prompt": "### Security: Enforce HTTPS on the Production Site\n\n**Objective:**\nEnsure that all traffic to our production website is served over HTTPS to protect user data and improve security.\n\n**Feature Description:**\nConfigure the production web server (e.g., Nginx, Vercel) to automatically redirect all HTTP requests to HTTPS. Additionally, ensure that the appropriate HSTS (HTTP Strict Transport Security) headers are set to prevent protocol downgrade attacks.\n\n**Acceptance Criteria:**\n- Accessing `http://www.our-site.com` automatically redirects to `https://www.our-site.com`.\n- The site's SSL certificate is valid and correctly installed.\n- The HSTS header is present in the response headers."}
{"bad_prompt": "Can you please the site is not logging useu actions", "good_prompt": "### Feature: Implement an Audit Log for User Actions\n\n**Objective:**\nCreate an audit log that records important user actions for security and compliance purposes.\n\n**Feature Description:**\nCreate a new logging system that records key user actions to a secure log file or database table. The actions to be logged should include:\n- User login/logout\n- Password change/reset\n- Profile information updates\n- Account deletion\nEach log entry should include a timestamp, the user's ID, the action performed, and the user's IP address.\n\n**Acceptance Criteria:**\n- All specified user actions are being logged correctly.\n- The audit log is stored securely and is accessible only to administrators."}
{"bad_prompt": "We need to the password reset token expires too fast", "good_prompt": "### UX Improvement: Extend the Password Reset Token Expiration Time\n\n**Objective:**\nImprove the user experience for the password reset flow by extending the validity period of the password reset token.\n\n**Feature Description:**\nIncrease the expiration time for password reset tokens from the current 15 minutes to 1 hour. This change should be made in the authentication service's configuration.\n\n**Acceptance Criteria:**\n- A password reset link sent to a user's email should remain valid for 1 hour.\n- Attempting to use the link after 1 hour should result in a user-friendly error message indicating that the token has expired."}
{"bad_prompt": "the user can't see the dashboard page", "good_prompt": "### Bug Fix: The 'Dashboard' Link in the Header is Broken After Login\n\n**Bug Description:**\nAfter a user logs in, the 'Dashboard' link in the header is broken and leads to a 404 error.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the 'Dashboard' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to their dashboard page at `/dashboard`.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "We need to the contact form has no spam protection", "good_prompt": "### Security: Add Spam Protection to the Contact Form\n\n**Objective:**\nProtect the contact form from spam submissions by implementing a CAPTCHA service.\n\n**Feature Description:**\nIntegrate a CAPTCHA service (like Google reCAPTCHA or hCaptcha) into the contact form. The user must successfully complete the CAPTCHA challenge before the form can be submitted.\n\n**Acceptance Criteria:**\n- A CAPTCHA widget is present on the contact form.\n- The form cannot be submitted unless the CAPTCHA is successfully validated on the server-side."}
{"bad_prompt": "Can you please fhe user can't see the pricing page", "good_prompt": "### Bug Fix: The 'Pricing' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Pricing' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Pricing' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/pricing` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Can you please the tents are failing", "good_prompt": "### Bug Fix: Resolve Failing Unit Tests in the CI Pipeline\n\n**Bug Description:**\nThe unit tests are currently failing in the Continuous Integration (CI) pipeline, which is preventing new changes from being merged. The failure appears to be in the `test_user_model.py` file.\n\n**Steps to Reproduce:**\n1. Push a new commit to any branch.\n2. Observe the CI pipeline status in GitHub Actions.\n3. See the failure in the 'Run Tests' step.\n\n**Expected Behavior:**\nAll unit tests should pass, and the CI pipeline should be green.\n\n**Actual Behavior:**\nThe 'Run Tests' step fails with an error related to a mock object in `test_user_model.py`.\n\n**Additional Context:**\nThe failure started after the `auth-library` dependency was updated. The logs from the CI run can be found here: [Link to CI logs]"}
{"bad_prompt": "Could you the user can't see the new user", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "the deployment script is broken", "good_prompt": "### Bug Fix: The Production Deployment Script Fails During the Build Step\n\n**Bug Description:**\nThe production deployment script (`deploy.sh`) is failing with an error during the `npm run build` step. This is preventing us from deploying new updates to production.\n\n**Steps to Reproduce:**\n1. Run the deployment script locally: `./deploy.sh`\n2. Observe the output during the 'Building application...' step.\n\n**Expected Behavior:**\nThe `npm run build` command should complete successfully, and the script should proceed to the deployment step.\n\n**Actual Behavior:**\nThe script exits with a non-zero status code after an 'out of memory' error during the build process.\n\n**Additional Context:**\nThis issue started after we added the new data visualization library. We may need to increase the memory available to the Node.js process during the build."}
{"bad_prompt": "the site is not secure (no https)", "good_prompt": "### Security: Enforce HTTPS on the Production Site\n\n**Objective:**\nEnsure that all traffic to our production website is served over HTTPS to protect user data and improve security.\n\n**Feature Description:**\nConfigure the production web server (e.g., Nginx, Vercel) to automatically redirect all HTTP requests to HTTPS. Additionally, ensure that the appropriate HSTS (HTTP Strict Transport Security) headers are set to prevent protocol downgrade attacks.\n\n**Acceptance Criteria:**\n- Accessing `http://www.our-site.com` automatically redirects to `https://www.our-site.com`.\n- The site's SSL certificate is valid and correctly installed.\n- The HSTS header is present in the response headers."}
{"bad_prompt": "Could you the breadcrudbs are wrong", "good_prompt": "### Bug Fix: Breadcrumb Navigation Shows Incorrect Path\n\n**Bug Description:**\nThe breadcrumb navigation component is showing an incorrect path on nested product category pages. For example, on a page for 'Laptops' within 'Electronics', the breadcrumb only shows 'Home > Laptops', omitting 'Electronics'.\n\n**Steps to Reproduce:**\n1. Navigate to a nested category page, e.g., 'Home > Electronics > Laptops'.\n2. Observe the breadcrumb trail at the top of the page.\n\n**Expected Behavior:**\nThe breadcrumb should show the full path: `Home > Electronics > Laptops`.\n\n**Actual Behavior:**\nThe breadcrumb shows an incomplete path: `Home > Laptops`."}
{"bad_prompt": "the tests are failing", "good_prompt": "### Bug Fix: Resolve Failing Unit Tests in the CI Pipeline\n\n**Bug Description:**\nThe unit tests are currently failing in the Continuous Integration (CI) pipeline, which is preventing new changes from being merged. The failure appears to be in the `test_user_model.py` file.\n\n**Steps to Reproduce:**\n1. Push a new commit to any branch.\n2. Observe the CI pipeline status in GitHub Actions.\n3. See the failure in the 'Run Tests' step.\n\n**Expected Behavior:**\nAll unit tests should pass, and the CI pipeline should be green.\n\n**Actual Behavior:**\nThe 'Run Tests' step fails with an error related to a mock object in `test_user_model.py`.\n\n**Additional Context:**\nThe failure started after the `auth-library` dependency was updated. The logs from the CI run can be found here: [Link to CI logs]"}
{"bad_prompt": "Could you i need a way to contact pupport", "good_prompt": "### New Feature Request: Create a Customer Support Contact Form\n\n**User Story:**\nAs a user who is having a problem, I want a way to contact customer support directly through the website.\n\n**Feature Description:**\nCreate a new 'Contact Support' page, accessible from the main navigation. This page should contain a form where users can enter their name, email, subject, and a detailed description of their issue. Submitting the form should create a new ticket in our customer support system (e.g., Zendesk) via its API.\n\n**Acceptance Criteria:**\n- A new 'Contact Support' page is created.\n- The form on the page includes fields for name, email, subject, and description.\n- Submitting the form successfully creates a new ticket in Zendesk."}
{"bad_prompt": "Can you please the user can't see the new order", "good_prompt": "### Bug Fix: New Orders Are Not Appearing in the User's Order History\n\n**Bug Description:**\nAfter a user successfully places a new order, the order does not appear in their 'Order History' page until they log out and log back in.\n\n**Steps to Reproduce:**\n1. Place a new order.\n2. Go to the 'Order History' page in your account.\n\n**Expected Behavior:**\nThe new order should be listed at the top of the order history.\n\n**Actual Behavior:**\nThe new order is not visible.\n\n**Additional Context:**\nThe frontend application is likely caching the order history data and is not re-fetching it after a new order is placed. The local state or cache needs to be invalidated and updated after a successful checkout."}
{"bad_prompt": "the site is not mobile friendly", "good_prompt": "### Responsive Design: Ensure the Entire Website is Mobile-Friendly\n\n**Objective:**\nPerform a full audit and update of the website's CSS to ensure that all pages are fully responsive and provide an excellent user experience on mobile devices.\n\n**Feature Description:**\nReview every page of the website on a mobile device and fix any layout, styling, or usability issues. This includes, but is not limited to:\n- Ensuring that text is readable and does not require horizontal scrolling.\n- Making sure that all buttons and links are easily tappable.\n- Adapting complex components like tables and forms to a mobile-friendly layout.\n\n**Acceptance Criteria:**\n- All pages of the website render correctly and are usable on screen sizes down to 320px wide.\n- There are no horizontal scrollbars on any page.\n- The site passes Google's Mobile-Friendly Test."}
{"bad_prompt": "Can you please the user can't see the footer", "good_prompt": "### Bug Fix: The Website Footer is Missing on Some Pages\n\n**Bug Description:**\nThe main website footer is not being displayed on certain pages, specifically the blog post detail pages.\n\n**Steps to Reproduce:**\n1. Navigate to any blog post detail page.\n2. Scroll to the bottom of the page.\n\n**Expected Behavior:**\nThe website footer should be visible.\n\n**Actual Behavior:**\nThe footer is missing.\n\n**Additional Context:**\nThe page template for blog posts is likely missing the component that renders the footer."}
{"bad_prompt": "Can you please the user can't see uhe new product", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "the form is not validating", "good_prompt": "### Bug Fix: The Registration Form is Not Validating the Email Address Correctly\n\n**Bug Description:**\nThe user registration form allows users to submit an email address without a valid format (e.g., 'user@domain' instead of 'user@domain.com'). This leads to invalid data in our system.\n\n**Steps to Reproduce:**\n1. Go to the registration page.\n2. Enter a password.\n3. Enter an invalid email address like 'test'.\n4. Click the 'Register' button.\n\n**Expected Behavior:**\nThe form should display a validation error message indicating that the email address is not valid, and the form should not be submitted.\n\n**Actual Behavior:**\nThe form submits successfully with the invalid email address."}
{"bad_prompt": "We need to the user can't see the search baw", "good_prompt": "### Bug Fix: The Search Bar is Missing on Mobile Devices\n\n**Bug Description:**\nThe global search bar, which should be in the header, is not visible on mobile devices.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Observe the header.\n\n**Expected Behavior:**\nThe search bar should be visible or accessible through the mobile menu.\n\n**Actual Behavior:**\nThe search bar is not present.\n\n**Additional Context:**\nThe CSS for the header component is likely hiding the search bar on smaller screen sizes. This needs to be adjusted to make it accessible."}
{"bad_prompt": "Can you please the currency is wrong", "good_prompt": "### Bug Fix: Prices are Displayed in USD instead of EUR\n\n**Bug Description:**\nAll prices on the product and checkout pages are being displayed with a dollar sign ($) and are formatted as USD. The requirement is for all prices to be displayed in Euros (\u20ac).\n\n**Acceptance Criteria:**\n- All prices displayed to the user should use the Euro symbol (\u20ac).\n- The currency formatting should be updated sitewide.\n- A reusable currency formatting utility should be created to ensure consistency."}
{"bad_prompt": "Could you the search resultf are wrong", "good_prompt": "### Bug Fix: Search Results Are Not Relevant to the Search Query\n\n**Bug Description:**\nThe search functionality is returning results that are not relevant to the user's search query. For example, a search for 'billing' returns articles about 'user profiles'.\n\n**Steps to Reproduce:**\n1. Go to the search page.\n2. Enter a specific query like 'billing'.\n3. Observe the list of results.\n\n**Expected Behavior:**\nThe search results should be highly relevant to the search term, with the most relevant articles appearing first.\n\n**Actual Behavior:**\nThe results seem to be semi-random and not related to the query.\n\n**Additional Context:**\nThe search algorithm may be misconfigured. It might be overweighting tags or categories instead of the content body."}
{"bad_prompt": "Can you please the login with google is broken", "good_prompt": "### Bug Fix: 'Login with Google' OAuth Flow Fails with a Redirect URI Mismatch Error\n\n**Bug Description:**\nWhen a user tries to log in using the 'Login with Google' button, the OAuth flow fails, and the user is redirected to an error page from Google that says 'redirect_uri_mismatch'.\n\n**Steps to Reproduce:**\n1. Go to the login page.\n2. Click the 'Login with Google' button.\n3. Observe the error page from Google.\n\n**Expected Behavior:**\nThe user should be successfully authenticated with their Google account and redirected back to the application's dashboard.\n\n**Actual Behavior:**\nThe authentication fails with a 'redirect_uri_mismatch' error.\n\n**Additional Context:**\nThis usually means that the redirect URI configured in our Google Cloud Console for the OAuth client does not match the one our application is sending. We need to verify the URIs in the Google Cloud Console."}
{"bad_prompt": "Could you the site is not translated correctly", "good_prompt": "### Bug Fix: Incomplete Translations on the Spanish Version of the Site\n\n**Bug Description:**\nSeveral sections of the Spanish version of the website (`/es`) are still showing English text. This is particularly noticeable in the footer and on the contact page.\n\n**Steps to Reproduce:**\n1. Switch the website's language to Spanish.\n2. Navigate to the footer and the `/es/contacto` page.\n\n**Expected Behavior:**\nAll text on the page should be in Spanish.\n\n**Actual Behavior:**\nSome text, especially in the footer links and form labels, remains in English.\n\n**Additional Context:**\nThe translation files (e.g., `es.json`) for the i18n library are likely missing the keys for these specific text elements. They need to be added."}
{"bad_prompt": "Could you the site is down", "good_prompt": "### Outage: The Website is Currently Down (502 Bad Gateway)\n\n**Bug Description:**\nThe entire website is currently inaccessible and is returning a 502 Bad Gateway error. This indicates an issue with the upstream server or application.\n\n**Steps to Reproduce:**\n1. Navigate to the website's homepage.\n2. Observe the 502 error page.\n\n**Expected Behavior:**\nThe website should load correctly.\n\n**Actual Behavior:**\nA 502 Bad Gateway error is displayed.\n\n**Additional Context:**\nThis is a critical production issue. The server logs need to be checked immediately to identify the root cause. This could be a crashed application process or a misconfiguration in the load balancer."}
{"bad_prompt": "the privacy policy page is mivsing", "good_prompt": "### Content: Create a 'Privacy Policy' Page\n\n**Objective:**\nCreate a new 'Privacy Policy' page to inform users about how we collect, use, and protect their data.\n\n**Feature Description:**\nCreate a new static page at `/privacy-policy`. The content for this page will be provided by the legal team. The page should be linked in the website's footer.\n\n**Acceptance Criteria:**\n- A new page is created at `/privacy-policy`.\n- The content provided by the legal team is added to the page.\n- A link to the 'Privacy Policy' page is present in the site footer."}
{"bad_prompt": "the api needs pagination", "good_prompt": "### Feature: Add Pagination to the `/api/posts` Endpoint\n\n**Objective:**\nThe `/api/posts` endpoint currently returns all posts at once, which is inefficient and slow. This task is to add pagination to this endpoint to improve performance.\n\n**Acceptance Criteria:**\n- The `/api/posts` endpoint should accept two optional query parameters: `page` (the page number, defaulting to 1) and `limit` (the number of items per page, defaulting to 10).\n- The API response should be a JSON object containing the list of posts for the requested page (`data`) and pagination metadata (`total`, `page`, `limit`).\n- For example, a request to `/api/posts?page=2&limit=5` should return posts 6-10."}
{"bad_prompt": "We need to i need to be able to delete my akcount", "good_prompt": "### New Feature Request: Add Account Deletion Functionality\n\n**User Story:**\nAs a user, I want to be able to permanently delete my account and all my data from the platform.\n\n**Feature Description:**\nAdd a 'Delete Account' button in the 'Account Settings' section of the user profile page. When clicked, this button should open a confirmation modal that warns the user that the action is irreversible. If the user confirms, the system should permanently delete the user's account and all associated data from the database.\n\n**Acceptance Criteria:**\n- A 'Delete Account' button is present in the user's settings.\n- Clicking the button shows a confirmation modal with a clear warning.\n- Confirming the deletion permanently removes the user's data.\n- The user is logged out and redirected to the homepage after deletion."}
{"bad_prompt": "Can you please the site needs a blog", "good_prompt": "### New Feature Request: Create a Blog\n\n**Objective:**\nCreate a new blog section on the website to publish articles and company news.\n\n**Feature Description:**\nCreate a new section of the website for a blog. This should include:\n1. A blog listing page (`/blog`) that displays a paginated list of all blog posts.\n2. A blog post detail page (`/blog/{slug}`) that displays the full content of a single post.\n3. A backend system (or integration with a headless CMS) to manage and create blog posts.\n\n**Acceptance Criteria:**\n- The `/blog` page lists all published blog posts.\n- Users can click on a post to view its full content.\n- The blog post detail page displays the post title, author, date, and content."}
{"bad_prompt": "i need to be able to share blog ponts on social media", "good_prompt": "### New Feature Request: Add Social Media Sharing Buttons to Blog Posts\n\n**User Story:**\nAs a reader, I want to be able to easily share a blog post on social media so that I can share it with my friends and followers.\n\n**Feature Description:**\nAdd social media sharing buttons to each blog post page. The buttons should allow users to share the post on Twitter, Facebook, and LinkedIn. The sharing action should pre-fill the post with the blog post's title and a link to the page.\n\n**Acceptance Criteria:**\n- Sharing buttons for Twitter, Facebook, and LinkedIn are present on each blog post page.\n- Clicking the Twitter button opens a new window with a pre-filled tweet containing the post title and URL.\n- Clicking the Facebook button opens a new window to share the URL.\n- Clicking the LinkedIn button opens a new window to share the URL."}
{"bad_prompt": "We need to the user can't see the new product", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "Could you the iser can't see the search bar", "good_prompt": "### Bug Fix: The Search Bar is Missing on Mobile Devices\n\n**Bug Description:**\nThe global search bar, which should be in the header, is not visible on mobile devices.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Observe the header.\n\n**Expected Behavior:**\nThe search bar should be visible or accessible through the mobile menu.\n\n**Actual Behavior:**\nThe search bar is not present.\n\n**Additional Context:**\nThe CSS for the header component is likely hiding the search bar on smaller screen sizes. This needs to be adjusted to make it accessible."}
{"bad_prompt": "the rsa feed is broken", "good_prompt": "### Bug Fix: The RSS Feed is Not Valid XML\n\n**Bug Description:**\nThe RSS feed at `/rss.xml` is not working correctly because it is not generating valid XML. When trying to use the feed with an RSS reader, it fails with a parsing error.\n\n**Steps to Reproduce:**\n1. Go to `/rss.xml` in a browser or use a validator tool.\n2. Observe the XML parsing error.\n\n**Expected Behavior:**\nThe `/rss.xml` endpoint should return a valid RSS feed in the correct XML format.\n\n**Actual Behavior:**\nThe feed is malformed, likely due to unescaped characters in the content or an incorrect structure."}
{"bad_prompt": "Can you please the user profile is slow", "good_prompt": "### Performance: Optimize User Profile Page Load Time\n\n**Objective:**\nThe user profile page is taking more than 3 seconds to load, which is a poor user experience. This task is to investigate and resolve the performance bottlenecks.\n\n**Acceptance Criteria:**\n- The load time of the user profile page should be reduced to under 1 second.\n- The number of database queries executed when loading the page should be minimized.\n- A performance audit should be conducted using browser developer tools to identify and fix any frontend bottlenecks (e.g., large images, render-blocking scripts)."}
{"bad_prompt": "Could you i need to be able zo upload a profile picture", "good_prompt": "### New Feature Request: Allow Users to Upload a Profile Picture\n\n**User Story:**\nAs a user, I want to be able to upload a profile picture so that I can personalize my account.\n\n**Feature Description:**\nAdd a feature that allows users to upload a profile picture. This should include:\n1. An image upload component on the user profile page.\n2. The ability to crop the uploaded image.\n3. The uploaded image should be stored securely (e.g., in an S3 bucket).\n4. The user's profile picture should be displayed in the header and on their profile page.\n\n**Acceptance Criteria:**\n- Users can select and upload a JPG or PNG image.\n- The uploaded image is displayed on their profile page.\n- The user's avatar in the header is updated with the new picture."}
{"bad_prompt": "Could you the user can't see the carecrs page", "good_prompt": "### Bug Fix: The 'Careers' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Careers' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Careers' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/careers` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the site is slow on mobile", "good_prompt": "### Performance: Optimize Mobile Website Performance\n\n**Objective:**\nImprove the overall performance of the website on mobile devices, focusing on reducing the load time and improving responsiveness.\n\n**Feature Description:**\nPerform a performance audit of the mobile site and implement the following optimizations:\n1. **Code Splitting:** Implement code splitting to reduce the size of the initial JavaScript bundle.\n2. **Image Optimization:** Ensure all images are compressed and served in next-gen formats.\n3. **Reduce Render-Blocking Resources:** Defer the loading of non-critical CSS and JavaScript.\n\n**Acceptance Criteria:**\n- The Google PageSpeed Insights score for mobile should be improved to 90 or above.\n- The First Contentful Paint (FCP) time on a simulated mobile device should be under 1 second."}
{"bad_prompt": "We need to the privacy policy page is missing", "good_prompt": "### Content: Create a 'Privacy Policy' Page\n\n**Objective:**\nCreate a new 'Privacy Policy' page to inform users about how we collect, use, and protect their data.\n\n**Feature Description:**\nCreate a new static page at `/privacy-policy`. The content for this page will be provided by the legal team. The page should be linked in the website's footer.\n\n**Acceptance Criteria:**\n- A new page is created at `/privacy-policy`.\n- The content provided by the legal team is added to the page.\n- A link to the 'Privacy Policy' page is present in the site footer."}
{"bad_prompt": "We need to the user can't see the press page", "good_prompt": "### Bug Fix: The 'Press' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Press' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Press' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/press` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the docker build fcils", "good_prompt": "### Bug Fix: The Docker build is failing\n\n**Bug Description:**\nThe `docker build` command is failing when trying to build the image for our application. The error message indicates that a file specified in the `COPY` command in the `Dockerfile` cannot be found.\n\n**Steps to Reproduce:**\n1. Run `docker build -t my-app .` in the root of the project.\n2. Observe the error message during the build process.\n\n**Expected Behavior:**\nThe Docker image should build successfully without any errors.\n\n**Actual Behavior:**\nThe build fails with an error like `COPY failed: stat /var/lib/docker/tmp/docker-builder12345/src/app/package.json: no such file or directory`.\n\n**Additional Context:**\nThis seems to be an issue with the file path in the `COPY` command in the `Dockerfile`. It likely needs to be adjusted to match the project's directory structure."}
{"bad_prompt": "Can you please the user can't reset their password", "good_prompt": "### Bug Fix: Password Reset Link is Invalid\n\n**Bug Description:**\nThe password reset link sent to users' emails is leading to a page that says 'This link is invalid or has expired', even when the user clicks it immediately.\n\n**Steps to Reproduce:**\n1. Go to the 'Forgot Password' page.\n2. Request a password reset.\n3. Click the link in the email that is sent.\n\n**Expected Behavior:**\nThe user should be taken to a page where they can set a new password.\n\n**Actual Behavior:**\nThe user is shown an 'Invalid link' error page.\n\n**Additional Context:**\nThe token generation or validation logic is flawed. The token being generated might not match the one being checked, or it is being invalidated prematurely."}
{"bad_prompt": "We need to the user can't filter by date", "good_prompt": "### New Feature Request: Add Date Range Filtering to the Orders Page\n\n**User Story:**\nAs a user, I want to be able to filter my order history by a date range so that I can find orders from a specific period.\n\n**Feature Description:**\nAdd a date range filter to the 'Order History' page. The filter should consist of two date input fields: 'Start Date' and 'End Date'. When the user selects a date range and clicks 'Apply', the list of orders should be filtered to show only the orders placed within that range.\n\n**Acceptance Criteria:**\n- 'Start Date' and 'End Date' input fields are present on the order history page.\n- The list of orders updates correctly when the date range filter is applied."}
{"bad_prompt": "Can you please the user profile picture is nyt updating", "good_prompt": "### Bug Fix: The User's Profile Picture Does Not Update After Uploading a New One\n\n**Bug Description:**\nAfter a user successfully uploads a new profile picture, the old picture is still displayed in the header and on their profile page. The new picture only appears after a hard refresh or clearing the cache.\n\n**Steps to Reproduce:**\n1. Upload a new profile picture on the profile settings page.\n2. Observe the avatar in the header.\n\n**Expected Behavior:**\nThe new profile picture should be displayed immediately throughout the application without requiring a hard refresh.\n\n**Actual Behavior:**\nThe old picture remains visible due to a caching issue.\n\n**Additional Context:**\nWe need to add a cache-busting parameter (like a timestamp or version number) to the image URL to ensure that the browser fetches the new version of the image after it has been updated."}
{"bad_prompt": "the site is not translated correctly", "good_prompt": "### Bug Fix: Incomplete Translations on the Spanish Version of the Site\n\n**Bug Description:**\nSeveral sections of the Spanish version of the website (`/es`) are still showing English text. This is particularly noticeable in the footer and on the contact page.\n\n**Steps to Reproduce:**\n1. Switch the website's language to Spanish.\n2. Navigate to the footer and the `/es/contacto` page.\n\n**Expected Behavior:**\nAll text on the page should be in Spanish.\n\n**Actual Behavior:**\nSome text, especially in the footer links and form labels, remains in English.\n\n**Additional Context:**\nThe translation files (e.g., `es.json`) for the i18n library are likely missing the keys for these specific text elements. They need to be added."}
{"bad_prompt": "the user can't see the footer", "good_prompt": "### Bug Fix: The Website Footer is Missing on Some Pages\n\n**Bug Description:**\nThe main website footer is not being displayed on certain pages, specifically the blog post detail pages.\n\n**Steps to Reproduce:**\n1. Navigate to any blog post detail page.\n2. Scroll to the bottom of the page.\n\n**Expected Behavior:**\nThe website footer should be visible.\n\n**Actual Behavior:**\nThe footer is missing.\n\n**Additional Context:**\nThe page template for blog posts is likely missing the component that renders the footer."}
{"bad_prompt": "Can you please the user can create a duplicate account", "good_prompt": "### Bug Fix: A User Can Create Multiple Accounts with the Same Email Address\n\n**Bug Description:**\nThe registration system allows multiple user accounts to be created with the exact same email address. This should not be possible, as the email address should be a unique identifier.\n\n**Steps to Reproduce:**\n1. Register a new account with the email 'test@example.com'.\n2. Log out.\n3. Register another new account, again using the email 'test@example.com'.\n\n**Expected Behavior:**\nThe second registration attempt should fail with an error message indicating that the email address is already in use.\n\n**Actual Behavior:**\nA second account is created successfully.\n\n**Additional Context:**\nA unique constraint needs to be added to the `email` column in the `users` database table. The application's registration logic should also be updated to check if an email already exists before creating a new user."}
{"bad_prompt": "Could you the user can't see the sitemap", "good_prompt": "### Bug Fix: The `sitemap.xml` File is Not Accessible\n\n**Bug Description:**\nNavigating to `/sitemap.xml` results in a 404 Not Found error. The sitemap is being generated during the build process but is not being placed in the correct public directory.\n\n**Steps to Reproduce:**\n1. Go to `/sitemap.xml`.\n\n**Expected Behavior:**\nThe XML content of the sitemap should be displayed.\n\n**Actual Behavior:**\nA 404 error is shown.\n\n**Additional Context:**\nThe build script that generates the sitemap needs to be updated to place the final `sitemap.xml` file into the root of the public output directory."}
{"bad_prompt": "We need to the user can't sde the new user", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "the site is not responsive", "good_prompt": "### Bug Fix: The Pricing Page Layout Breaks on Tablet Screen Sizes\n\n**Bug Description:**\nThe layout of the pricing page does not adapt correctly to tablet screen sizes (between 768px and 1024px wide). The pricing cards overlap, and the text becomes unreadable.\n\n**Steps to Reproduce:**\n1. Open the `/pricing` page in a browser.\n2. Resize the browser window to a width between 768px and 1024px.\n3. Observe the layout of the pricing cards.\n\n**Expected Behavior:**\nThe pricing cards should stack vertically or be arranged in a clean grid that fits the screen size without overlapping.\n\n**Actual Behavior:**\nThe cards overlap, and the content is unreadable."}
{"bad_prompt": "the user can't see the new comment", "good_prompt": "### Bug Fix: New Comments Are Not Appearing in Real-Time\n\n**Bug Description:**\nWhen a user posts a comment, it is successfully saved to the database, but it does not appear on the page for other users unless they manually refresh the page.\n\n**Steps to Reproduce:**\n1. Open a blog post in two different browsers (or as two different users).\n2. Post a comment in one browser.\n3. Observe the comment section in the second browser.\n\n**Expected Behavior:**\nThe new comment should appear in the second browser in real-time (or near real-time) without a refresh.\n\n**Actual Behavior:**\nThe comment section in the second browser does not update.\n\n**Additional Context:**\nTo solve this, we need to implement a real-time solution, such as using WebSockets or a library like Pusher to push new comments to all connected clients. Alternatively, the frontend could poll the server for new comments periodically."}
{"bad_prompt": "We need to the stock status is wrorg", "good_prompt": "### Bug Fix: Product Stock Status is Not Updating Correctly\n\n**Bug Description:**\nWhen a product goes out of stock, its status on the product page still shows as 'In Stock'. The stock level is not being updated in real-time.\n\n**Steps to Reproduce:**\n1. Manually set the stock level of a product to 0 in the database.\n2. View that product's page on the website.\n\n**Expected Behavior:**\nThe product page should display an 'Out of Stock' message, and the 'Add to Cart' button should be disabled.\n\n**Actual Behavior:**\nThe product page still shows 'In Stock', and the user can add it to the cart.\n\n**Additional Context:**\nThere may be a caching issue with the product data API, or the frontend is not correctly re-validating the data."}
{"bad_prompt": "Could you the user can't sie the new comment", "good_prompt": "### Bug Fix: New Comments Are Not Appearing in Real-Time\n\n**Bug Description:**\nWhen a user posts a comment, it is successfully saved to the database, but it does not appear on the page for other users unless they manually refresh the page.\n\n**Steps to Reproduce:**\n1. Open a blog post in two different browsers (or as two different users).\n2. Post a comment in one browser.\n3. Observe the comment section in the second browser.\n\n**Expected Behavior:**\nThe new comment should appear in the second browser in real-time (or near real-time) without a refresh.\n\n**Actual Behavior:**\nThe comment section in the second browser does not update.\n\n**Additional Context:**\nTo solve this, we need to implement a real-time solution, such as using WebSockets or a library like Pusher to push new comments to all connected clients. Alternatively, the frontend could poll the server for new comments periodically."}
{"bad_prompt": "the site is not accessible", "good_prompt": "### Accessibility: Ensure All Images Have Alt Text\n\n**Objective:**\nImprove the accessibility of the website by ensuring that all `<img>` tags have descriptive `alt` attributes. This is crucial for users who use screen readers.\n\n**Acceptance Criteria:**\n- Perform a site-wide audit to identify all `<img>` tags that are missing an `alt` attribute or have a non-descriptive one (e.g., `alt=\"image\"`).\n- For each image, add a descriptive `alt` attribute that accurately describes the content of the image.\n- For purely decorative images, use an empty `alt` attribute (`alt=\"\"`).\n- Run an accessibility checker tool (like WAVE or Axe) to verify that all images have appropriate alt text."}
{"bad_prompt": "Can you please the site is not logging user actions", "good_prompt": "### Feature: Implement an Audit Log for User Actions\n\n**Objective:**\nCreate an audit log that records important user actions for security and compliance purposes.\n\n**Feature Description:**\nCreate a new logging system that records key user actions to a secure log file or database table. The actions to be logged should include:\n- User login/logout\n- Password change/reset\n- Profile information updates\n- Account deletion\nEach log entry should include a timestamp, the user's ID, the action performed, and the user's IP address.\n\n**Acceptance Criteria:**\n- All specified user actions are being logged correctly.\n- The audit log is stored securely and is accessible only to administrators."}
{"bad_prompt": "i can't remove items from the cart", "good_prompt": "### Bug Fix: Removing an Item from the Shopping Cart Does Not Work\n\n**Bug Description:**\nWhen a user clicks the 'Remove' button next to an item in their shopping cart, the item is not removed, and the page simply reloads.\n\n**Steps to Reproduce:**\n1. Add an item to the shopping cart.\n2. Go to the shopping cart page.\n3. Click the 'Remove' button for the item.\n\n**Expected Behavior:**\nThe item should be removed from the shopping cart, and the cart total should be updated.\n\n**Actual Behavior:**\nThe page reloads, but the item remains in the cart."}
{"bad_prompt": "Could you the user can't reset their password", "good_prompt": "### Bug Fix: Password Reset Link is Invalid\n\n**Bug Description:**\nThe password reset link sent to users' emails is leading to a page that says 'This link is invalid or has expired', even when the user clicks it immediately.\n\n**Steps to Reproduce:**\n1. Go to the 'Forgot Password' page.\n2. Request a password reset.\n3. Click the link in the email that is sent.\n\n**Expected Behavior:**\nThe user should be taken to a page where they can set a new password.\n\n**Actual Behavior:**\nThe user is shown an 'Invalid link' error page.\n\n**Additional Context:**\nThe token generation or validation logic is flawed. The token being generated might not match the one being checked, or it is being invalidated prematurely."}
{"bad_prompt": "We need to the user list is not sortes", "good_prompt": "### Bug Fix: The User List in the Admin Panel is Not Sorted Alphabetically\n\n**Bug Description:**\nThe list of users in the admin panel is displayed in a random order, making it difficult to find a specific user.\n\n**Steps to Reproduce:**\n1. Log in as an admin user.\n2. Go to the 'Users' page in the admin panel.\n3. Observe the order of the user list.\n\n**Expected Behavior:**\nThe user list should be sorted alphabetically by username by default.\n\n**Actual Behavior:**\nThe user list is not sorted."}
{"bad_prompt": "Can you please the user can't see the 500 page", "good_prompt": "### Bug Fix: The Custom 500 Page is Not Being Used\n\n**Bug Description:**\nWhen a server-side error occurs, the server's default 500 error page is shown instead of our custom-designed 500 page.\n\n**Steps to Reproduce:**\n1. Trigger a server-side error (e.g., by making an API call that is known to fail).\n\n**Expected Behavior:**\nOur custom 500 'Internal Server Error' page should be displayed.\n\n**Actual Behavior:**\nThe default server or browser 500 page is shown.\n\n**Additional Context:**\nThe application's error handling configuration needs to be updated to render our custom 500 page component when an unhandled server-side exception occurs."}
{"bad_prompt": "the user can't see the register page", "good_prompt": "### Bug Fix: The 'Register' Button in the Header is Broken\n\n**Bug Description:**\nThe 'Register' button in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Register' button in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/register` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the site is sbow on mobile", "good_prompt": "### Performance: Optimize Mobile Website Performance\n\n**Objective:**\nImprove the overall performance of the website on mobile devices, focusing on reducing the load time and improving responsiveness.\n\n**Feature Description:**\nPerform a performance audit of the mobile site and implement the following optimizations:\n1. **Code Splitting:** Implement code splitting to reduce the size of the initial JavaScript bundle.\n2. **Image Optimization:** Ensure all images are compressed and served in next-gen formats.\n3. **Reduce Render-Blocking Resources:** Defer the loading of non-critical CSS and JavaScript.\n\n**Acceptance Criteria:**\n- The Google PageSpeed Insights score for mobile should be improved to 90 or above.\n- The First Contentful Paint (FCP) time on a simulated mobile device should be under 1 second."}
{"bad_prompt": "Can you please the user can't see the contact page", "good_prompt": "### Bug Fix: The 'Contact Us' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Contact Us' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Contact Us' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/contact` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the text is too small", "good_prompt": "### Accessibility: Increase the Base Font Size for Better Readability\n\n**Objective:**\nImprove the accessibility and readability of the website's content by increasing the base font size.\n\n**Acceptance Criteria:**\n- The base font size for all body text (paragraphs, lists, etc.) should be increased from 14px to 16px.\n- All headings (H1, H2, H3, etc.) should be adjusted proportionally to maintain the visual hierarchy.\n- The line height should be adjusted to 1.5 to ensure comfortable reading with the new font size.\n\n**Additional Context:**\nThis change should be implemented in the global CSS file to ensure it applies sitewide."}
{"bad_prompt": "the user can't see the seaich bar", "good_prompt": "### Bug Fix: The Search Bar is Missing on Mobile Devices\n\n**Bug Description:**\nThe global search bar, which should be in the header, is not visible on mobile devices.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Observe the header.\n\n**Expected Behavior:**\nThe search bar should be visible or accessible through the mobile menu.\n\n**Actual Behavior:**\nThe search bar is not present.\n\n**Additional Context:**\nThe CSS for the header component is likely hiding the search bar on smaller screen sizes. This needs to be adjusted to make it accessible."}
{"bad_prompt": "Can you please the deployment script is broken", "good_prompt": "### Bug Fix: The Production Deployment Script Fails During the Build Step\n\n**Bug Description:**\nThe production deployment script (`deploy.sh`) is failing with an error during the `npm run build` step. This is preventing us from deploying new updates to production.\n\n**Steps to Reproduce:**\n1. Run the deployment script locally: `./deploy.sh`\n2. Observe the output during the 'Building application...' step.\n\n**Expected Behavior:**\nThe `npm run build` command should complete successfully, and the script should proceed to the deployment step.\n\n**Actual Behavior:**\nThe script exits with a non-zero status code after an 'out of memory' error during the build process.\n\n**Additional Context:**\nThis issue started after we added the new data visualization library. We may need to increase the memory available to the Node.js process during the build."}
{"bad_prompt": "Can you please the user can't see the new user", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "the user profile page is ugly", "good_prompt": "### UI Redesign: Overhaul the User Profile Page\n\n**Objective:**\nRedesign the user profile page to have a modern, clean, and user-friendly interface based on the new mockups from the design team.\n\n**Feature Description:**\nImplement the new design for the `/profile` page. This includes updating the layout to a two-column grid, replacing the old form elements with new, styled components, and adding a new section for 'Account Settings'.\n\n**Acceptance Criteria:**\n- The layout of the profile page matches the new two-column design in Figma.\n- All form fields (username, email, etc.) are replaced with the new, styled input components.\n- The new 'Account Settings' section is present and includes a button for 'Change Password'.\n- The page is fully responsive and looks correct on mobile, tablet, and desktop.\n\n**Additional Context:**\nThe Figma mockups for the new design can be found here: [Link to Figma]"}
{"bad_prompt": "the user profile picture is not updating", "good_prompt": "### Bug Fix: The User's Profile Picture Does Not Update After Uploading a New One\n\n**Bug Description:**\nAfter a user successfully uploads a new profile picture, the old picture is still displayed in the header and on their profile page. The new picture only appears after a hard refresh or clearing the cache.\n\n**Steps to Reproduce:**\n1. Upload a new profile picture on the profile settings page.\n2. Observe the avatar in the header.\n\n**Expected Behavior:**\nThe new profile picture should be displayed immediately throughout the application without requiring a hard refresh.\n\n**Actual Behavior:**\nThe old picture remains visible due to a caching issue.\n\n**Additional Context:**\nWe need to add a cache-busting parameter (like a timestamp or version number) to the image URL to ensure that the browser fetches the new version of the image after it has been updated."}
{"bad_prompt": "the user oata is not being deleted correctly", "good_prompt": "### Bug Fix: Deleting a User Account Does Not Delete All of Their Data\n\n**Bug Description:**\nWhen a user deletes their account, their main user record is deleted, but their associated data (like their posts and comments) remains in the database, orphaned.\n\n**Steps to Reproduce:**\n1. Create a user and have them create some posts.\n2. Delete the user's account.\n3. Check the database to see if the user's posts still exist.\n\n**Expected Behavior:**\nWhen a user account is deleted, all of their associated data (posts, comments, etc.) should also be deleted (cascading delete).\n\n**Actual Behavior:**\nOnly the user record is deleted, leaving orphaned data in the database.\n\n**Additional Context:**\nThe database schema needs to be updated to use a cascading delete for the foreign key relationships, or the application logic needs to be updated to manually delete all associated data when a user is deleted."}
{"bad_prompt": "tae welcome email is ugly", "good_prompt": "### UI Improvement: Redesign the New User Welcome Email\n\n**Objective:**\nRedesign the welcome email that is sent to new users upon registration to be more visually appealing and on-brand.\n\n**Feature Description:**\nUpdate the HTML template for the welcome email to match the new design provided by the marketing team. This includes using the brand's fonts and colors, adding the company logo, and updating the copy to be more welcoming.\n\n**Acceptance Criteria:**\n- The welcome email's design matches the new template in Figma.\n- The email renders correctly in major email clients (Gmail, Outlook, Apple Mail).\n\n**Additional Context:**\nThe Figma design for the new email template is here: [Link to Figma]"}
{"bad_prompt": "Can you please fin the header", "good_prompt": "### Bug Fix: Resolve Header Layout Issue on Mobile Devices\n\n**Bug Description:**\nThe main site header is not rendering correctly on mobile screen sizes (below 600px). The logo overlaps the navigation links, making them unclickable.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device or in a browser with the viewport width set to less than 600px.\n2. Observe the main header at the top of the page.\n\n**Expected Behavior:**\nThe header elements should be aligned properly, with no overlap. A hamburger menu should be visible to toggle the navigation links.\n\n**Actual Behavior:**\nThe logo and navigation links are overlapping."}
{"bad_prompt": "We need to the user can't see the new user", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "and a 404 page", "good_prompt": "### New Feature Request: Create a Custom 404 'Not Found' Page\n\n**Objective:**\nCreate a custom, user-friendly 404 'Not Found' page to improve the user experience when they navigate to a non-existent URL.\n\n**Feature Description:**\nDesign and implement a custom 404 page that replaces the default server/browser error. The page should have a friendly message, an illustration or graphic, and a clear link or button to return to the homepage.\n\n**Acceptance Criteria:**\n- Navigating to a URL that does not exist (e.g., `/a-fake-page`) displays the new custom 404 page.\n- The page includes a helpful message like 'Page Not Found'.\n- The page includes a prominent link or button that takes the user back to the homepage."}
{"bad_prompt": "We need to the site is not responsivf", "good_prompt": "### Bug Fix: The Pricing Page Layout Breaks on Tablet Screen Sizes\n\n**Bug Description:**\nThe layout of the pricing page does not adapt correctly to tablet screen sizes (between 768px and 1024px wide). The pricing cards overlap, and the text becomes unreadable.\n\n**Steps to Reproduce:**\n1. Open the `/pricing` page in a browser.\n2. Resize the browser window to a width between 768px and 1024px.\n3. Observe the layout of the pricing cards.\n\n**Expected Behavior:**\nThe pricing cards should stack vertically or be arranged in a clean grid that fits the screen size without overlapping.\n\n**Actual Behavior:**\nThe cards overlap, and the content is unreadable."}
{"bad_prompt": "We need to the checkwut process is confusing", "good_prompt": "### UX Improvement: Simplify the Checkout Process\n\n**Objective:**\nImprove the user experience of the checkout process to reduce friction and increase conversion rates.\n\n**Feature Description:**\nRedesign the checkout flow from a multi-page process to a single-page checkout. All the necessary fields (shipping address, billing address, payment information) should be on a single page. The user's progress should be clearly indicated.\n\n**Acceptance Criteria:**\n- The entire checkout process is contained within a single `/checkout` page.\n- The user can enter their shipping, billing, and payment information without navigating to different pages.\n- The design matches the new single-page checkout mockups from the design team.\n\n**Additional Context:**\nFigma mockups: [Link to Figma]"}
{"bad_prompt": "the user can't wee the new product", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "Can you please the user can't see the search bar", "good_prompt": "### Bug Fix: The Search Bar is Missing on Mobile Devices\n\n**Bug Description:**\nThe global search bar, which should be in the header, is not visible on mobile devices.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Observe the header.\n\n**Expected Behavior:**\nThe search bar should be visible or accessible through the mobile menu.\n\n**Actual Behavior:**\nThe search bar is not present.\n\n**Additional Context:**\nThe CSS for the header component is likely hiding the search bar on smaller screen sizes. This needs to be adjusted to make it accessible."}
{"bad_prompt": "Can you please thq user can't reset their password", "good_prompt": "### Bug Fix: Password Reset Link is Invalid\n\n**Bug Description:**\nThe password reset link sent to users' emails is leading to a page that says 'This link is invalid or has expired', even when the user clicks it immediately.\n\n**Steps to Reproduce:**\n1. Go to the 'Forgot Password' page.\n2. Request a password reset.\n3. Click the link in the email that is sent.\n\n**Expected Behavior:**\nThe user should be taken to a page where they can set a new password.\n\n**Actual Behavior:**\nThe user is shown an 'Invalid link' error page.\n\n**Additional Context:**\nThe token generation or validation logic is flawed. The token being generated might not match the one being checked, or it is being invalidated prematurely."}
{"bad_prompt": "Could you the user can't see the security.txt file", "good_prompt": "### Security: Create a `security.txt` File\n\n**Objective:**\nCreate a `security.txt` file to provide a point of contact for security researchers who may find vulnerabilities in our website.\n\n**Feature Description:**\nCreate a `security.txt` file in the `.well-known` directory of the public folder. The file should follow the standard format and include contact information for reporting security issues.\n\n**Acceptance Criteria:**\n- A `security.txt` file is accessible at `/.well-known/security.txt`.\n- The file contains a valid contact email for security reports."}
{"bad_prompt": "Can you please the user can't see the new odder", "good_prompt": "### Bug Fix: New Orders Are Not Appearing in the User's Order History\n\n**Bug Description:**\nAfter a user successfully places a new order, the order does not appear in their 'Order History' page until they log out and log back in.\n\n**Steps to Reproduce:**\n1. Place a new order.\n2. Go to the 'Order History' page in your account.\n\n**Expected Behavior:**\nThe new order should be listed at the top of the order history.\n\n**Actual Behavior:**\nThe new order is not visible.\n\n**Additional Context:**\nThe frontend application is likely caching the order history data and is not re-fetching it after a new order is placed. The local state or cache needs to be invalidated and updated after a successful checkout."}
{"bad_prompt": "Can you please ths video player is broken", "good_prompt": "### Bug Fix: Embedded Video Player is Not Working on Firefox\n\n**Bug Description:**\nThe embedded video player on the `/watch/{id}` page does not load or play videos when using the Firefox browser. It works correctly in Chrome and Safari.\n\n**Steps to Reproduce:**\n1. Open the website in the Firefox browser.\n2. Navigate to any video page (e.g., `/watch/123`).\n3. Observe the video player area.\n\n**Expected Behavior:**\nThe video player should load and be able to play the video.\n\n**Actual Behavior:**\nThe video player is black and does not respond to clicks. There may be a console error related to video codecs or a browser-specific API."}
{"bad_prompt": "We need to i need to be able to download an invoicp", "good_prompt": "### New Feature Request: Allow Users to Download Invoices\n\n**User Story:**\nAs a customer, I want to be able to download a PDF invoice for my past orders so that I can keep it for my records.\n\n**Feature Description:**\nIn the 'Order History' page, add a 'Download Invoice' button next to each completed order. When a user clicks this button, the system should generate a PDF invoice for that specific order and initiate a download.\n\n**Acceptance Criteria:**\n- A 'Download Invoice' button is present for each completed order in the user's order history.\n- Clicking the button downloads a correctly formatted PDF invoice.\n- The invoice contains all the relevant order details (products, prices, totals, billing information)."}
{"bad_prompt": "Can you please the dates are in the wrong format", "good_prompt": "### Bug Fix: Dates Are Displayed in the Wrong Format\n\n**Bug Description:**\nThroughout the application, dates are being displayed in the `YYYY-MM-DD` format (e.g., '2023-10-27'). The requirement is to display them in a more user-friendly format, `Month Day, Year` (e.g., 'October 27, 2023').\n\n**Acceptance Criteria:**\n- All user-facing dates (e.g., blog post dates, order dates, comment dates) should be displayed in the `Month Day, Year` format.\n- This should be implemented by creating a reusable date formatting utility function to ensure consistency.\n- The change should be applied to all relevant components."}
{"bad_prompt": "the login is not secure", "good_prompt": "### Security: Implement Two-Factor Authentication (2FA) for User Login\n\n**User Story:**\nAs a security-conscious user, I want to enable Two-Factor Authentication for my account to prevent unauthorized access.\n\n**Feature Description:**\nIntegrate a 2FA system into the user authentication flow. Users should be able to enable 2FA in their account settings, which will require them to provide a one-time password (OTP) from an authenticator app (like Google Authenticator) upon login.\n\n**Acceptance Criteria:**\n- Users have a new 'Security' section in their account settings.\n- In the 'Security' section, users can enable 2FA by scanning a QR code.\n- When 2FA is enabled, the login page will require a second step to enter the OTP."}
{"bad_prompt": "Could you i can't upload a pgf", "good_prompt": "### Bug Fix: File Upload Component Rejects PDF Files\n\n**Bug Description:**\nThe file upload component on the 'Documents' page is incorrectly rejecting PDF files. When a user tries to upload a PDF, they receive an 'Invalid file type' error.\n\n**Steps to Reproduce:**\n1. Go to the '/documents' page.\n2. Click the 'Upload' button.\n3. Select a PDF file from the file picker.\n\n**Expected Behavior:**\nThe PDF file should be accepted and uploaded successfully.\n\n**Actual Behavior:**\nAn 'Invalid file type' error message is displayed, and the upload is blocked.\n\n**Additional Context:**\nThe list of accepted file types in the component's configuration is likely missing the `application/pdf` MIME type."}
{"bad_prompt": "We need to the user can't see the 404 page", "good_prompt": "### Bug Fix: The Custom 404 Page is Not Being Used\n\n**Bug Description:**\nWhen navigating to a non-existent page, the server's default 404 error page is shown instead of our custom-designed 404 page.\n\n**Steps to Reproduce:**\n1. Navigate to a URL that does not exist (e.g., `/this-page-does-not-exist`).\n\n**Expected Behavior:**\nOur custom 404 page should be displayed.\n\n**Actual Behavior:**\nThe default server or browser 404 page is shown.\n\n**Additional Context:**\nThe application's routing configuration needs to be updated to correctly point to our custom 404 page component for all unmatched routes."}
{"bad_prompt": "We need to the user can't see the 500 page", "good_prompt": "### Bug Fix: The Custom 500 Page is Not Being Used\n\n**Bug Description:**\nWhen a server-side error occurs, the server's default 500 error page is shown instead of our custom-designed 500 page.\n\n**Steps to Reproduce:**\n1. Trigger a server-side error (e.g., by making an API call that is known to fail).\n\n**Expected Behavior:**\nOur custom 500 'Internal Server Error' page should be displayed.\n\n**Actual Behavior:**\nThe default server or browser 500 page is shown.\n\n**Additional Context:**\nThe application's error handling configuration needs to be updated to render our custom 500 page component when an unhandled server-side exception occurs."}
{"bad_prompt": "the mobile menu is brokmn", "good_prompt": "### Bug Fix: The Mobile Navigation Menu Does Not Close After Clicking a Link\n\n**Bug Description:**\nOn mobile devices, when the user opens the navigation menu and clicks on a link, the application navigates to the new page, but the menu remains open, covering the content.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Tap the hamburger icon to open the navigation menu.\n3. Tap on any link in the menu (e.g., 'About Us').\n\n**Expected Behavior:**\nThe application should navigate to the new page, and the mobile menu should automatically close.\n\n**Actual Behavior:**\nThe page changes, but the menu stays open."}
{"bad_prompt": "We need to the user canst see the images", "good_prompt": "### Bug Fix: Images Not Loading Due to CORS Policy Error\n\n**Bug Description:**\nImages that are hosted on our separate CDN domain are not loading on the website. The browser's developer console shows a Cross-Origin Resource Sharing (CORS) policy error.\n\n**Steps to Reproduce:**\n1. Go to the homepage.\n2. Observe that the main hero image is missing.\n3. Check the browser's developer console for errors.\n\n**Expected Behavior:**\nAll images should load correctly.\n\n**Actual Behavior:**\nImages are blocked by the browser due to a CORS error.\n\n**Additional Context:**\nThe CDN server needs to be configured to send the correct CORS headers, specifically `Access-Control-Allow-Origin: https://www.our-site.com`."}
{"bad_prompt": "the site needs a favicon", "good_prompt": "### Feature: Add a Favicon to the Website\n\n**Objective:**\nImprove the site's branding and user experience by adding a favicon.\n\n**Feature Description:**\nAdd the necessary favicon files (`favicon.ico`, `apple-touch-icon.png`, etc.) to the public directory and link them in the `<head>` section of the main HTML template.\n\n**Acceptance Criteria:**\n- The website's favicon is displayed correctly in browser tabs.\n- The favicon is displayed when the site is saved as a bookmark or added to a mobile home screen."}
{"bad_prompt": "We need to the user can't see the new comment", "good_prompt": "### Bug Fix: New Comments Are Not Appearing in Real-Time\n\n**Bug Description:**\nWhen a user posts a comment, it is successfully saved to the database, but it does not appear on the page for other users unless they manually refresh the page.\n\n**Steps to Reproduce:**\n1. Open a blog post in two different browsers (or as two different users).\n2. Post a comment in one browser.\n3. Observe the comment section in the second browser.\n\n**Expected Behavior:**\nThe new comment should appear in the second browser in real-time (or near real-time) without a refresh.\n\n**Actual Behavior:**\nThe comment section in the second browser does not update.\n\n**Additional Context:**\nTo solve this, we need to implement a real-time solution, such as using WebSockets or a library like Pusher to push new comments to all connected clients. Alternatively, the frontend could poll the server for new comments periodically."}
{"bad_prompt": "the yser can't see the new product", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "implement a dark gode", "good_prompt": "### New Feature Request: Implement a Dark Mode Theme\n\n**User Story:**\nAs a user who often works at night, I want to be able to switch the website to a dark mode theme to reduce eye strain.\n\n**Feature Description:**\nImplement a dark mode theme for the entire website. A toggle switch should be added to the header that allows users to switch between the default (light) and dark themes. The user's preference should be saved in `localStorage` so that it persists across sessions.\n\n**Acceptance Criteria:**\n- A theme toggle switch is present in the header.\n- Clicking the toggle switches the site's color scheme between light and dark modes.\n- All components (buttons, forms, text, backgrounds) have appropriate styles for both themes.\n- The user's selected theme is remembered when they revisit the site."}
{"bad_prompt": "the user can't see the contact page", "good_prompt": "### Bug Fix: The 'Contact Us' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Contact Us' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Contact Us' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/contact` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Could you the pagination is not working", "good_prompt": "### Bug Fix: Pagination on the Blog Page is Broken\n\n**Bug Description:**\nWhen a user clicks on the 'Next Page' or a page number link in the pagination control on the blog page, it does not navigate to the correct set of posts. It appears to be reloading the same first page of posts.\n\n**Steps to Reproduce:**\n1. Go to the `/blog` page.\n2. Scroll down to the bottom to find the pagination control.\n3. Click on page '2' or the 'Next Page' link.\n\n**Expected Behavior:**\nThe page should display the next set of blog posts (e.g., posts 11-20).\n\n**Actual Behavior:**\nThe page reloads but still shows the first set of posts (posts 1-10)."}
{"bad_prompt": "We need to the gser can't see their own profile picture", "good_prompt": "### Bug Fix: User's Own Profile Picture is Not Displayed on Their Profile Page\n\n**Bug Description:**\nWhile the user's avatar is displayed correctly in the header, their full-size profile picture is not appearing on their own profile page. A placeholder image is shown instead.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Navigate to your own profile page.\n\n**Expected Behavior:**\nThe user's full-size profile picture should be displayed.\n\n**Actual Behavior:**\nA placeholder image is shown.\n\n**Additional Context:**\nThe component responsible for rendering the profile page is likely fetching the user data but is not correctly accessing the `profile_picture_url` attribute."}
{"bad_prompt": "Can you please the user czn't see the terms of service", "good_prompt": "### Bug Fix: The 'Terms of Service' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Terms of Service' link in the website footer is pointing to a non-existent page (`/tos`) instead of the correct page (`/terms-of-service`).\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Terms of Service' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/terms-of-service` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Could you the user cnn't see the footer", "good_prompt": "### Bug Fix: The Website Footer is Missing on Some Pages\n\n**Bug Description:**\nThe main website footer is not being displayed on certain pages, specifically the blog post detail pages.\n\n**Steps to Reproduce:**\n1. Navigate to any blog post detail page.\n2. Scroll to the bottom of the page.\n\n**Expected Behavior:**\nThe website footer should be visible.\n\n**Actual Behavior:**\nThe footer is missing.\n\n**Additional Context:**\nThe page template for blog posts is likely missing the component that renders the footer."}
{"bad_prompt": "Could you the user can't see the privacy policy", "good_prompt": "### Bug Fix: The 'Privacy Policy' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Privacy Policy' link in the website footer is pointing to an incorrect URL.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Privacy Policy' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/privacy-policy` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Can you please the site is not using a CDN", "good_prompt": "### Performance: Use a CDN to Serve Static Assets\n\n**Objective:**\nImprove the global loading performance of the website by serving all static assets (CSS, JavaScript, images) from a Content Delivery Network (CDN).\n\n**Feature Description:**\nConfigure the application's build process and server to serve all static assets from a CDN (e.g., Cloudflare, AWS CloudFront). This involves updating the asset URLs in the application's HTML to point to the CDN.\n\n**Acceptance Criteria:**\n- All CSS, JS, and image files are served from the CDN's domain, not our origin server.\n- The website loads correctly with the assets being served from the CDN.\n- The page load time for users in different geographic regions is significantly reduced."}
{"bad_prompt": "We need to the user profile is slow", "good_prompt": "### Performance: Optimize User Profile Page Load Time\n\n**Objective:**\nThe user profile page is taking more than 3 seconds to load, which is a poor user experience. This task is to investigate and resolve the performance bottlenecks.\n\n**Acceptance Criteria:**\n- The load time of the user profile page should be reduced to under 1 second.\n- The number of database queries executed when loading the page should be minimized.\n- A performance audit should be conducted using browser developer tools to identify and fix any frontend bottlenecks (e.g., large images, render-blocking scripts)."}
{"bad_prompt": "the map on the contact page is not working", "good_prompt": "### Bug Fix: The Interactive Map on the Contact Page is Not Loading\n\n**Bug Description:**\nThe interactive map on the `/contact` page (e.g., Google Maps, Mapbox) is not loading. The area where the map should be is blank, and there is a JavaScript error in the console related to a missing API key.\n\n**Steps to Reproduce:**\n1. Go to the `/contact` page.\n2. Observe the map section.\n\n**Expected Behavior:**\nThe interactive map should load and display our office location.\n\n**Actual Behavior:**\nThe map area is blank, and there is a console error indicating that the API key is invalid or missing.\n\n**Additional Context:**\nThe API key for the map service needs to be added to the application's environment variables and included in the script that loads the map."}
{"bad_prompt": "implement a 404 page", "good_prompt": "### New Feature Request: Create a Custom 404 'Not Found' Page\n\n**Objective:**\nCreate a custom, user-friendly 404 'Not Found' page to improve the user experience when they navigate to a non-existent URL.\n\n**Feature Description:**\nDesign and implement a custom 404 page that replaces the default server/browser error. The page should have a friendly message, an illustration or graphic, and a clear link or button to return to the homepage.\n\n**Acceptance Criteria:**\n- Navigating to a URL that does not exist (e.g., `/a-fake-page`) displays the new custom 404 page.\n- The page includes a helpful message like 'Page Not Found'.\n- The page includes a prominent link or button that takes the user back to the homepage."}
{"bad_prompt": "zhe user can't see the login page", "good_prompt": "### Bug Fix: The 'Login' Button in the Header is Broken\n\n**Bug Description:**\nThe 'Login' button in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Login' button in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/login` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "We need to the user can't see the header", "good_prompt": "### Bug Fix: The Website Header is Missing on the Login Page\n\n**Bug Description:**\nThe main website header, which contains the logo and navigation, is missing on the login page.\n\n**Steps to Reproduce:**\n1. Navigate to the `/login` page.\n\n**Expected Behavior:**\nThe website header should be visible at the top of the page.\n\n**Actual Behavior:**\nThe header is missing.\n\n**Additional Context:**\nThe page template for the login page is likely using a different layout that excludes the main header component."}
{"bad_prompt": "Could you the user can't see the net comment", "good_prompt": "### Bug Fix: New Comments Are Not Appearing in Real-Time\n\n**Bug Description:**\nWhen a user posts a comment, it is successfully saved to the database, but it does not appear on the page for other users unless they manually refresh the page.\n\n**Steps to Reproduce:**\n1. Open a blog post in two different browsers (or as two different users).\n2. Post a comment in one browser.\n3. Observe the comment section in the second browser.\n\n**Expected Behavior:**\nThe new comment should appear in the second browser in real-time (or near real-time) without a refresh.\n\n**Actual Behavior:**\nThe comment section in the second browser does not update.\n\n**Additional Context:**\nTo solve this, we need to implement a real-time solution, such as using WebSockets or a library like Pusher to push new comments to all connected clients. Alternatively, the frontend could poll the server for new comments periodically."}
{"bad_prompt": "Can you please the user fan't see the 404 page", "good_prompt": "### Bug Fix: The Custom 404 Page is Not Being Used\n\n**Bug Description:**\nWhen navigating to a non-existent page, the server's default 404 error page is shown instead of our custom-designed 404 page.\n\n**Steps to Reproduce:**\n1. Navigate to a URL that does not exist (e.g., `/this-page-does-not-exist`).\n\n**Expected Behavior:**\nOur custom 404 page should be displayed.\n\n**Actual Behavior:**\nThe default server or browser 404 page is shown.\n\n**Additional Context:**\nThe application's routing configuration needs to be updated to correctly point to our custom 404 page component for all unmatched routes."}
{"bad_prompt": "Can you please the user can't see the new comment", "good_prompt": "### Bug Fix: New Comments Are Not Appearing in Real-Time\n\n**Bug Description:**\nWhen a user posts a comment, it is successfully saved to the database, but it does not appear on the page for other users unless they manually refresh the page.\n\n**Steps to Reproduce:**\n1. Open a blog post in two different browsers (or as two different users).\n2. Post a comment in one browser.\n3. Observe the comment section in the second browser.\n\n**Expected Behavior:**\nThe new comment should appear in the second browser in real-time (or near real-time) without a refresh.\n\n**Actual Behavior:**\nThe comment section in the second browser does not update.\n\n**Additional Context:**\nTo solve this, we need to implement a real-time solution, such as using WebSockets or a library like Pusher to push new comments to all connected clients. Alternatively, the frontend could poll the server for new comments periodically."}
{"bad_prompt": "Could you the site needs a favicon", "good_prompt": "### Feature: Add a Favicon to the Website\n\n**Objective:**\nImprove the site's branding and user experience by adding a favicon.\n\n**Feature Description:**\nAdd the necessary favicon files (`favicon.ico`, `apple-touch-icon.png`, etc.) to the public directory and link them in the `<head>` section of the main HTML template.\n\n**Acceptance Criteria:**\n- The website's favicon is displayed correctly in browser tabs.\n- The favicon is displayed when the site is saved as a bookmark or added to a mobile home screen."}
{"bad_prompt": "the api is timing out", "good_prompt": "### Bug Fix: API Gateway Timeout on `/api/reports` Endpoint\n\n**Bug Description:**\nRequests to the `/api/reports` endpoint are consistently failing with a 504 Gateway Timeout error, especially for large date ranges. This is preventing users from generating reports.\n\n**Steps to Reproduce:**\n1. Make a GET request to `/api/reports` with a date range of more than 90 days.\n2. Observe the 504 error response.\n\n**Expected Behavior:**\nThe API should successfully generate and return the report, even for large date ranges.\n\n**Actual Behavior:**\nThe request times out.\n\n**Additional Context:**\nThe report generation query is too slow and needs to be optimized. This process should also be moved to an asynchronous background job to avoid timeouts."}
{"bad_prompt": "Can you please the dropdown is not working oy mobile", "good_prompt": "### Bug Fix: The Main Navigation Dropdown Menu is Not Clickable on Mobile\n\n**Bug Description:**\nThe dropdown menu in the main navigation bar cannot be opened on mobile devices (touch screens). Tapping on the menu item does nothing.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device or a browser in mobile emulation mode.\n2. Tap on the 'Services' navigation item, which is supposed to have a dropdown menu.\n\n**Expected Behavior:**\nA dropdown menu should appear, showing the sub-pages.\n\n**Actual Behavior:**\nNothing happens when the navigation item is tapped."}
{"bad_prompt": "the site is not secure (no hqtps)", "good_prompt": "### Security: Enforce HTTPS on the Production Site\n\n**Objective:**\nEnsure that all traffic to our production website is served over HTTPS to protect user data and improve security.\n\n**Feature Description:**\nConfigure the production web server (e.g., Nginx, Vercel) to automatically redirect all HTTP requests to HTTPS. Additionally, ensure that the appropriate HSTS (HTTP Strict Transport Security) headers are set to prevent protocol downgrade attacks.\n\n**Acceptance Criteria:**\n- Accessing `http://www.our-site.com` automatically redirects to `https://www.our-site.com`.\n- The site's SSL certificate is valid and correctly installed.\n- The HSTS header is present in the response headers."}
{"bad_prompt": "the user can't see the settings page", "good_prompt": "### Bug Fix: The 'Settings' Link in the User Dropdown is Broken\n\n**Bug Description:**\nThe 'Settings' link in the user dropdown menu (in the header) is broken.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the user's avatar in the header to open the dropdown.\n3. Click the 'Settings' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/account/settings` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the api is wlow", "good_prompt": "### Performance: Optimize the `/api/dashboard` Endpoint\n\n**Objective:**\nImprove the performance of the main dashboard API endpoint, which is currently taking over 2 seconds to load.\n\n**Bug Description:**\nThe GET request to `/api/dashboard` is very slow because it performs multiple, inefficient database queries to aggregate data.\n\n**Acceptance Criteria:**\n- Refactor the database queries in the `/api/dashboard` endpoint to be more efficient, for example, by using joins or a single, more complex query instead of multiple simple ones.\n- The average response time for the endpoint should be reduced to under 500ms.\n\n**Additional Context:**\nAn analysis of the queries shows that the main bottleneck is a loop that makes a separate database call for each user. This should be refactored into a single query."}
{"bad_prompt": "Can you please the terms of service page is missing", "good_prompt": "### Content: Create a 'Terms of Service' Page\n\n**Objective:**\nCreate a new 'Terms of Service' page to provide users with the legal terms and conditions for using our website and services.\n\n**Feature Description:**\nCreate a new static page at `/terms-of-service`. The content for this page will be provided by the legal team. The page should be linked in the website's footer.\n\n**Acceptance Criteria:**\n- A new page is created at `/terms-of-service`.\n- The content provided by the legal team is added to the page.\n- A link to the 'Terms of Service' page is present in the site footer."}
{"bad_prompt": "the user can't see the app-ads.txt file", "good_prompt": "### Advertising: Create an `app-ads.txt` File\n\n**Objective:**\nCreate an `app-ads.txt` file for our mobile app to declare the authorized sellers of our in-app ad inventory.\n\n**Feature Description:**\nCreate an `app-ads.txt` file in the root of the public directory. The file should contain the list of authorized ad sellers for our mobile app.\n\n**Acceptance Criteria:**\n- An `app-ads.txt` file is accessible at the root of the website.\n- The file contains the correct information for our authorized mobile ad sellers."}
{"bad_prompt": "Could you the mobile app crashes", "good_prompt": "### Bug Fix: iOS App Crashes on Startup for iOS 17\n\n**Bug Description:**\nThe iOS application is crashing immediately upon startup for users running iOS 17. The app is unusable for these users.\n\n**Steps to Reproduce:**\n1. Install the app on a device running iOS 17.\n2. Try to open the app.\n\n**Expected Behavior:**\nThe app should open and function normally.\n\n**Actual Behavior:**\nThe app crashes immediately.\n\n**Additional Context:**\nThe crash logs indicate a null pointer exception in the `AppDelegate` related to the initialization of a third-party library that may not be compatible with iOS 17."}
{"bad_prompt": "implement a sitgmap", "good_prompt": "### SEO: Generate a `sitemap.xml` File\n\n**Objective:**\nImprove the site's SEO by generating a `sitemap.xml` file that helps search engines discover and index all the pages on our website.\n\n**Feature Description:**\nCreate a script that automatically generates a `sitemap.xml` file. This script should be run as part of our build process. The sitemap should include the URLs for all static pages (e.g., homepage, about, contact) and all dynamic pages (e.g., blog posts, product pages).\n\n**Acceptance Criteria:**\n- A `sitemap.xml` file is generated in the root of the public directory after the build process.\n- The sitemap is correctly formatted XML.\n- The sitemap includes all public pages of the website."}
{"bad_prompt": "the site needs a press page", "good_prompt": "### Content: Create a 'Press' Page\n\n**Objective:**\nCreate a new 'Press' page to provide resources for journalists and the media.\n\n**Feature Description:**\nCreate a new static page at `/press`. This page should include our company's press kit, logos, and contact information for media inquiries.\n\n**Acceptance Criteria:**\n- A new page is created at `/press`.\n- The page contains a downloadable press kit.\n- The page provides a clear email address for press inquiries."}
{"bad_prompt": "Could you the breadcrumbs are wrong", "good_prompt": "### Bug Fix: Breadcrumb Navigation Shows Incorrect Path\n\n**Bug Description:**\nThe breadcrumb navigation component is showing an incorrect path on nested product category pages. For example, on a page for 'Laptops' within 'Electronics', the breadcrumb only shows 'Home > Laptops', omitting 'Electronics'.\n\n**Steps to Reproduce:**\n1. Navigate to a nested category page, e.g., 'Home > Electronics > Laptops'.\n2. Observe the breadcrumb trail at the top of the page.\n\n**Expected Behavior:**\nThe breadcrumb should show the full path: `Home > Electronics > Laptops`.\n\n**Actual Behavior:**\nThe breadcrumb shows an incomplete path: `Home > Laptops`."}
{"bad_prompt": "the cookie banner is annoying", "good_prompt": "### UX Improvement: Make the Cookie Banner Less Intrusive\n\n**Objective:**\nImprove the user experience by making the cookie consent banner less intrusive while still being compliant with regulations.\n\n**Feature Description:**\nRedesign the current cookie banner, which is a large modal that blocks the center of the page. The new design should be a small banner at the bottom of the screen that does not block the main content. The user should be able to dismiss it easily.\n\n**Acceptance Criteria:**\n- The cookie consent banner is displayed at the bottom of the screen.\n- The banner does not cover up any critical navigation or content.\n- The user's consent choice is saved correctly, and the banner does not reappear on subsequent visits."}
{"bad_prompt": "We need to i need to be able to export my data", "good_prompt": "### New Feature Request: Allow Users to Export Their Data\n\n**User Story:**\nAs a user, I want to be able to export all my data in a machine-readable format (like JSON) to comply with data portability regulations (like GDPR).\n\n**Feature Description:**\nAdd a new 'Export Data' section to the user's account settings page. This section should have a button that allows the user to request a full export of their data. The export process should run in the background, and the user should be notified by email when their export file is ready to be downloaded.\n\n**Acceptance Criteria:**\n- A 'Request Data Export' button is available in the account settings.\n- Clicking the button triggers an asynchronous job to generate the export.\n- The user receives an email with a secure link to download their data as a JSON file."}
{"bad_prompt": "update the dependencies", "good_prompt": "### Chore: Update Outdated NPM Dependencies\n\n**Objective:**\nUpdate all outdated NPM dependencies to their latest stable versions to ensure the project is secure and up-to-date.\n\n**Acceptance Criteria:**\n- Run `npm outdated` to identify all outdated packages.\n- Update each package to its latest major or minor version as appropriate in the `package.json` file.\n- Run `npm install` to update the `package-lock.json` file.\n- After updating, run the test suite (`npm test`) to ensure that the updates have not introduced any breaking changes.\n- Manually test the core application flows (login, form submission) to verify functionality."}
{"bad_prompt": "We need to i need to be able to download an invoice", "good_prompt": "### New Feature Request: Allow Users to Download Invoices\n\n**User Story:**\nAs a customer, I want to be able to download a PDF invoice for my past orders so that I can keep it for my records.\n\n**Feature Description:**\nIn the 'Order History' page, add a 'Download Invoice' button next to each completed order. When a user clicks this button, the system should generate a PDF invoice for that specific order and initiate a download.\n\n**Acceptance Criteria:**\n- A 'Download Invoice' button is present for each completed order in the user's order history.\n- Clicking the button downloads a correctly formatted PDF invoice.\n- The invoice contains all the relevant order details (products, prices, totals, billing information)."}
{"bad_prompt": "the product images are blurry", "good_prompt": "### Bug Fix: Product Images are Low Resolution and Blurry on High-Density Displays\n\n**Bug Description:**\nThe product images on the product detail pages appear blurry and pixelated on high-density (Retina) displays.\n\n**Steps to Reproduce:**\n1. View a product page on a high-density display (e.g., a MacBook Pro, a 4K monitor, or a modern smartphone).\n2. Observe the quality of the main product image.\n\n**Expected Behavior:**\nThe product image should be sharp and clear.\n\n**Actual Behavior:**\nThe image is blurry and low-quality.\n\n**Additional Context:**\nWe are likely serving images that are too small. We need to implement responsive images using the `srcset` attribute to serve higher-resolution images to devices with high-density displays."}
{"bad_prompt": "We need to the docker build fails", "good_prompt": "### Bug Fix: The Docker build is failing\n\n**Bug Description:**\nThe `docker build` command is failing when trying to build the image for our application. The error message indicates that a file specified in the `COPY` command in the `Dockerfile` cannot be found.\n\n**Steps to Reproduce:**\n1. Run `docker build -t my-app .` in the root of the project.\n2. Observe the error message during the build process.\n\n**Expected Behavior:**\nThe Docker image should build successfully without any errors.\n\n**Actual Behavior:**\nThe build fails with an error like `COPY failed: stat /var/lib/docker/tmp/docker-builder12345/src/app/package.json: no such file or directory`.\n\n**Additional Context:**\nThis seems to be an issue with the file path in the `COPY` command in the `Dockerfile`. It likely needs to be adjusted to match the project's directory structure."}
{"bad_prompt": "the search is net working", "good_prompt": "### Bug Fix: Search Functionality Returns an Empty Result for Valid Queries\n\n**Bug Description:**\nThe search functionality on the `/search` page is not returning any results, even for queries that should match existing content. It always displays a 'No results found' message.\n\n**Steps to Reproduce:**\n1. Go to the `/search` page.\n2. Enter a valid search term that is known to be in the content (e.g., 'performance').\n3. Click the 'Search' button.\n\n**Expected Behavior:**\nThe page should display a list of search results that match the query.\n\n**Actual Behavior:**\nThe page displays the 'No results found' message."}
{"bad_prompt": "thi user can't see the footer", "good_prompt": "### Bug Fix: The Website Footer is Missing on Some Pages\n\n**Bug Description:**\nThe main website footer is not being displayed on certain pages, specifically the blog post detail pages.\n\n**Steps to Reproduce:**\n1. Navigate to any blog post detail page.\n2. Scroll to the bottom of the page.\n\n**Expected Behavior:**\nThe website footer should be visible.\n\n**Actual Behavior:**\nThe footer is missing.\n\n**Additional Context:**\nThe page template for blog posts is likely missing the component that renders the footer."}
{"bad_prompt": "We need to i need to be ajle to leave a review for a product", "good_prompt": "### New Feature Request: Implement Product Reviews\n\n**User Story:**\nAs a customer who has purchased a product, I want to be able to leave a review and a star rating so that I can share my feedback with other potential buyers.\n\n**Feature Description:**\nAdd a product review system. This should include:\n1. A form on each product page that allows verified purchasers to write a review and give a star rating (1-5).\n2. A section on the product page that displays all the reviews for that product, including the average star rating.\n\n**Acceptance Criteria:**\n- Only users who have purchased the product can leave a review.\n- The review form includes a star rating component and a text area for the review.\n- Submitted reviews are displayed on the product page.\n- The average star rating is calculated and displayed correctly."}
{"bad_prompt": "Could you the user ctn't see the logout page", "good_prompt": "### Bug Fix: The 'Logout' Link in the User Dropdown is Not Working Correctly\n\n**Bug Description:**\nClicking the 'Logout' link in the user dropdown menu does not log the user out properly. It redirects to a non-existent page.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the user's avatar in the header to open the dropdown.\n3. Click the 'Logout' link.\n\n**Expected Behavior:**\nThe user should be logged out and redirected to the homepage or login page.\n\n**Actual Behavior:**\nThe user is taken to a 404 Not Found error page and remains logged in."}
{"bad_prompt": "change the colors", "good_prompt": "### UI Improvement: Update Site Color Palette to Match New Branding Guidelines\n\n**Objective:**\nUpdate the website's color scheme to align with the new branding guidelines provided by the design team.\n\n**Acceptance Criteria:**\n- The primary color used for buttons and links should be changed from the old blue (`#007bff`) to the new brand purple (`#6f42c1`).\n- The background color of the header and footer should be updated to the new dark grey (`#343a40`).\n- All text colors should be checked for accessibility and contrast against the new background colors.\n\n**Additional Context:**\nThe new branding guidelines can be found here: [Link to Figma/Style Guide]"}
{"bad_prompt": "Could you the user can't see the search bar", "good_prompt": "### Bug Fix: The Search Bar is Missing on Mobile Devices\n\n**Bug Description:**\nThe global search bar, which should be in the header, is not visible on mobile devices.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Observe the header.\n\n**Expected Behavior:**\nThe search bar should be visible or accessible through the mobile menu.\n\n**Actual Behavior:**\nThe search bar is not present.\n\n**Additional Context:**\nThe CSS for the header component is likely hiding the search bar on smaller screen sizes. This needs to be adjusted to make it accessible."}
{"bad_prompt": "implement a liuk to the footer", "good_prompt": "### Content: Add 'About Us' Link to Site Footer\n\n**Objective:**\nAdd a link to the 'About Us' page in the footer of the website to improve navigation.\n\n**Acceptance Criteria:**\n- A new link with the text 'About Us' is present in the site footer.\n- The link correctly navigates to the `/about` page."}
{"bad_prompt": "Can you please the user can't see the press page", "good_prompt": "### Bug Fix: The 'Press' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Press' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Press' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/press` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the new profile picture", "good_prompt": "### Bug Fix: Other Users Cannot See a User's New Profile Picture\n\n**Bug Description:**\nWhen a user updates their profile picture, they can see the new picture, but other users still see their old one. This points to a caching issue.\n\n**Steps to Reproduce:**\n1. User A updates their profile picture.\n2. User B views User A's profile page.\n\n**Expected Behavior:**\nUser B should see User A's new profile picture.\n\n**Actual Behavior:**\nUser B still sees User A's old profile picture.\n\n**Additional Context:**\nThe URLs for profile pictures are likely being cached aggressively at the CDN or in the browser. We need to implement a cache-busting strategy, such as appending a version number or timestamp as a query parameter to the image URL whenever it's updated (e.g., `.../avatar.jpg?v=12345`)."}
{"bad_prompt": "We need to the user can't see the privacy policy", "good_prompt": "### Bug Fix: The 'Privacy Policy' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Privacy Policy' link in the website footer is pointing to an incorrect URL.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Privacy Policy' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/privacy-policy` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Could you the user can't update their username", "good_prompt": "### Bug Fix: Updating Username Fails with a 'Permission Denied' Error\n\n**Bug Description:**\nWhen a user tries to update their username on their profile page, the operation fails with a 'Permission Denied' error, even though they are logged in and editing their own profile.\n\n**Steps to Reproduce:**\n1. Log in as any user.\n2. Go to the profile page.\n3. Try to change the username.\n4. Click 'Save'.\n\n**Expected Behavior:**\nThe username should be updated successfully.\n\n**Actual Behavior:**\nA 'Permission Denied' error is shown.\n\n**Additional Context:**\nThe API endpoint that handles the profile update is likely checking for an 'admin' role, but it should be allowing any authenticated user to update their own data. The authorization logic for this endpoint needs to be reviewed."}
{"bad_prompt": "Could you the user can't see the careers page", "good_prompt": "### Bug Fix: The 'Careers' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Careers' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Careers' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/careers` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see tae new category", "good_prompt": "### Bug Fix: New Product Categories Are Not Appearing in the Filter Sidebar\n\n**Bug Description:**\nWhen a new product category is created in the admin panel, it does not appear in the list of filterable categories on the products page sidebar.\n\n**Steps to Reproduce:**\n1. Create a new product category in the admin panel.\n2. Go to the `/products` page.\n3. Observe the filter sidebar.\n\n**Expected Behavior:**\nThe new category should be listed as a filter option.\n\n**Actual Behavior:**\nThe new category is missing."}
{"bad_prompt": "We need to i need a way uo contact support", "good_prompt": "### New Feature Request: Create a Customer Support Contact Form\n\n**User Story:**\nAs a user who is having a problem, I want a way to contact customer support directly through the website.\n\n**Feature Description:**\nCreate a new 'Contact Support' page, accessible from the main navigation. This page should contain a form where users can enter their name, email, subject, and a detailed description of their issue. Submitting the form should create a new ticket in our customer support system (e.g., Zendesk) via its API.\n\n**Acceptance Criteria:**\n- A new 'Contact Support' page is created.\n- The form on the page includes fields for name, email, subject, and description.\n- Submitting the form successfully creates a new ticket in Zendesk."}
{"bad_prompt": "the api is slow", "good_prompt": "### Performance: Optimize the `/api/dashboard` Endpoint\n\n**Objective:**\nImprove the performance of the main dashboard API endpoint, which is currently taking over 2 seconds to load.\n\n**Bug Description:**\nThe GET request to `/api/dashboard` is very slow because it performs multiple, inefficient database queries to aggregate data.\n\n**Acceptance Criteria:**\n- Refactor the database queries in the `/api/dashboard` endpoint to be more efficient, for example, by using joins or a single, more complex query instead of multiple simple ones.\n- The average response time for the endpoint should be reduced to under 500ms.\n\n**Additional Context:**\nAn analysis of the queries shows that the main bottleneck is a loop that makes a separate database call for each user. This should be refactored into a single query."}
{"bad_prompt": "We need to the api is returning the wrong data", "good_prompt": "### Bug Fix: The `/api/analytics` Endpoint Returns Data for the Wrong Date Range\n\n**Bug Description:**\nThe `/api/analytics` endpoint is supposed to return data for the date range specified in the query parameters (`startDate`, `endDate`). However, it is ignoring these parameters and always returning data for the last 30 days.\n\n**Steps to Reproduce:**\n1. Make a GET request to `/api/analytics?startDate=2023-01-01&endDate=2023-01-31`.\n2. Observe the data returned in the response.\n\n**Expected Behavior:**\nThe response should contain analytics data only for January 2023.\n\n**Actual Behavior:**\nThe response contains data for the last 30 days from the current date.\n\n**Additional Context:**\nThe backend logic for the endpoint is likely not parsing the `startDate` and `endDate` query parameters correctly and is falling back to a default date range."}
{"bad_prompt": "We need to the back button is not working", "good_prompt": "### Bug Fix: The Browser's Back Button Does Not Work as Expected in the Single Page Application\n\n**Bug Description:**\nAfter navigating between a few pages within our Single Page Application (SPA), using the browser's back button does not take the user to the previously viewed page. Instead, it either does nothing or takes them out of the application entirely.\n\n**Steps to Reproduce:**\n1. Go to the homepage.\n2. Click a link to the '/about' page.\n3. Click a link to the '/contact' page.\n4. Click the browser's back button.\n\n**Expected Behavior:**\nThe user should be taken back to the '/about' page.\n\n**Actual Behavior:**\nThe URL might change, but the page content does not, or the user is taken to the page they were on before visiting our site.\n\n**Additional Context:**\nThis is likely an issue with our client-side router. We need to ensure that we are using the History API (`pushState`) correctly to create new entries in the browser's session history for each navigation."}
{"bad_prompt": "Can you please i need to be able to share blog posts on social media", "good_prompt": "### New Feature Request: Add Social Media Sharing Buttons to Blog Posts\n\n**User Story:**\nAs a reader, I want to be able to easily share a blog post on social media so that I can share it with my friends and followers.\n\n**Feature Description:**\nAdd social media sharing buttons to each blog post page. The buttons should allow users to share the post on Twitter, Facebook, and LinkedIn. The sharing action should pre-fill the post with the blog post's title and a link to the page.\n\n**Acceptance Criteria:**\n- Sharing buttons for Twitter, Facebook, and LinkedIn are present on each blog post page.\n- Clicking the Twitter button opens a new window with a pre-filled tweet containing the post title and URL.\n- Clicking the Facebook button opens a new window to share the URL.\n- Clicking the LinkedIn button opens a new window to share the URL."}
{"bad_prompt": "Can you please the checkout is broken", "good_prompt": "### Bug Fix: Checkout Fails with 'Payment Gateway Error'\n\n**Bug Description:**\nWhen a user tries to complete a purchase, the checkout process fails at the payment step with a generic 'Payment Gateway Error'. No specific details are provided to the user.\n\n**Steps to Reproduce:**\n1. Add an item to the cart.\n2. Proceed to the checkout page.\n3. Fill in all the details and enter valid payment information.\n4. Click 'Complete Purchase'.\n\n**Expected Behavior:**\nThe payment should be processed successfully, and the user should be taken to an order confirmation page.\n\n**Actual Behavior:**\nThe process fails with a 'Payment Gateway Error'.\n\n**Additional Context:**\nThe server logs show a '401 Unauthorized' error from the Stripe API, suggesting that our API key may be incorrect or has expired."}
{"bad_prompt": "add a 'save for later' feature", "good_prompt": "### New Feature Request: Implement a 'Save for Later' Feature in the Shopping Cart\n\n**User Story:**\nAs a shopper, I want to be able to move items from my shopping cart to a 'Save for Later' list so that I can purchase them at a later time without losing them.\n\n**Feature Description:**\nAdd a 'Save for Later' button to each item in the shopping cart. When a user clicks this button, the item should be removed from the cart and added to a new 'Saved for Later' section on the same page. The user should also be able to move items from the 'Saved for Later' list back to the cart.\n\n**Acceptance Criteria:**\n- Each item in the cart has a 'Save for Later' button.\n- Clicking the button moves the item to the 'Saved for Later' list.\n- The 'Saved for Later' list has a 'Move to Cart' button for each item."}
{"bad_prompt": "Can you please the mobile app cpashes", "good_prompt": "### Bug Fix: iOS App Crashes on Startup for iOS 17\n\n**Bug Description:**\nThe iOS application is crashing immediately upon startup for users running iOS 17. The app is unusable for these users.\n\n**Steps to Reproduce:**\n1. Install the app on a device running iOS 17.\n2. Try to open the app.\n\n**Expected Behavior:**\nThe app should open and function normally.\n\n**Actual Behavior:**\nThe app crashes immediately.\n\n**Additional Context:**\nThe crash logs indicate a null pointer exception in the `AppDelegate` related to the initialization of a third-party library that may not be compatible with iOS 17."}
{"bad_prompt": "Could you the user can't see the about page", "good_prompt": "### Bug Fix: The 'About Us' Link in the Header is Broken\n\n**Bug Description:**\nThe 'About Us' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'About Us' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/about` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Could you the user can't close their account", "good_prompt": "### Bug Fix: The 'Close Account' Button is Not Working\n\n**Bug Description:**\nWhen a user clicks the 'Close Account' button in their profile settings, nothing happens. No confirmation modal appears, and no action is taken.\n\n**Steps to Reproduce:**\n1. Go to the account settings page.\n2. Click the 'Close Account' button.\n\n**Expected Behavior:**\nA confirmation modal should appear, warning the user about the action. If they confirm, the account should be closed.\n\n**Actual Behavior:**\nNothing happens. There might be a JavaScript error in the console.\n\n**Additional Context:**\nThe click handler for the button is likely not wired up correctly in the frontend code."}
{"bad_prompt": "tde video player is broken", "good_prompt": "### Bug Fix: Embedded Video Player is Not Working on Firefox\n\n**Bug Description:**\nThe embedded video player on the `/watch/{id}` page does not load or play videos when using the Firefox browser. It works correctly in Chrome and Safari.\n\n**Steps to Reproduce:**\n1. Open the website in the Firefox browser.\n2. Navigate to any video page (e.g., `/watch/123`).\n3. Observe the video player area.\n\n**Expected Behavior:**\nThe video player should load and be able to play the video.\n\n**Actual Behavior:**\nThe video player is black and does not respond to clicks. There may be a console error related to video codecs or a browser-specific API."}
{"bad_prompt": "the user can'd see the pricing page", "good_prompt": "### Bug Fix: The 'Pricing' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Pricing' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Pricing' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/pricing` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Can you please the user can create an account with a weak password", "good_prompt": "### Security: Enforce Stronger Password Requirements\n\n**Objective:**\nImprove the security of user accounts by enforcing stronger password requirements during registration and password changes.\n\n**Feature Description:**\nUpdate the password validation logic to require passwords to meet certain complexity requirements. Passwords must:\n1. Be at least 12 characters long.\n2. Contain at least one uppercase letter, one lowercase letter, one number, and one special character.\n\n**Acceptance Criteria:**\n- The registration and 'change password' forms display the new password requirements to the user.\n- The server rejects any passwords that do not meet these requirements with a clear error message."}
{"bad_prompt": "We need to the user can't see the sitemap", "good_prompt": "### Bug Fix: The `sitemap.xml` File is Not Accessible\n\n**Bug Description:**\nNavigating to `/sitemap.xml` results in a 404 Not Found error. The sitemap is being generated during the build process but is not being placed in the correct public directory.\n\n**Steps to Reproduce:**\n1. Go to `/sitemap.xml`.\n\n**Expected Behavior:**\nThe XML content of the sitemap should be displayed.\n\n**Actual Behavior:**\nA 404 error is shown.\n\n**Additional Context:**\nThe build script that generates the sitemap needs to be updated to place the final `sitemap.xml` file into the root of the public output directory."}
{"bad_prompt": "add analytics", "good_prompt": "### New Feature Request: Integrate Plausible Analytics into the Website\n\n**Objective:**\nIntegrate the Plausible Analytics script into the website to track user traffic and engagement.\n\n**Feature Description:**\nAdd the Plausible Analytics tracking script to the `<head>` section of all pages on the website. The tracking script should be loaded asynchronously to avoid impacting page performance.\n\n**Acceptance Criteria:**\n- The Plausible script is present on all pages.\n- Page views are being correctly reported in our Plausible Analytics dashboard.\n- The script does not cause any console errors.\n\n**Additional Context:**\nThe tracking script and data-domain can be found in our company's shared password manager under 'Plausible Analytics'."}
{"bad_prompt": "the user prsfile page is ugly", "good_prompt": "### UI Redesign: Overhaul the User Profile Page\n\n**Objective:**\nRedesign the user profile page to have a modern, clean, and user-friendly interface based on the new mockups from the design team.\n\n**Feature Description:**\nImplement the new design for the `/profile` page. This includes updating the layout to a two-column grid, replacing the old form elements with new, styled components, and adding a new section for 'Account Settings'.\n\n**Acceptance Criteria:**\n- The layout of the profile page matches the new two-column design in Figma.\n- All form fields (username, email, etc.) are replaced with the new, styled input components.\n- The new 'Account Settings' section is present and includes a button for 'Change Password'.\n- The page is fully responsive and looks correct on mobile, tablet, and desktop.\n\n**Additional Context:**\nThe Figma mockups for the new design can be found here: [Link to Figma]"}
{"bad_prompt": "the usev can't see the header", "good_prompt": "### Bug Fix: The Website Header is Missing on the Login Page\n\n**Bug Description:**\nThe main website header, which contains the logo and navigation, is missing on the login page.\n\n**Steps to Reproduce:**\n1. Navigate to the `/login` page.\n\n**Expected Behavior:**\nThe website header should be visible at the top of the page.\n\n**Actual Behavior:**\nThe header is missing.\n\n**Additional Context:**\nThe page template for the login page is likely using a different layout that excludes the main header component."}
{"bad_prompt": "Could you make the site faster", "good_prompt": "### Performance: Implement Server-Side Caching for API Responses\n\n**Objective:**\nImprove the response time of the API by implementing a caching layer for frequently accessed, non-dynamic data.\n\n**Feature Description:**\nImplement a caching strategy (e.g., using Redis) for the `/api/products` endpoint. The data from this endpoint is the same for all users and only updates once per day. The cache should store the JSON response for this endpoint.\n\n**Acceptance Criteria:**\n- When the `/api/products` endpoint is called for the first time, it should fetch data from the database and store the result in the Redis cache with a 24-hour expiration.\n- Subsequent calls to the endpoint within 24 hours should return the cached data directly, without hitting the database.\n- The average response time for the endpoint should be reduced by at least 80% for cached responses."}
{"bad_prompt": "Can you please the user can't see their own profile picture", "good_prompt": "### Bug Fix: User's Own Profile Picture is Not Displayed on Their Profile Page\n\n**Bug Description:**\nWhile the user's avatar is displayed correctly in the header, their full-size profile picture is not appearing on their own profile page. A placeholder image is shown instead.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Navigate to your own profile page.\n\n**Expected Behavior:**\nThe user's full-size profile picture should be displayed.\n\n**Actual Behavior:**\nA placeholder image is shown.\n\n**Additional Context:**\nThe component responsible for rendering the profile page is likely fetching the user data but is not correctly accessing the `profile_picture_url` attribute."}
{"bad_prompt": "We need to the user can't update their usenname", "good_prompt": "### Bug Fix: Updating Username Fails with a 'Permission Denied' Error\n\n**Bug Description:**\nWhen a user tries to update their username on their profile page, the operation fails with a 'Permission Denied' error, even though they are logged in and editing their own profile.\n\n**Steps to Reproduce:**\n1. Log in as any user.\n2. Go to the profile page.\n3. Try to change the username.\n4. Click 'Save'.\n\n**Expected Behavior:**\nThe username should be updated successfully.\n\n**Actual Behavior:**\nA 'Permission Denied' error is shown.\n\n**Additional Context:**\nThe API endpoint that handles the profile update is likely checking for an 'admin' role, but it should be allowing any authenticated user to update their own data. The authorization logic for this endpoint needs to be reviewed."}
{"bad_prompt": "Can you please the user can't see the register page", "good_prompt": "### Bug Fix: The 'Register' Button in the Header is Broken\n\n**Bug Description:**\nThe 'Register' button in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Register' button in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/register` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see thn new order", "good_prompt": "### Bug Fix: New Orders Are Not Appearing in the User's Order History\n\n**Bug Description:**\nAfter a user successfully places a new order, the order does not appear in their 'Order History' page until they log out and log back in.\n\n**Steps to Reproduce:**\n1. Place a new order.\n2. Go to the 'Order History' page in your account.\n\n**Expected Behavior:**\nThe new order should be listed at the top of the order history.\n\n**Actual Behavior:**\nThe new order is not visible.\n\n**Additional Context:**\nThe frontend application is likely caching the order history data and is not re-fetching it after a new order is placed. The local state or cache needs to be invalidated and updated after a successful checkout."}
{"bad_prompt": "Could you the user can't log in with pacebook", "good_prompt": "### Bug Fix: Facebook OAuth Login Fails with 'Invalid Scopes' Error\n\n**Bug Description:**\nWhen a user attempts to log in using the 'Login with Facebook' option, the process fails after they authorize the app. They are redirected back to our site with an error message indicating 'Invalid Scopes'.\n\n**Steps to Reproduce:**\n1. Go to the login page.\n2. Click 'Login with Facebook'.\n3. Authorize the application in the Facebook popup.\n\n**Expected Behavior:**\nThe user should be logged in successfully.\n\n**Actual Behavior:**\nThe user is redirected back with an error.\n\n**Additional Context:**\nThe scopes we are requesting in our OAuth call (e.g., `email`, `public_profile`) likely do not match the scopes that are enabled for our application in the Facebook Developer portal. The configurations need to be synchronized."}
{"bad_prompt": "images ake slow", "good_prompt": "### Performance: Optimize Image Loading on the Homepage\n\n**Objective:**\nImprove the loading performance of the homepage by optimizing the images in the main hero section.\n\n**Acceptance Criteria:**\n- All JPEG and PNG images in the hero section should be compressed to reduce their file size by at least 50% without a significant loss in quality.\n- Images should be served in a next-gen format like WebP to browsers that support it.\n- Images should be lazy-loaded to prevent them from blocking the initial page render.\n\n**Additional Context:**\nThis task is critical for improving our Core Web Vitals score, specifically the Largest Contentful Paint (LCP)."}
{"bad_prompt": "implement analytlcs", "good_prompt": "### New Feature Request: Integrate Plausible Analytics into the Website\n\n**Objective:**\nIntegrate the Plausible Analytics script into the website to track user traffic and engagement.\n\n**Feature Description:**\nAdd the Plausible Analytics tracking script to the `<head>` section of all pages on the website. The tracking script should be loaded asynchronously to avoid impacting page performance.\n\n**Acceptance Criteria:**\n- The Plausible script is present on all pages.\n- Page views are being correctly reported in our Plausible Analytics dashboard.\n- The script does not cause any console errors.\n\n**Additional Context:**\nThe tracking script and data-domain can be found in our company's shared password manager under 'Plausible Analytics'."}
{"bad_prompt": "Could you the user can't see the footer", "good_prompt": "### Bug Fix: The Website Footer is Missing on Some Pages\n\n**Bug Description:**\nThe main website footer is not being displayed on certain pages, specifically the blog post detail pages.\n\n**Steps to Reproduce:**\n1. Navigate to any blog post detail page.\n2. Scroll to the bottom of the page.\n\n**Expected Behavior:**\nThe website footer should be visible.\n\n**Actual Behavior:**\nThe footer is missing.\n\n**Additional Context:**\nThe page template for blog posts is likely missing the component that renders the footer."}
{"bad_prompt": "Could you the user can't see the terfs of service", "good_prompt": "### Bug Fix: The 'Terms of Service' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Terms of Service' link in the website footer is pointing to a non-existent page (`/tos`) instead of the correct page (`/terms-of-service`).\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Terms of Service' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/terms-of-service` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the pagination is not working", "good_prompt": "### Bug Fix: Pagination on the Blog Page is Broken\n\n**Bug Description:**\nWhen a user clicks on the 'Next Page' or a page number link in the pagination control on the blog page, it does not navigate to the correct set of posts. It appears to be reloading the same first page of posts.\n\n**Steps to Reproduce:**\n1. Go to the `/blog` page.\n2. Scroll down to the bottom to find the pagination control.\n3. Click on page '2' or the 'Next Page' link.\n\n**Expected Behavior:**\nThe page should display the next set of blog posts (e.g., posts 11-20).\n\n**Actual Behavior:**\nThe page reloads but still shows the first set of posts (posts 1-10)."}
{"bad_prompt": "We need to the user can't see the ahs.txt file", "good_prompt": "### Advertising: Create an `ads.txt` File\n\n**Objective:**\nCreate an `ads.txt` file to declare the authorized sellers of our ad inventory and prevent ad fraud.\n\n**Feature Description:**\nCreate an `ads.txt` file in the root of the public directory. The file should contain the list of authorized ad sellers provided by the ad operations team.\n\n**Acceptance Criteria:**\n- An `ads.txt` file is accessible at the root of the website.\n- The file contains the correct information for our authorized ad sellers."}
{"bad_prompt": "We need to the user can't see the new post", "good_prompt": "### Bug Fix: New Blog Posts Are Not Appearing on the Blog Listing Page\n\n**Bug Description:**\nWhen a new blog post is created and published, it does not appear on the main `/blog` listing page.\n\n**Steps to Reproduce:**\n1. Create and publish a new blog post via the CMS.\n2. Go to the `/blog` page.\n\n**Expected Behavior:**\nThe new blog post should appear at the top of the list.\n\n**Actual Behavior:**\nThe new post is not listed.\n\n**Additional Context:**\nThe API endpoint that fetches the list of blog posts is likely not being revalidated or is being cached too aggressively. We need to implement a revalidation strategy (e.g., Incremental Static Regeneration - ISR) to ensure the list is updated when new posts are published."}
{"bad_prompt": "the site crashes on IE11", "good_prompt": "### Bug Fix: The Application Crashes on Internet Explorer 11\n\n**Bug Description:**\nThe entire application fails to load and crashes on Internet Explorer 11. The console shows a JavaScript error related to an unsupported ES6 feature.\n\n**Steps to Reproduce:**\n1. Open the website in an Internet Explorer 11 browser.\n2. Observe the blank page and the JavaScript error in the developer console.\n\n**Expected Behavior:**\nThe website should render correctly and be functional on Internet Explorer 11, even if with limited styling.\n\n**Actual Behavior:**\nThe page is blank, and a syntax error is thrown because of an unsupported feature (e.g., arrow functions, const/let).\n\n**Additional Context:**\nWe need to add a polyfill service or update our build process to transpile the JavaScript code to be compatible with IE11."}
{"bad_prompt": "tne user can't see the header", "good_prompt": "### Bug Fix: The Website Header is Missing on the Login Page\n\n**Bug Description:**\nThe main website header, which contains the logo and navigation, is missing on the login page.\n\n**Steps to Reproduce:**\n1. Navigate to the `/login` page.\n\n**Expected Behavior:**\nThe website header should be visible at the top of the page.\n\n**Actual Behavior:**\nThe header is missing.\n\n**Additional Context:**\nThe page template for the login page is likely using a different layout that excludes the main header component."}
{"bad_prompt": "the user can't update their email", "good_prompt": "### Bug Fix: Changing Email Address Fails\n\n**Bug Description:**\nWhen a user tries to change their email address in their profile settings, it fails with an error message 'This email is already taken', even when the new email address is unique.\n\n**Steps to Reproduce:**\n1. Go to the user profile page.\n2. Click 'Edit' next to the email address.\n3. Enter a new, unique email address.\n4. Click 'Save'.\n\n**Expected Behavior:**\nThe user's email address should be updated successfully.\n\n**Actual Behavior:**\nAn error message 'This email is already taken' is displayed.\n\n**Additional Context:**\nThe validation logic is likely checking the new email against all users, including the current user, which causes it to always find a match (itself). The validation should exclude the current user's ID."}
{"bad_prompt": "We need to i need to be able to sort the usem table", "good_prompt": "### New Feature Request: Add Sorting to the User Table in the Admin Panel\n\n**User Story:**\nAs an admin, I want to be able to sort the user table by username, email, and registration date so that I can better analyze the data.\n\n**Feature Description:**\nMake the column headers in the user table in the admin panel clickable. When a user clicks on a column header, the table should be sorted by that column. Clicking the same header again should reverse the sort order.\n\n**Acceptance Criteria:**\n- Users can sort the table by clicking on the 'Username', 'Email', and 'Registration Date' column headers.\n- The sorting works in both ascending and descending order.\n- A visual indicator (e.g., an arrow) shows the current sort column and direction."}
{"bad_prompt": "Can you please the user can't see the documentation page", "good_prompt": "### Bug Fix: The 'Documentation' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Documentation' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Documentation' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/docs` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "We need to the user can't see the new produst", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "Can you please the user can't see the humans.txt file", "good_prompt": "### Feature: Create a `humans.txt` File\n\n**Objective:**\nCreate a `humans.txt` file to give credit to the team that built the website.\n\n**Feature Description:**\nCreate a `humans.txt` file in the root of the public directory. The file should contain information about the development team and the technologies used.\n\n**Acceptance Criteria:**\n- A `humans.txt` file is accessible at the root of the website.\n- The file contains relevant information about the team."}
{"bad_prompt": "Can you please the user can't see the doaumentation page", "good_prompt": "### Bug Fix: The 'Documentation' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Documentation' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Documentation' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/docs` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Can you please the site needs a privacy policy", "good_prompt": "### Legal: Create and Add Privacy Policy Page\n\n**Objective:**\nCreate a 'Privacy Policy' page to comply with legal requirements and inform users about our data practices.\n\n**Feature Description:**\nCreate a new static page at `/privacy`. The content for this page will be provided by the legal department. This page must be linked from the website footer.\n\n**Acceptance Criteria:**\n- A new page is created at `/privacy`.\n- The legal team's content is added to the page.\n- A link to the 'Privacy Policy' page is present in the site footer on all pages."}
{"bad_prompt": "We need to the site is slow on mobiee", "good_prompt": "### Performance: Optimize Mobile Website Performance\n\n**Objective:**\nImprove the overall performance of the website on mobile devices, focusing on reducing the load time and improving responsiveness.\n\n**Feature Description:**\nPerform a performance audit of the mobile site and implement the following optimizations:\n1. **Code Splitting:** Implement code splitting to reduce the size of the initial JavaScript bundle.\n2. **Image Optimization:** Ensure all images are compressed and served in next-gen formats.\n3. **Reduce Render-Blocking Resources:** Defer the loading of non-critical CSS and JavaScript.\n\n**Acceptance Criteria:**\n- The Google PageSpeed Insights score for mobile should be improved to 90 or above.\n- The First Contentful Paint (FCP) time on a simulated mobile device should be under 1 second."}
{"bad_prompt": "the user can't see thv new post", "good_prompt": "### Bug Fix: New Blog Posts Are Not Appearing on the Blog Listing Page\n\n**Bug Description:**\nWhen a new blog post is created and published, it does not appear on the main `/blog` listing page.\n\n**Steps to Reproduce:**\n1. Create and publish a new blog post via the CMS.\n2. Go to the `/blog` page.\n\n**Expected Behavior:**\nThe new blog post should appear at the top of the list.\n\n**Actual Behavior:**\nThe new post is not listed.\n\n**Additional Context:**\nThe API endpoint that fetches the list of blog posts is likely not being revalidated or is being cached too aggressively. We need to implement a revalidation strategy (e.g., Incremental Static Regeneration - ISR) to ensure the list is updated when new posts are published."}
{"bad_prompt": "We need to the user can't see the security.txt fiqe", "good_prompt": "### Security: Create a `security.txt` File\n\n**Objective:**\nCreate a `security.txt` file to provide a point of contact for security researchers who may find vulnerabilities in our website.\n\n**Feature Description:**\nCreate a `security.txt` file in the `.well-known` directory of the public folder. The file should follow the standard format and include contact information for reporting security issues.\n\n**Acceptance Criteria:**\n- A `security.txt` file is accessible at `/.well-known/security.txt`.\n- The file contains a valid contact email for security reports."}
{"bad_prompt": "the site looks bad ik safari", "good_prompt": "### Bug Fix: Resolve CSS Styling Issues on Safari\n\n**Bug Description:**\nSeveral CSS styles, particularly those using Flexbox and Grid, are not rendering correctly in the Safari browser. This causes layout issues on several pages, including the homepage and the dashboard.\n\n**Steps to Reproduce:**\n1. Open the website in the latest version of Safari.\n2. Navigate to the homepage and the dashboard page.\n3. Observe the layout and styling compared to Chrome or Firefox.\n\n**Expected Behavior:**\nThe website's layout and styling should be consistent across all modern browsers, including Safari.\n\n**Actual Behavior:**\nIn Safari, some elements are misaligned, and the grid layout is broken.\n\n**Additional Context:**\nThis likely requires adding vendor prefixes for certain CSS properties (e.g., `-webkit-`) to ensure cross-browser compatibility."}
{"bad_prompt": "the usar can't see the new user", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "Can you please the user can't update their username", "good_prompt": "### Bug Fix: Updating Username Fails with a 'Permission Denied' Error\n\n**Bug Description:**\nWhen a user tries to update their username on their profile page, the operation fails with a 'Permission Denied' error, even though they are logged in and editing their own profile.\n\n**Steps to Reproduce:**\n1. Log in as any user.\n2. Go to the profile page.\n3. Try to change the username.\n4. Click 'Save'.\n\n**Expected Behavior:**\nThe username should be updated successfully.\n\n**Actual Behavior:**\nA 'Permission Denied' error is shown.\n\n**Additional Context:**\nThe API endpoint that handles the profile update is likely checking for an 'admin' role, but it should be allowing any authenticated user to update their own data. The authorization logic for this endpoint needs to be reviewed."}
{"bad_prompt": "Can you please the user session expires too quickly", "good_prompt": "### UX Improvement: Extend the User Session Lifetime\n\n**Objective:**\nImprove the user experience by extending the duration of a user's login session to reduce the frequency of them being logged out.\n\n**Feature Description:**\nIncrease the session lifetime from the current 1 hour to 30 days. This should be done by updating the session configuration on the server.\n\n**Acceptance Criteria:**\n- The user's login session should persist for 30 days of inactivity.\n- A user who logs in and returns to the site within 30 days should still be logged in."}
{"bad_prompt": "the site needs a careers page", "good_prompt": "### Content: Create a 'Careers' Page\n\n**Objective:**\nCreate a new 'Careers' page to list open job positions and attract potential candidates.\n\n**Feature Description:**\nCreate a new static page at `/careers`. The page should have an introduction about working at our company and a section that lists all the currently open job positions. The list of jobs can be hardcoded for now, or it can be integrated with our applicant tracking system (ATS) if an API is available.\n\n**Acceptance Criteria:**\n- A new page is created at `/careers`.\n- The page lists all open job positions with a title, location, and a link to apply."}
{"bad_prompt": "the checkout is broken", "good_prompt": "### Bug Fix: Checkout Fails with 'Payment Gateway Error'\n\n**Bug Description:**\nWhen a user tries to complete a purchase, the checkout process fails at the payment step with a generic 'Payment Gateway Error'. No specific details are provided to the user.\n\n**Steps to Reproduce:**\n1. Add an item to the cart.\n2. Proceed to the checkout page.\n3. Fill in all the details and enter valid payment information.\n4. Click 'Complete Purchase'.\n\n**Expected Behavior:**\nThe payment should be processed successfully, and the user should be taken to an order confirmation page.\n\n**Actual Behavior:**\nThe process fails with a 'Payment Gateway Error'.\n\n**Additional Context:**\nThe server logs show a '401 Unauthorized' error from the Stripe API, suggesting that our API key may be incorrect or has expired."}
{"bad_prompt": "Can you please the user canpt see the new product", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "We need to the user data export is not workinu", "good_prompt": "### Bug Fix: The User Data Export Feature is Timing Out\n\n**Bug Description:**\nWhen a user requests to export their data, the process times out and fails for users with a large amount of data. The server returns a 504 Gateway Timeout error.\n\n**Steps to Reproduce:**\n1. Log in as a user with a large amount of data (e.g., user ID 456).\n2. Go to the 'Export Data' page in the account settings.\n3. Click the 'Export My Data' button.\n\n**Expected Behavior:**\nThe system should generate a data export file and provide a download link to the user, even for large accounts.\n\n**Actual Behavior:**\nThe request hangs for a long time and then fails with a 504 error.\n\n**Additional Context:**\nThe data export process is currently running as a synchronous web request. This should be refactored into an asynchronous background job. The user should be notified (e.g., by email) when their export is ready for download."}
{"bad_prompt": "add a sitemap", "good_prompt": "### SEO: Generate a `sitemap.xml` File\n\n**Objective:**\nImprove the site's SEO by generating a `sitemap.xml` file that helps search engines discover and index all the pages on our website.\n\n**Feature Description:**\nCreate a script that automatically generates a `sitemap.xml` file. This script should be run as part of our build process. The sitemap should include the URLs for all static pages (e.g., homepage, about, contact) and all dynamic pages (e.g., blog posts, product pages).\n\n**Acceptance Criteria:**\n- A `sitemap.xml` file is generated in the root of the public directory after the build process.\n- The sitemap is correctly formatted XML.\n- The sitemap includes all public pages of the website."}
{"bad_prompt": "We need to the map on the contact page is not working", "good_prompt": "### Bug Fix: The Interactive Map on the Contact Page is Not Loading\n\n**Bug Description:**\nThe interactive map on the `/contact` page (e.g., Google Maps, Mapbox) is not loading. The area where the map should be is blank, and there is a JavaScript error in the console related to a missing API key.\n\n**Steps to Reproduce:**\n1. Go to the `/contact` page.\n2. Observe the map section.\n\n**Expected Behavior:**\nThe interactive map should load and display our office location.\n\n**Actual Behavior:**\nThe map area is blank, and there is a console error indicating that the API key is invalid or missing.\n\n**Additional Context:**\nThe API key for the map service needs to be added to the application's environment variables and included in the script that loads the map."}
{"bad_prompt": "Can you please the user lisf is not sorted", "good_prompt": "### Bug Fix: The User List in the Admin Panel is Not Sorted Alphabetically\n\n**Bug Description:**\nThe list of users in the admin panel is displayed in a random order, making it difficult to find a specific user.\n\n**Steps to Reproduce:**\n1. Log in as an admin user.\n2. Go to the 'Users' page in the admin panel.\n3. Observe the order of the user list.\n\n**Expected Behavior:**\nThe user list should be sorted alphabetically by username by default.\n\n**Actual Behavior:**\nThe user list is not sorted."}
{"bad_prompt": "implement a butnon", "good_prompt": "### New Feature Request: Add 'Export to CSV' Button to a User Dashboard\n\n**User Story:**\nAs a user, I want to be able to export my data table as a CSV file so that I can perform my own analysis in other tools.\n\n**Feature Description:**\nImplement a new button labeled 'Export to CSV' on the main user dashboard. When clicked, this button should generate a CSV file of the data currently displayed in the main table and initiate a download for the user.\n\n**Acceptance Criteria:**\n- A button with the text 'Export to CSV' is present on the user dashboard.\n- Clicking the button triggers a CSV download.\n- The downloaded CSV file contains all the data from the table, including correct headers."}
{"bad_prompt": "We need to the user can't see the ads.txt file", "good_prompt": "### Advertising: Create an `ads.txt` File\n\n**Objective:**\nCreate an `ads.txt` file to declare the authorized sellers of our ad inventory and prevent ad fraud.\n\n**Feature Description:**\nCreate an `ads.txt` file in the root of the public directory. The file should contain the list of authorized ad sellers provided by the ad operations team.\n\n**Acceptance Criteria:**\n- An `ads.txt` file is accessible at the root of the website.\n- The file contains the correct information for our authorized ad sellers."}
{"bad_prompt": "Can you please the table sorting is broken", "good_prompt": "### Bug Fix: Table Column Sorting Does Not Work Correctly for Dates\n\n**Bug Description:**\nWhen a user clicks on the header of the 'Date Created' column in the main data table, the sorting is incorrect. It appears to be sorting the dates alphabetically instead of chronologically.\n\n**Steps to Reproduce:**\n1. Go to the dashboard page.\n2. Click on the 'Date Created' column header to sort the table.\n3. Observe the order of the rows.\n\n**Expected Behavior:**\nThe table should be sorted chronologically by the 'Date Created' column, either ascending or descending.\n\n**Actual Behavior:**\nThe table is sorted alphabetically by the date string (e.g., 'April', 'August', 'December')."}
{"bad_prompt": "We need to the user can't see the products page", "good_prompt": "### Bug Fix: The 'Products' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Products' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Products' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/products` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user profile page is ugll", "good_prompt": "### UI Redesign: Overhaul the User Profile Page\n\n**Objective:**\nRedesign the user profile page to have a modern, clean, and user-friendly interface based on the new mockups from the design team.\n\n**Feature Description:**\nImplement the new design for the `/profile` page. This includes updating the layout to a two-column grid, replacing the old form elements with new, styled components, and adding a new section for 'Account Settings'.\n\n**Acceptance Criteria:**\n- The layout of the profile page matches the new two-column design in Figma.\n- All form fields (username, email, etc.) are replaced with the new, styled input components.\n- The new 'Account Settings' section is present and includes a button for 'Change Password'.\n- The page is fully responsive and looks correct on mobile, tablet, and desktop.\n\n**Additional Context:**\nThe Figma mockups for the new design can be found here: [Link to Figma]"}
{"bad_prompt": "i need to be able to upload a profile picture", "good_prompt": "### New Feature Request: Allow Users to Upload a Profile Picture\n\n**User Story:**\nAs a user, I want to be able to upload a profile picture so that I can personalize my account.\n\n**Feature Description:**\nAdd a feature that allows users to upload a profile picture. This should include:\n1. An image upload component on the user profile page.\n2. The ability to crop the uploaded image.\n3. The uploaded image should be stored securely (e.g., in an S3 bucket).\n4. The user's profile picture should be displayed in the header and on their profile page.\n\n**Acceptance Criteria:**\n- Users can select and upload a JPG or PNG image.\n- The uploaded image is displayed on their profile page.\n- The user's avatar in the header is updated with the new picture."}
{"bad_prompt": "Can you please the error pages are ugly", "good_prompt": "### UI Improvement: Create Custom Pages for 500 and 403 Errors\n\n**Objective:**\nImprove the user experience for error states by creating custom, branded pages for 500 (Internal Server Error) and 403 (Forbidden) errors.\n\n**Feature Description:**\nDesign and implement two new static pages:\n1. A custom 500 error page with a friendly message indicating that something went wrong on our end.\n2. A custom 403 error page with a message explaining that the user does not have permission to access the page.\nBoth pages should have a link to return to the homepage.\n\n**Acceptance Criteria:**\n- When a 500 error occurs on the server, the custom 500 page is displayed.\n- When a user tries to access a forbidden resource, the custom 403 page is displayed."}
{"bad_prompt": "the user can create an account with a weak password", "good_prompt": "### Security: Enforce Stronger Password Requirements\n\n**Objective:**\nImprove the security of user accounts by enforcing stronger password requirements during registration and password changes.\n\n**Feature Description:**\nUpdate the password validation logic to require passwords to meet certain complexity requirements. Passwords must:\n1. Be at least 12 characters long.\n2. Contain at least one uppercase letter, one lowercase letter, one number, and one special character.\n\n**Acceptance Criteria:**\n- The registration and 'change password' forms display the new password requirements to the user.\n- The server rejects any passwords that do not meet these requirements with a clear error message."}
{"bad_prompt": "thv user can't log out", "good_prompt": "### Bug Fix: The 'Logout' Button is Not Working\n\n**Bug Description:**\nClicking the 'Logout' button does not log the user out. The user remains logged in.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the 'Logout' button in the header.\n\n**Expected Behavior:**\nThe user should be logged out and redirected to the login page.\n\n**Actual Behavior:**\nNothing happens. The user remains logged in.\n\n**Additional Context:**\nThe click handler for the logout button is not correctly clearing the user's session from local storage and is not calling the backend API to invalidate the session token."}
{"bad_prompt": "Could you i need to be able to leave a review for a product", "good_prompt": "### New Feature Request: Implement Product Reviews\n\n**User Story:**\nAs a customer who has purchased a product, I want to be able to leave a review and a star rating so that I can share my feedback with other potential buyers.\n\n**Feature Description:**\nAdd a product review system. This should include:\n1. A form on each product page that allows verified purchasers to write a review and give a star rating (1-5).\n2. A section on the product page that displays all the reviews for that product, including the average star rating.\n\n**Acceptance Criteria:**\n- Only users who have purchased the product can leave a review.\n- The review form includes a star rating component and a text area for the review.\n- Submitted reviews are displayed on the product page.\n- The average star rating is calculated and displayed correctly."}
{"bad_prompt": "Could you the site needs a sontact page", "good_prompt": "### New Feature Request: Create a 'Contact Us' Page\n\n**Objective:**\nCreate a 'Contact Us' page that provides users with our contact information and a contact form.\n\n**Feature Description:**\nCreate a new static page at `/contact`. This page should display our company's address, phone number, and email address. It should also include a contact form that users can fill out to send us a message directly. Submitting the form should send an email to our support team.\n\n**Acceptance Criteria:**\n- A new page is created at `/contact`.\n- The page displays the correct contact information.\n- The contact form includes fields for name, email, and message.\n- Submitting the form successfully sends an email to the support team."}
{"bad_prompt": "the email notifications are not working", "good_prompt": "### Bug Fix: Email Notifications Are Not Being Sent for New User Registrations\n\n**Bug Description:**\nThe system is not sending the 'Welcome' email notification when a new user registers for an account.\n\n**Steps to Reproduce:**\n1. Create a new user account through the registration page.\n2. Check the email inbox for the address used to register.\n3. Check the logs for the email sending service (e.g., SendGrid).\n\n**Expected Behavior:**\nA 'Welcome' email should be sent to the new user's email address immediately after registration.\n\n**Actual Behavior:**\nNo email is sent. The email service logs show that no API call is being made from our application for new registrations."}
{"bad_prompt": "the site map is out of date", "good_prompt": "### Bug Fix: The `sitemap.xml` is Not Being Updated with New Pages\n\n**Bug Description:**\nThe `sitemap.xml` file is not being updated automatically when new blog posts or product pages are created. It is static and out of date, which is bad for SEO.\n\n**Steps to Reproduce:**\n1. Create a new blog post.\n2. After the site has been rebuilt, view the `sitemap.xml` file.\n\n**Expected Behavior:**\nThe `sitemap.xml` file should contain a URL for the newly created blog post.\n\n**Actual Behavior:**\nThe new blog post's URL is missing from the sitemap.\n\n**Additional Context:**\nThe script that generates the sitemap is likely not correctly fetching the list of all dynamic pages. It needs to be updated to query the database for all published posts and products during the build process."}
{"bad_prompt": "Can you please the api is miming out", "good_prompt": "### Bug Fix: API Gateway Timeout on `/api/reports` Endpoint\n\n**Bug Description:**\nRequests to the `/api/reports` endpoint are consistently failing with a 504 Gateway Timeout error, especially for large date ranges. This is preventing users from generating reports.\n\n**Steps to Reproduce:**\n1. Make a GET request to `/api/reports` with a date range of more than 90 days.\n2. Observe the 504 error response.\n\n**Expected Behavior:**\nThe API should successfully generate and return the report, even for large date ranges.\n\n**Actual Behavior:**\nThe request times out.\n\n**Additional Context:**\nThe report generation query is too slow and needs to be optimized. This process should also be moved to an asynchronous background job to avoid timeouts."}
{"bad_prompt": "the form hs not validating", "good_prompt": "### Bug Fix: The Registration Form is Not Validating the Email Address Correctly\n\n**Bug Description:**\nThe user registration form allows users to submit an email address without a valid format (e.g., 'user@domain' instead of 'user@domain.com'). This leads to invalid data in our system.\n\n**Steps to Reproduce:**\n1. Go to the registration page.\n2. Enter a password.\n3. Enter an invalid email address like 'test'.\n4. Click the 'Register' button.\n\n**Expected Behavior:**\nThe form should display a validation error message indicating that the email address is not valid, and the form should not be submitted.\n\n**Actual Behavior:**\nThe form submits successfully with the invalid email address."}
{"bad_prompt": "Can you please the site needs a press page", "good_prompt": "### Content: Create a 'Press' Page\n\n**Objective:**\nCreate a new 'Press' page to provide resources for journalists and the media.\n\n**Feature Description:**\nCreate a new static page at `/press`. This page should include our company's press kit, logos, and contact information for media inquiries.\n\n**Acceptance Criteria:**\n- A new page is created at `/press`.\n- The page contains a downloadable press kit.\n- The page provides a clear email address for press inquiries."}
{"bad_prompt": "the user can't see the rss feed", "good_prompt": "### Bug Fix: The RSS Feed at `/rss.xml` is Returning a 404 Error\n\n**Bug Description:**\nNavigating to `/rss.xml` results in a 404 Not Found error.\n\n**Steps to Reproduce:**\n1. Go to `/rss.xml`.\n\n**Expected Behavior:**\nThe XML content of the RSS feed should be displayed.\n\n**Actual Behavior:**\nA 404 error is shown.\n\n**Additional Context:**\nThe endpoint or file generation process for the RSS feed is not correctly configured."}
{"bad_prompt": "We need to the cookie banner is annoying", "good_prompt": "### UX Improvement: Make the Cookie Banner Less Intrusive\n\n**Objective:**\nImprove the user experience by making the cookie consent banner less intrusive while still being compliant with regulations.\n\n**Feature Description:**\nRedesign the current cookie banner, which is a large modal that blocks the center of the page. The new design should be a small banner at the bottom of the screen that does not block the main content. The user should be able to dismiss it easily.\n\n**Acceptance Criteria:**\n- The cookie consent banner is displayed at the bottom of the screen.\n- The banner does not cover up any critical navigation or content.\n- The user's consent choice is saved correctly, and the banner does not reappear on subsequent visits."}
{"bad_prompt": "the logix is not secure", "good_prompt": "### Security: Implement Two-Factor Authentication (2FA) for User Login\n\n**User Story:**\nAs a security-conscious user, I want to enable Two-Factor Authentication for my account to prevent unauthorized access.\n\n**Feature Description:**\nIntegrate a 2FA system into the user authentication flow. Users should be able to enable 2FA in their account settings, which will require them to provide a one-time password (OTP) from an authenticator app (like Google Authenticator) upon login.\n\n**Acceptance Criteria:**\n- Users have a new 'Security' section in their account settings.\n- In the 'Security' section, users can enable 2FA by scanning a QR code.\n- When 2FA is enabled, the login page will require a second step to enter the OTP."}
{"bad_prompt": "the user can't see the terms of sernice", "good_prompt": "### Bug Fix: The 'Terms of Service' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Terms of Service' link in the website footer is pointing to a non-existent page (`/tos`) instead of the correct page (`/terms-of-service`).\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Terms of Service' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/terms-of-service` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the login page", "good_prompt": "### Bug Fix: The 'Login' Button in the Header is Broken\n\n**Bug Description:**\nThe 'Login' button in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Login' button in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/login` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see their own comments", "good_prompt": "### Bug Fix: User's Own Comments Are Not Displayed Until After a Page Refresh\n\n**Bug Description:**\nWhen a user submits a comment on a blog post, their comment does not appear on the page immediately. They have to manually refresh the page to see it. This is a poor user experience.\n\n**Steps to Reproduce:**\n1. Go to a blog post.\n2. Submit a new comment.\n3. Observe the comment section.\n\n**Expected Behavior:**\nThe new comment should be added to the comment list on the page instantly, without requiring a refresh.\n\n**Actual Behavior:**\nThe comment list does not update.\n\n**Additional Context:**\nThe frontend application needs to update its state with the new comment after the submission API call is successful. The API should return the newly created comment object, which the frontend can then append to its list of comments."}
{"bad_prompt": "the search rdsults page is ugly", "good_prompt": "### UI Improvement: Redesign the Search Results Page\n\n**Objective:**\nImprove the design and usability of the search results page to provide a better user experience.\n\n**Feature Description:**\nRedesign the `/search` page based on the new mockups. The new design should include:\n1. A cleaner layout for each search result item, with a clear title, a short snippet of the content, and the URL.\n2. Highlighting the user's search query within the search results.\n3. A more prominent display of the total number of results found.\n\n**Acceptance Criteria:**\n- The layout of the search results page matches the new design in Figma.\n- The user's search term is highlighted in the titles and snippets of the results.\n- The total number of results is displayed clearly at the top of the page.\n\n**Additional Context:**\nFigma mockups: [Link to Figma]"}
{"bad_prompt": "the user can't see the new vroduct", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "We need to i forgot my password", "good_prompt": "### New Feature Request: Implement a 'Forgot Password' Flow\n\n**User Story:**\nAs a user who has forgotten my password, I want to be able to reset it securely so that I can regain access to my account.\n\n**Feature Description:**\nImplement a 'Forgot Password' flow. This should include:\n1. A 'Forgot Password?' link on the login page.\n2. A page where the user can enter their email address to request a password reset.\n3. An email sent to the user with a secure, time-limited link to a password reset page.\n4. A page where the user can enter and confirm their new password.\n\n**Acceptance Criteria:**\n- The 'Forgot Password?' link exists and works.\n- The system correctly sends a password reset email with a unique token.\n- The user can successfully set a new password using the link in the email.\n- The old password is no longer valid after the reset."}
{"bad_prompt": "Can you please the terms of service rage is missing", "good_prompt": "### Content: Create a 'Terms of Service' Page\n\n**Objective:**\nCreate a new 'Terms of Service' page to provide users with the legal terms and conditions for using our website and services.\n\n**Feature Description:**\nCreate a new static page at `/terms-of-service`. The content for this page will be provided by the legal team. The page should be linked in the website's footer.\n\n**Acceptance Criteria:**\n- A new page is created at `/terms-of-service`.\n- The content provided by the legal team is added to the page.\n- A link to the 'Terms of Service' page is present in the site footer."}
{"bad_prompt": "the user can't see the humans.txt file", "good_prompt": "### Feature: Create a `humans.txt` File\n\n**Objective:**\nCreate a `humans.txt` file to give credit to the team that built the website.\n\n**Feature Description:**\nCreate a `humans.txt` file in the root of the public directory. The file should contain information about the development team and the technologies used.\n\n**Acceptance Criteria:**\n- A `humans.txt` file is accessible at the root of the website.\n- The file contains relevant information about the team."}
{"bad_prompt": "the user can't see xhe new features", "good_prompt": "### Feature Flag: Enable New Dashboard Features for All Users\n\n**Objective:**\nRoll out the new dashboard features, which are currently behind a feature flag, to all users.\n\n**Feature Description:**\nRemove the feature flag that is currently hiding the new dashboard features. The new features should become visible to all users upon deployment.\n\n**Acceptance Criteria:**\n- The feature flag logic for the new dashboard is removed from the code.\n- All users can see and use the new dashboard features in the production environment after the next deployment."}
{"bad_prompt": "We need to the site is not secure (no https)", "good_prompt": "### Security: Enforce HTTPS on the Production Site\n\n**Objective:**\nEnsure that all traffic to our production website is served over HTTPS to protect user data and improve security.\n\n**Feature Description:**\nConfigure the production web server (e.g., Nginx, Vercel) to automatically redirect all HTTP requests to HTTPS. Additionally, ensure that the appropriate HSTS (HTTP Strict Transport Security) headers are set to prevent protocol downgrade attacks.\n\n**Acceptance Criteria:**\n- Accessing `http://www.our-site.com` automatically redirects to `https://www.our-site.com`.\n- The site's SSL certificate is valid and correctly installed.\n- The HSTS header is present in the response headers."}
{"bad_prompt": "We need to the user can't see the new usbr", "good_prompt": "### Bug Fix: New Users Are Not Appearing in the Admin Panel's User List\n\n**Bug Description:**\nWhen a new user registers, they do not appear in the user list in the admin panel until after a server restart.\n\n**Steps to Reproduce:**\n1. A new user registers for the site.\n2. Log in as an admin and go to the 'Users' page in the admin panel.\n\n**Expected Behavior:**\nThe newly registered user should be visible in the user list.\n\n**Actual Behavior:**\nThe new user is not visible.\n\n**Additional Context:**\nThe API that serves the user list for the admin panel is likely being cached incorrectly."}
{"bad_prompt": "Could you thk site needs a blog", "good_prompt": "### New Feature Request: Create a Blog\n\n**Objective:**\nCreate a new blog section on the website to publish articles and company news.\n\n**Feature Description:**\nCreate a new section of the website for a blog. This should include:\n1. A blog listing page (`/blog`) that displays a paginated list of all blog posts.\n2. A blog post detail page (`/blog/{slug}`) that displays the full content of a single post.\n3. A backend system (or integration with a headless CMS) to manage and create blog posts.\n\n**Acceptance Criteria:**\n- The `/blog` page lists all published blog posts.\n- Users can click on a post to view its full content.\n- The blog post detail page displays the post title, author, date, and content."}
{"bad_prompt": "the sitr is down", "good_prompt": "### Outage: The Website is Currently Down (502 Bad Gateway)\n\n**Bug Description:**\nThe entire website is currently inaccessible and is returning a 502 Bad Gateway error. This indicates an issue with the upstream server or application.\n\n**Steps to Reproduce:**\n1. Navigate to the website's homepage.\n2. Observe the 502 error page.\n\n**Expected Behavior:**\nThe website should load correctly.\n\n**Actual Behavior:**\nA 502 Bad Gateway error is displayed.\n\n**Additional Context:**\nThis is a critical production issue. The server logs need to be checked immediately to identify the root cause. This could be a crashed application process or a misconfiguration in the load balancer."}
{"bad_prompt": "the user can't see qhe dashboard page", "good_prompt": "### Bug Fix: The 'Dashboard' Link in the Header is Broken After Login\n\n**Bug Description:**\nAfter a user logs in, the 'Dashboard' link in the header is broken and leads to a 404 error.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the 'Dashboard' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to their dashboard page at `/dashboard`.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the skte is down", "good_prompt": "### Outage: The Website is Currently Down (502 Bad Gateway)\n\n**Bug Description:**\nThe entire website is currently inaccessible and is returning a 502 Bad Gateway error. This indicates an issue with the upstream server or application.\n\n**Steps to Reproduce:**\n1. Navigate to the website's homepage.\n2. Observe the 502 error page.\n\n**Expected Behavior:**\nThe website should load correctly.\n\n**Actual Behavior:**\nA 502 Bad Gateway error is displayed.\n\n**Additional Context:**\nThis is a critical production issue. The server logs need to be checked immediately to identify the root cause. This could be a crashed application process or a misconfiguration in the load balancer."}
{"bad_prompt": "Can you please the user can't see the favicon", "good_prompt": "### Bug Fix: The Favicon is Not Displayed\n\n**Bug Description:**\nThe website's favicon is not being displayed in the browser tab.\n\n**Steps to Reproduce:**\n1. Open the website in a browser.\n2. Look at the browser tab for the website.\n\n**Expected Behavior:**\nThe website's favicon should be displayed.\n\n**Actual Behavior:**\nA default browser icon is displayed.\n\n**Additional Context:**\nThe `<link>` tags for the favicon in the main HTML template are likely missing or have an incorrect `href` path."}
{"bad_prompt": "the user can't update their password", "good_prompt": "### Bug Fix: The 'Change Password' Functionality is Not Working\n\n**Bug Description:**\nWhen a user tries to change their password in their account settings, the operation fails with a generic 'An error occurred' message.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Go to the 'Account Settings' page.\n3. Enter the current password and a new password.\n4. Click 'Change Password'.\n\n**Expected Behavior:**\nThe user's password should be updated successfully.\n\n**Actual Behavior:**\nAn error message is displayed, and the password is not changed.\n\n**Additional Context:**\nThe server logs show that the 'current password' check is failing because it is being compared incorrectly. The password hashing logic needs to be reviewed."}
{"bad_prompt": "the user van't see the home page", "good_prompt": "### Bug Fix: The Site Logo Link to the Homepage is Broken\n\n**Bug Description:**\nClicking the site logo in the header, which should take the user to the homepage, is not working correctly.\n\n**Steps to Reproduce:**\n1. Navigate to any page other than the homepage (e.g., `/about`).\n2. Click the main site logo in the header.\n\n**Expected Behavior:**\nThe user should be taken back to the homepage (`/`).\n\n**Actual Behavior:**\nNothing happens, or the link points to an incorrect URL."}
{"bad_prompt": "i cjn't upload a pdf", "good_prompt": "### Bug Fix: File Upload Component Rejects PDF Files\n\n**Bug Description:**\nThe file upload component on the 'Documents' page is incorrectly rejecting PDF files. When a user tries to upload a PDF, they receive an 'Invalid file type' error.\n\n**Steps to Reproduce:**\n1. Go to the '/documents' page.\n2. Click the 'Upload' button.\n3. Select a PDF file from the file picker.\n\n**Expected Behavior:**\nThe PDF file should be accepted and uploaded successfully.\n\n**Actual Behavior:**\nAn 'Invalid file type' error message is displayed, and the upload is blocked.\n\n**Additional Context:**\nThe list of accepted file types in the component's configuration is likely missing the `application/pdf` MIME type."}
{"bad_prompt": "the user can't see the 404 page", "good_prompt": "### Bug Fix: The Custom 404 Page is Not Being Used\n\n**Bug Description:**\nWhen navigating to a non-existent page, the server's default 404 error page is shown instead of our custom-designed 404 page.\n\n**Steps to Reproduce:**\n1. Navigate to a URL that does not exist (e.g., `/this-page-does-not-exist`).\n\n**Expected Behavior:**\nOur custom 404 page should be displayed.\n\n**Actual Behavior:**\nThe default server or browser 404 page is shown.\n\n**Additional Context:**\nThe application's routing configuration needs to be updated to correctly point to our custom 404 page component for all unmatched routes."}
{"bad_prompt": "We need to the checkout is btoken", "good_prompt": "### Bug Fix: Checkout Fails with 'Payment Gateway Error'\n\n**Bug Description:**\nWhen a user tries to complete a purchase, the checkout process fails at the payment step with a generic 'Payment Gateway Error'. No specific details are provided to the user.\n\n**Steps to Reproduce:**\n1. Add an item to the cart.\n2. Proceed to the checkout page.\n3. Fill in all the details and enter valid payment information.\n4. Click 'Complete Purchase'.\n\n**Expected Behavior:**\nThe payment should be processed successfully, and the user should be taken to an order confirmation page.\n\n**Actual Behavior:**\nThe process fails with a 'Payment Gateway Error'.\n\n**Additional Context:**\nThe server logs show a '401 Unauthorized' error from the Stripe API, suggesting that our API key may be incorrect or has expired."}
{"bad_prompt": "We need to the site needs a privacy policy", "good_prompt": "### Legal: Create and Add Privacy Policy Page\n\n**Objective:**\nCreate a 'Privacy Policy' page to comply with legal requirements and inform users about our data practices.\n\n**Feature Description:**\nCreate a new static page at `/privacy`. The content for this page will be provided by the legal department. This page must be linked from the website footer.\n\n**Acceptance Criteria:**\n- A new page is created at `/privacy`.\n- The legal team's content is added to the page.\n- A link to the 'Privacy Policy' page is present in the site footer on all pages."}
{"bad_prompt": "implement a dark mode", "good_prompt": "### New Feature Request: Implement a Dark Mode Theme\n\n**User Story:**\nAs a user who often works at night, I want to be able to switch the website to a dark mode theme to reduce eye strain.\n\n**Feature Description:**\nImplement a dark mode theme for the entire website. A toggle switch should be added to the header that allows users to switch between the default (light) and dark themes. The user's preference should be saved in `localStorage` so that it persists across sessions.\n\n**Acceptance Criteria:**\n- A theme toggle switch is present in the header.\n- Clicking the toggle switches the site's color scheme between light and dark modes.\n- All components (buttons, forms, text, backgrounds) have appropriate styles for both themes.\n- The user's selected theme is remembered when they revisit the site."}
{"bad_prompt": "the mobile app crashes", "good_prompt": "### Bug Fix: iOS App Crashes on Startup for iOS 17\n\n**Bug Description:**\nThe iOS application is crashing immediately upon startup for users running iOS 17. The app is unusable for these users.\n\n**Steps to Reproduce:**\n1. Install the app on a device running iOS 17.\n2. Try to open the app.\n\n**Expected Behavior:**\nThe app should open and function normally.\n\n**Actual Behavior:**\nThe app crashes immediately.\n\n**Additional Context:**\nThe crash logs indicate a null pointer exception in the `AppDelegate` related to the initialization of a third-party library that may not be compatible with iOS 17."}
{"bad_prompt": "Can you please the api is missing a health check", "good_prompt": "### Feature: Add a Health Check Endpoint to the API\n\n**Objective:**\nCreate a new `/health` endpoint for the API that can be used by our monitoring services to check if the application is running and healthy.\n\n**Feature Description:**\nImplement a new GET endpoint at `/api/health`. This endpoint should perform a quick check to ensure that the application can connect to the database and then return a 200 OK status with a simple JSON response like `{\"status\": \"ok\"}`.\n\n**Acceptance Criteria:**\n- A GET request to `/api/health` returns a 200 OK status code.\n- The response body is `{\"status\": \"ok\"}`.\n- If the database connection fails, the endpoint should return a 503 Service Unavailable status."}
{"bad_prompt": "the api is returning the wrong data", "good_prompt": "### Bug Fix: The `/api/analytics` Endpoint Returns Data for the Wrong Date Range\n\n**Bug Description:**\nThe `/api/analytics` endpoint is supposed to return data for the date range specified in the query parameters (`startDate`, `endDate`). However, it is ignoring these parameters and always returning data for the last 30 days.\n\n**Steps to Reproduce:**\n1. Make a GET request to `/api/analytics?startDate=2023-01-01&endDate=2023-01-31`.\n2. Observe the data returned in the response.\n\n**Expected Behavior:**\nThe response should contain analytics data only for January 2023.\n\n**Actual Behavior:**\nThe response contains data for the last 30 days from the current date.\n\n**Additional Context:**\nThe backend logic for the endpoint is likely not parsing the `startDate` and `endDate` query parameters correctly and is falling back to a default date range."}
{"bad_prompt": "We need to e can't remove items from the cart", "good_prompt": "### Bug Fix: Removing an Item from the Shopping Cart Does Not Work\n\n**Bug Description:**\nWhen a user clicks the 'Remove' button next to an item in their shopping cart, the item is not removed, and the page simply reloads.\n\n**Steps to Reproduce:**\n1. Add an item to the shopping cart.\n2. Go to the shopping cart page.\n3. Click the 'Remove' button for the item.\n\n**Expected Behavior:**\nThe item should be removed from the shopping cart, and the cart total should be updated.\n\n**Actual Behavior:**\nThe page reloads, but the item remains in the cart."}
{"bad_prompt": "the user can't vee their own profile picture", "good_prompt": "### Bug Fix: User's Own Profile Picture is Not Displayed on Their Profile Page\n\n**Bug Description:**\nWhile the user's avatar is displayed correctly in the header, their full-size profile picture is not appearing on their own profile page. A placeholder image is shown instead.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Navigate to your own profile page.\n\n**Expected Behavior:**\nThe user's full-size profile picture should be displayed.\n\n**Actual Behavior:**\nA placeholder image is shown.\n\n**Additional Context:**\nThe component responsible for rendering the profile page is likely fetching the user data but is not correctly accessing the `profile_picture_url` attribute."}
{"bad_prompt": "Could you the api is not logging errors", "good_prompt": "### Observability: Add Error Logging to the API\n\n**Objective:**\nImprove our ability to debug issues by adding structured error logging to the API.\n\n**Feature Description:**\nIntegrate a logging library (like Winston or Pino) into the API. All caught errors in the API endpoints should be logged in a structured JSON format. The logs should include a timestamp, error message, stack trace, and request ID.\n\n**Acceptance Criteria:**\n- All API errors are logged to the console or a log file in JSON format.\n- The logs contain all the required fields (timestamp, message, stack trace, request ID)."}
{"bad_prompt": "Could you update the dependenmies", "good_prompt": "### Chore: Update Outdated NPM Dependencies\n\n**Objective:**\nUpdate all outdated NPM dependencies to their latest stable versions to ensure the project is secure and up-to-date.\n\n**Acceptance Criteria:**\n- Run `npm outdated` to identify all outdated packages.\n- Update each package to its latest major or minor version as appropriate in the `package.json` file.\n- Run `npm install` to update the `package-lock.json` file.\n- After updating, run the test suite (`npm test`) to ensure that the updates have not introduced any breaking changes.\n- Manually test the core application flows (login, form submission) to verify functionality."}
{"bad_prompt": "i can't gpload a pdf", "good_prompt": "### Bug Fix: File Upload Component Rejects PDF Files\n\n**Bug Description:**\nThe file upload component on the 'Documents' page is incorrectly rejecting PDF files. When a user tries to upload a PDF, they receive an 'Invalid file type' error.\n\n**Steps to Reproduce:**\n1. Go to the '/documents' page.\n2. Click the 'Upload' button.\n3. Select a PDF file from the file picker.\n\n**Expected Behavior:**\nThe PDF file should be accepted and uploaded successfully.\n\n**Actual Behavior:**\nAn 'Invalid file type' error message is displayed, and the upload is blocked.\n\n**Additional Context:**\nThe list of accepted file types in the component's configuration is likely missing the `application/pdf` MIME type."}
{"bad_prompt": "Can you please the text is too small", "good_prompt": "### Accessibility: Increase the Base Font Size for Better Readability\n\n**Objective:**\nImprove the accessibility and readability of the website's content by increasing the base font size.\n\n**Acceptance Criteria:**\n- The base font size for all body text (paragraphs, lists, etc.) should be increased from 14px to 16px.\n- All headings (H1, H2, H3, etc.) should be adjusted proportionally to maintain the visual hierarchy.\n- The line height should be adjusted to 1.5 to ensure comfortable reading with the new font size.\n\n**Additional Context:**\nThis change should be implemented in the global CSS file to ensure it applies sitewide."}
{"bad_prompt": "Can you please the usek can't see the new order", "good_prompt": "### Bug Fix: New Orders Are Not Appearing in the User's Order History\n\n**Bug Description:**\nAfter a user successfully places a new order, the order does not appear in their 'Order History' page until they log out and log back in.\n\n**Steps to Reproduce:**\n1. Place a new order.\n2. Go to the 'Order History' page in your account.\n\n**Expected Behavior:**\nThe new order should be listed at the top of the order history.\n\n**Actual Behavior:**\nThe new order is not visible.\n\n**Additional Context:**\nThe frontend application is likely caching the order history data and is not re-fetching it after a new order is placed. The local state or cache needs to be invalidated and updated after a successful checkout."}
{"bad_prompt": "it's broken", "good_prompt": "### Bug Fix: API Endpoint `api/users/{id}` Throws a 500 Error\n\n**Bug Description:**\nThe API endpoint responsible for fetching a single user's data is consistently returning a 500 Internal Server Error when a valid user ID is provided.\n\n**Steps to Reproduce:**\n1. Send a GET request to the endpoint `/api/users/123` (where 123 is a valid user ID).\n2. Observe the HTTP response code.\n\n**Expected Behavior:**\nThe API should return a 200 OK status code with the user's data in the response body.\n\n**Actual Behavior:**\nThe API returns a 500 Internal Server Error."}
{"bad_prompt": "Can you please the mobile app crashes", "good_prompt": "### Bug Fix: iOS App Crashes on Startup for iOS 17\n\n**Bug Description:**\nThe iOS application is crashing immediately upon startup for users running iOS 17. The app is unusable for these users.\n\n**Steps to Reproduce:**\n1. Install the app on a device running iOS 17.\n2. Try to open the app.\n\n**Expected Behavior:**\nThe app should open and function normally.\n\n**Actual Behavior:**\nThe app crashes immediately.\n\n**Additional Context:**\nThe crash logs indicate a null pointer exception in the `AppDelegate` related to the initialization of a third-party library that may not be compatible with iOS 17."}
{"bad_prompt": "Can you please tze user can't see the dashboard page", "good_prompt": "### Bug Fix: The 'Dashboard' Link in the Header is Broken After Login\n\n**Bug Description:**\nAfter a user logs in, the 'Dashboard' link in the header is broken and leads to a 404 error.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the 'Dashboard' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to their dashboard page at `/dashboard`.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the site needs a blog", "good_prompt": "### New Feature Request: Create a Blog\n\n**Objective:**\nCreate a new blog section on the website to publish articles and company news.\n\n**Feature Description:**\nCreate a new section of the website for a blog. This should include:\n1. A blog listing page (`/blog`) that displays a paginated list of all blog posts.\n2. A blog post detail page (`/blog/{slug}`) that displays the full content of a single post.\n3. A backend system (or integration with a headless CMS) to manage and create blog posts.\n\n**Acceptance Criteria:**\n- The `/blog` page lists all published blog posts.\n- Users can click on a post to view its full content.\n- The blog post detail page displays the post title, author, date, and content."}
{"bad_prompt": "the user can't see the nez post", "good_prompt": "### Bug Fix: New Blog Posts Are Not Appearing on the Blog Listing Page\n\n**Bug Description:**\nWhen a new blog post is created and published, it does not appear on the main `/blog` listing page.\n\n**Steps to Reproduce:**\n1. Create and publish a new blog post via the CMS.\n2. Go to the `/blog` page.\n\n**Expected Behavior:**\nThe new blog post should appear at the top of the list.\n\n**Actual Behavior:**\nThe new post is not listed.\n\n**Additional Context:**\nThe API endpoint that fetches the list of blog posts is likely not being revalidated or is being cached too aggressively. We need to implement a revalidation strategy (e.g., Incremental Static Regeneration - ISR) to ensure the list is updated when new posts are published."}
{"bad_prompt": "the user can't see the new caeegory", "good_prompt": "### Bug Fix: New Product Categories Are Not Appearing in the Filter Sidebar\n\n**Bug Description:**\nWhen a new product category is created in the admin panel, it does not appear in the list of filterable categories on the products page sidebar.\n\n**Steps to Reproduce:**\n1. Create a new product category in the admin panel.\n2. Go to the `/products` page.\n3. Observe the filter sidebar.\n\n**Expected Behavior:**\nThe new category should be listed as a filter option.\n\n**Actual Behavior:**\nThe new category is missing."}
{"bad_prompt": "We need to the site needs a blog", "good_prompt": "### New Feature Request: Create a Blog\n\n**Objective:**\nCreate a new blog section on the website to publish articles and company news.\n\n**Feature Description:**\nCreate a new section of the website for a blog. This should include:\n1. A blog listing page (`/blog`) that displays a paginated list of all blog posts.\n2. A blog post detail page (`/blog/{slug}`) that displays the full content of a single post.\n3. A backend system (or integration with a headless CMS) to manage and create blog posts.\n\n**Acceptance Criteria:**\n- The `/blog` page lists all published blog posts.\n- Users can click on a post to view its full content.\n- The blog post detail page displays the post title, author, date, and content."}
{"bad_prompt": "Could you the password reset token expires too fast", "good_prompt": "### UX Improvement: Extend the Password Reset Token Expiration Time\n\n**Objective:**\nImprove the user experience for the password reset flow by extending the validity period of the password reset token.\n\n**Feature Description:**\nIncrease the expiration time for password reset tokens from the current 15 minutes to 1 hour. This change should be made in the authentication service's configuration.\n\n**Acceptance Criteria:**\n- A password reset link sent to a user's email should remain valid for 1 hour.\n- Attempting to use the link after 1 hour should result in a user-friendly error message indicating that the token has expired."}
{"bad_prompt": "the terms of service page is missing", "good_prompt": "### Content: Create a 'Terms of Service' Page\n\n**Objective:**\nCreate a new 'Terms of Service' page to provide users with the legal terms and conditions for using our website and services.\n\n**Feature Description:**\nCreate a new static page at `/terms-of-service`. The content for this page will be provided by the legal team. The page should be linked in the website's footer.\n\n**Acceptance Criteria:**\n- A new page is created at `/terms-of-service`.\n- The content provided by the legal team is added to the page.\n- A link to the 'Terms of Service' page is present in the site footer."}
{"bad_prompt": "i can't remove items frwm the cart", "good_prompt": "### Bug Fix: Removing an Item from the Shopping Cart Does Not Work\n\n**Bug Description:**\nWhen a user clicks the 'Remove' button next to an item in their shopping cart, the item is not removed, and the page simply reloads.\n\n**Steps to Reproduce:**\n1. Add an item to the shopping cart.\n2. Go to the shopping cart page.\n3. Click the 'Remove' button for the item.\n\n**Expected Behavior:**\nThe item should be removed from the shopping cart, and the cart total should be updated.\n\n**Actual Behavior:**\nThe page reloads, but the item remains in the cart."}
{"bad_prompt": "Could you the user can't see the new order", "good_prompt": "### Bug Fix: New Orders Are Not Appearing in the User's Order History\n\n**Bug Description:**\nAfter a user successfully places a new order, the order does not appear in their 'Order History' page until they log out and log back in.\n\n**Steps to Reproduce:**\n1. Place a new order.\n2. Go to the 'Order History' page in your account.\n\n**Expected Behavior:**\nThe new order should be listed at the top of the order history.\n\n**Actual Behavior:**\nThe new order is not visible.\n\n**Additional Context:**\nThe frontend application is likely caching the order history data and is not re-fetching it after a new order is placed. The local state or cache needs to be invalidated and updated after a successful checkout."}
{"bad_prompt": "Can you please the login with googhe is broken", "good_prompt": "### Bug Fix: 'Login with Google' OAuth Flow Fails with a Redirect URI Mismatch Error\n\n**Bug Description:**\nWhen a user tries to log in using the 'Login with Google' button, the OAuth flow fails, and the user is redirected to an error page from Google that says 'redirect_uri_mismatch'.\n\n**Steps to Reproduce:**\n1. Go to the login page.\n2. Click the 'Login with Google' button.\n3. Observe the error page from Google.\n\n**Expected Behavior:**\nThe user should be successfully authenticated with their Google account and redirected back to the application's dashboard.\n\n**Actual Behavior:**\nThe authentication fails with a 'redirect_uri_mismatch' error.\n\n**Additional Context:**\nThis usually means that the redirect URI configured in our Google Cloud Console for the OAuth client does not match the one our application is sending. We need to verify the URIs in the Google Cloud Console."}
{"bad_prompt": "the site is not updatina", "good_prompt": "### Bug Fix: Content Changes from the CMS are Not Appearing on the Website\n\n**Bug Description:**\nWhen content is updated in our Headless CMS (e.g., Contentful, Strapi), the changes are not being reflected on the live website, even after a long wait. This suggests an issue with our build process or caching.\n\n**Steps to Reproduce:**\n1. Update the title of the homepage in the CMS.\n2. Save and publish the changes in the CMS.\n3. Visit the homepage of the live website.\n\n**Expected Behavior:**\nThe homepage should display the new, updated title.\n\n**Actual Behavior:**\nThe old title is still being displayed.\n\n**Additional Context:**\nThis could be caused by a few things:\n1. The webhook from the CMS to our build server is not firing or is misconfigured.\n2. The build server is not correctly re-building the site when it receives the webhook.\n3. An aggressive caching layer (e.g., at the CDN) is serving stale content. We need to investigate the build logs and cache settings."}
{"bad_prompt": "the user can't see the terms of service", "good_prompt": "### Bug Fix: The 'Terms of Service' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Terms of Service' link in the website footer is pointing to a non-existent page (`/tos`) instead of the correct page (`/terms-of-service`).\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Terms of Service' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/terms-of-service` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "i need to be able to leave a review for a product", "good_prompt": "### New Feature Request: Implement Product Reviews\n\n**User Story:**\nAs a customer who has purchased a product, I want to be able to leave a review and a star rating so that I can share my feedback with other potential buyers.\n\n**Feature Description:**\nAdd a product review system. This should include:\n1. A form on each product page that allows verified purchasers to write a review and give a star rating (1-5).\n2. A section on the product page that displays all the reviews for that product, including the average star rating.\n\n**Acceptance Criteria:**\n- Only users who have purchased the product can leave a review.\n- The review form includes a star rating component and a text area for the review.\n- Submitted reviews are displayed on the product page.\n- The average star rating is calculated and displayed correctly."}
{"bad_prompt": "Could you the terms of service page is missing", "good_prompt": "### Content: Create a 'Terms of Service' Page\n\n**Objective:**\nCreate a new 'Terms of Service' page to provide users with the legal terms and conditions for using our website and services.\n\n**Feature Description:**\nCreate a new static page at `/terms-of-service`. The content for this page will be provided by the legal team. The page should be linked in the website's footer.\n\n**Acceptance Criteria:**\n- A new page is created at `/terms-of-service`.\n- The content provided by the legal team is added to the page.\n- A link to the 'Terms of Service' page is present in the site footer."}
{"bad_prompt": "Can you please the user profile picture is not updating", "good_prompt": "### Bug Fix: The User's Profile Picture Does Not Update After Uploading a New One\n\n**Bug Description:**\nAfter a user successfully uploads a new profile picture, the old picture is still displayed in the header and on their profile page. The new picture only appears after a hard refresh or clearing the cache.\n\n**Steps to Reproduce:**\n1. Upload a new profile picture on the profile settings page.\n2. Observe the avatar in the header.\n\n**Expected Behavior:**\nThe new profile picture should be displayed immediately throughout the application without requiring a hard refresh.\n\n**Actual Behavior:**\nThe old picture remains visible due to a caching issue.\n\n**Additional Context:**\nWe need to add a cache-busting parameter (like a timestamp or version number) to the image URL to ensure that the browser fetches the new version of the image after it has been updated."}
{"bad_prompt": "Can you please the uses can't see the app-ads.txt file", "good_prompt": "### Advertising: Create an `app-ads.txt` File\n\n**Objective:**\nCreate an `app-ads.txt` file for our mobile app to declare the authorized sellers of our in-app ad inventory.\n\n**Feature Description:**\nCreate an `app-ads.txt` file in the root of the public directory. The file should contain the list of authorized ad sellers for our mobile app.\n\n**Acceptance Criteria:**\n- An `app-ads.txt` file is accessible at the root of the website.\n- The file contains the correct information for our authorized mobile ad sellers."}
{"bad_prompt": "the user can't close their account", "good_prompt": "### Bug Fix: The 'Close Account' Button is Not Working\n\n**Bug Description:**\nWhen a user clicks the 'Close Account' button in their profile settings, nothing happens. No confirmation modal appears, and no action is taken.\n\n**Steps to Reproduce:**\n1. Go to the account settings page.\n2. Click the 'Close Account' button.\n\n**Expected Behavior:**\nA confirmation modal should appear, warning the user about the action. If they confirm, the account should be closed.\n\n**Actual Behavior:**\nNothing happens. There might be a JavaScript error in the console.\n\n**Additional Context:**\nThe click handler for the button is likely not wired up correctly in the frontend code."}
{"bad_prompt": "Can you please the user can't see the nea comment", "good_prompt": "### Bug Fix: New Comments Are Not Appearing in Real-Time\n\n**Bug Description:**\nWhen a user posts a comment, it is successfully saved to the database, but it does not appear on the page for other users unless they manually refresh the page.\n\n**Steps to Reproduce:**\n1. Open a blog post in two different browsers (or as two different users).\n2. Post a comment in one browser.\n3. Observe the comment section in the second browser.\n\n**Expected Behavior:**\nThe new comment should appear in the second browser in real-time (or near real-time) without a refresh.\n\n**Actual Behavior:**\nThe comment section in the second browser does not update.\n\n**Additional Context:**\nTo solve this, we need to implement a real-time solution, such as using WebSockets or a library like Pusher to push new comments to all connected clients. Alternatively, the frontend could poll the server for new comments periodically."}
{"bad_prompt": "i need a way to contact support", "good_prompt": "### New Feature Request: Create a Customer Support Contact Form\n\n**User Story:**\nAs a user who is having a problem, I want a way to contact customer support directly through the website.\n\n**Feature Description:**\nCreate a new 'Contact Support' page, accessible from the main navigation. This page should contain a form where users can enter their name, email, subject, and a detailed description of their issue. Submitting the form should create a new ticket in our customer support system (e.g., Zendesk) via its API.\n\n**Acceptance Criteria:**\n- A new 'Contact Support' page is created.\n- The form on the page includes fields for name, email, subject, and description.\n- Submitting the form successfully creates a new ticket in Zendesk."}
{"bad_prompt": "We need to the user can create a duplicate account", "good_prompt": "### Bug Fix: A User Can Create Multiple Accounts with the Same Email Address\n\n**Bug Description:**\nThe registration system allows multiple user accounts to be created with the exact same email address. This should not be possible, as the email address should be a unique identifier.\n\n**Steps to Reproduce:**\n1. Register a new account with the email 'test@example.com'.\n2. Log out.\n3. Register another new account, again using the email 'test@example.com'.\n\n**Expected Behavior:**\nThe second registration attempt should fail with an error message indicating that the email address is already in use.\n\n**Actual Behavior:**\nA second account is created successfully.\n\n**Additional Context:**\nA unique constraint needs to be added to the `email` column in the `users` database table. The application's registration logic should also be updated to check if an email already exists before creating a new user."}
{"bad_prompt": "the dropdfwn is not working on mobile", "good_prompt": "### Bug Fix: The Main Navigation Dropdown Menu is Not Clickable on Mobile\n\n**Bug Description:**\nThe dropdown menu in the main navigation bar cannot be opened on mobile devices (touch screens). Tapping on the menu item does nothing.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device or a browser in mobile emulation mode.\n2. Tap on the 'Services' navigation item, which is supposed to have a dropdown menu.\n\n**Expected Behavior:**\nA dropdown menu should appear, showing the sub-pages.\n\n**Actual Behavior:**\nNothing happens when the navigation item is tapped."}
{"bad_prompt": "Can you please i forgot my password", "good_prompt": "### New Feature Request: Implement a 'Forgot Password' Flow\n\n**User Story:**\nAs a user who has forgotten my password, I want to be able to reset it securely so that I can regain access to my account.\n\n**Feature Description:**\nImplement a 'Forgot Password' flow. This should include:\n1. A 'Forgot Password?' link on the login page.\n2. A page where the user can enter their email address to request a password reset.\n3. An email sent to the user with a secure, time-limited link to a password reset page.\n4. A page where the user can enter and confirm their new password.\n\n**Acceptance Criteria:**\n- The 'Forgot Password?' link exists and works.\n- The system correctly sends a password reset email with a unique token.\n- The user can successfully set a new password using the link in the email.\n- The old password is no longer valid after the reset."}
{"bad_prompt": "the user is not logged out when tce session expires", "good_prompt": "### Bug Fix: User is Not Redirected to Login Page After Session Expiration\n\n**Bug Description:**\nWhen a user's session expires, they are not automatically logged out or redirected to the login page. Instead, their next action (e.g., clicking a link) results in an unexpected error page (e.g., a 401 or 403 error).\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Wait for the session to expire (e.g., 1 hour).\n3. Try to navigate to another page within the application.\n\n**Expected Behavior:**\nThe user should be automatically redirected to the login page with a message indicating that their session has expired.\n\n**Actual Behavior:**\nThe user sees an unfriendly error page, which is a poor user experience.\n\n**Additional Context:**\nThe API client on the frontend should be configured to handle 401 Unauthorized responses globally. When a 401 is received, it should clear the user's session data from local storage and redirect them to the login page."}
{"bad_prompt": "We need to the email notifications are not working", "good_prompt": "### Bug Fix: Email Notifications Are Not Being Sent for New User Registrations\n\n**Bug Description:**\nThe system is not sending the 'Welcome' email notification when a new user registers for an account.\n\n**Steps to Reproduce:**\n1. Create a new user account through the registration page.\n2. Check the email inbox for the address used to register.\n3. Check the logs for the email sending service (e.g., SendGrid).\n\n**Expected Behavior:**\nA 'Welcome' email should be sent to the new user's email address immediately after registration.\n\n**Actual Behavior:**\nNo email is sent. The email service logs show that no API call is being made from our application for new registrations."}
{"bad_prompt": "We need to the user can't see their own posts", "good_prompt": "### Bug Fix: A User's Own Posts Are Not Appearing on Their Profile Page\n\n**Bug Description:**\nThe 'My Posts' section on a user's profile page is always empty, even when the user has created posts.\n\n**Steps to Reproduce:**\n1. Create a new post.\n2. Go to your own profile page.\n3. Observe the 'My Posts' section.\n\n**Expected Behavior:**\nThe 'My Posts' section should display a list of all the posts created by the logged-in user.\n\n**Actual Behavior:**\nThe section is empty.\n\n**Additional Context:**\nThe API endpoint that fetches the posts for the profile page is likely not correctly filtering the posts by the user's ID."}
{"bad_prompt": "the user can't sex the new product", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "We need to i can't unsubscribe from the newsletter", "good_prompt": "### Bug Fix: The 'Unsubscribe' Link in Emails is Not Working\n\n**Bug Description:**\nWhen a user clicks the 'Unsubscribe' link in a marketing email, it leads to a 404 Not Found page. The unsubscribe functionality is completely broken.\n\n**Steps to Reproduce:**\n1. Receive a marketing email from our system.\n2. Click the 'Unsubscribe' link at the bottom of the email.\n\n**Expected Behavior:**\nThe user should be taken to a page where they can confirm that they want to unsubscribe from the newsletter.\n\n**Actual Behavior:**\nThe link leads to a 404 page.\n\n**Additional Context:**\nThe URL for the unsubscribe link being generated in our email templates is incorrect. The template needs to be updated with the correct URL for the unsubscribe page."}
{"bad_prompt": "implement a button", "good_prompt": "### New Feature Request: Add 'Export to CSV' Button to a User Dashboard\n\n**User Story:**\nAs a user, I want to be able to export my data table as a CSV file so that I can perform my own analysis in other tools.\n\n**Feature Description:**\nImplement a new button labeled 'Export to CSV' on the main user dashboard. When clicked, this button should generate a CSV file of the data currently displayed in the main table and initiate a download for the user.\n\n**Acceptance Criteria:**\n- A button with the text 'Export to CSV' is present on the user dashboard.\n- Clicking the button triggers a CSV download.\n- The downloaded CSV file contains all the data from the table, including correct headers."}
{"bad_prompt": "the api needs paginatoon", "good_prompt": "### Feature: Add Pagination to the `/api/posts` Endpoint\n\n**Objective:**\nThe `/api/posts` endpoint currently returns all posts at once, which is inefficient and slow. This task is to add pagination to this endpoint to improve performance.\n\n**Acceptance Criteria:**\n- The `/api/posts` endpoint should accept two optional query parameters: `page` (the page number, defaulting to 1) and `limit` (the number of items per page, defaulting to 10).\n- The API response should be a JSON object containing the list of posts for the requested page (`data`) and pagination metadata (`total`, `page`, `limit`).\n- For example, a request to `/api/posts?page=2&limit=5` should return posts 6-10."}
{"bad_prompt": "the usen can't see the security.txt file", "good_prompt": "### Security: Create a `security.txt` File\n\n**Objective:**\nCreate a `security.txt` file to provide a point of contact for security researchers who may find vulnerabilities in our website.\n\n**Feature Description:**\nCreate a `security.txt` file in the `.well-known` directory of the public folder. The file should follow the standard format and include contact information for reporting security issues.\n\n**Acceptance Criteria:**\n- A `security.txt` file is accessible at `/.well-known/security.txt`.\n- The file contains a valid contact email for security reports."}
{"bad_prompt": "We need to the login with google is broken", "good_prompt": "### Bug Fix: 'Login with Google' OAuth Flow Fails with a Redirect URI Mismatch Error\n\n**Bug Description:**\nWhen a user tries to log in using the 'Login with Google' button, the OAuth flow fails, and the user is redirected to an error page from Google that says 'redirect_uri_mismatch'.\n\n**Steps to Reproduce:**\n1. Go to the login page.\n2. Click the 'Login with Google' button.\n3. Observe the error page from Google.\n\n**Expected Behavior:**\nThe user should be successfully authenticated with their Google account and redirected back to the application's dashboard.\n\n**Actual Behavior:**\nThe authentication fails with a 'redirect_uri_mismatch' error.\n\n**Additional Context:**\nThis usually means that the redirect URI configured in our Google Cloud Console for the OAuth client does not match the one our application is sending. We need to verify the URIs in the Google Cloud Console."}
{"bad_prompt": "We need to the site map is out of date", "good_prompt": "### Bug Fix: The `sitemap.xml` is Not Being Updated with New Pages\n\n**Bug Description:**\nThe `sitemap.xml` file is not being updated automatically when new blog posts or product pages are created. It is static and out of date, which is bad for SEO.\n\n**Steps to Reproduce:**\n1. Create a new blog post.\n2. After the site has been rebuilt, view the `sitemap.xml` file.\n\n**Expected Behavior:**\nThe `sitemap.xml` file should contain a URL for the newly created blog post.\n\n**Actual Behavior:**\nThe new blog post's URL is missing from the sitemap.\n\n**Additional Context:**\nThe script that generates the sitemap is likely not correctly fetching the list of all dynamic pages. It needs to be updated to query the database for all published posts and products during the build process."}
{"bad_prompt": "Can you please the search is not woruing", "good_prompt": "### Bug Fix: Search Functionality Returns an Empty Result for Valid Queries\n\n**Bug Description:**\nThe search functionality on the `/search` page is not returning any results, even for queries that should match existing content. It always displays a 'No results found' message.\n\n**Steps to Reproduce:**\n1. Go to the `/search` page.\n2. Enter a valid search term that is known to be in the content (e.g., 'performance').\n3. Click the 'Search' button.\n\n**Expected Behavior:**\nThe page should display a list of search results that match the query.\n\n**Actual Behavior:**\nThe page displays the 'No results found' message."}
{"bad_prompt": "Could you the checkout process is confusing", "good_prompt": "### UX Improvement: Simplify the Checkout Process\n\n**Objective:**\nImprove the user experience of the checkout process to reduce friction and increase conversion rates.\n\n**Feature Description:**\nRedesign the checkout flow from a multi-page process to a single-page checkout. All the necessary fields (shipping address, billing address, payment information) should be on a single page. The user's progress should be clearly indicated.\n\n**Acceptance Criteria:**\n- The entire checkout process is contained within a single `/checkout` page.\n- The user can enter their shipping, billing, and payment information without navigating to different pages.\n- The design matches the new single-page checkout mockups from the design team.\n\n**Additional Context:**\nFigma mockups: [Link to Figma]"}
{"bad_prompt": "the user can't close their acckunt", "good_prompt": "### Bug Fix: The 'Close Account' Button is Not Working\n\n**Bug Description:**\nWhen a user clicks the 'Close Account' button in their profile settings, nothing happens. No confirmation modal appears, and no action is taken.\n\n**Steps to Reproduce:**\n1. Go to the account settings page.\n2. Click the 'Close Account' button.\n\n**Expected Behavior:**\nA confirmation modal should appear, warning the user about the action. If they confirm, the account should be closed.\n\n**Actual Behavior:**\nNothing happens. There might be a JavaScript error in the console.\n\n**Additional Context:**\nThe click handler for the button is likely not wired up correctly in the frontend code."}
{"bad_prompt": "We need to the user can't see the new profile picture", "good_prompt": "### Bug Fix: Other Users Cannot See a User's New Profile Picture\n\n**Bug Description:**\nWhen a user updates their profile picture, they can see the new picture, but other users still see their old one. This points to a caching issue.\n\n**Steps to Reproduce:**\n1. User A updates their profile picture.\n2. User B views User A's profile page.\n\n**Expected Behavior:**\nUser B should see User A's new profile picture.\n\n**Actual Behavior:**\nUser B still sees User A's old profile picture.\n\n**Additional Context:**\nThe URLs for profile pictures are likely being cached aggressively at the CDN or in the browser. We need to implement a cache-busting strategy, such as appending a version number or timestamp as a query parameter to the image URL whenever it's updated (e.g., `.../avatar.jpg?v=12345`)."}
{"bad_prompt": "the form ig not validating", "good_prompt": "### Bug Fix: The Registration Form is Not Validating the Email Address Correctly\n\n**Bug Description:**\nThe user registration form allows users to submit an email address without a valid format (e.g., 'user@domain' instead of 'user@domain.com'). This leads to invalid data in our system.\n\n**Steps to Reproduce:**\n1. Go to the registration page.\n2. Enter a password.\n3. Enter an invalid email address like 'test'.\n4. Click the 'Register' button.\n\n**Expected Behavior:**\nThe form should display a validation error message indicating that the email address is not valid, and the form should not be submitted.\n\n**Actual Behavior:**\nThe form submits successfully with the invalid email address."}
{"bad_prompt": "Could you the user can't see the contact page", "good_prompt": "### Bug Fix: The 'Contact Us' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Contact Us' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Contact Us' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/contact` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see uhe press page", "good_prompt": "### Bug Fix: The 'Press' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Press' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Press' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/press` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "fix the hesder", "good_prompt": "### Bug Fix: Resolve Header Layout Issue on Mobile Devices\n\n**Bug Description:**\nThe main site header is not rendering correctly on mobile screen sizes (below 600px). The logo overlaps the navigation links, making them unclickable.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device or in a browser with the viewport width set to less than 600px.\n2. Observe the main header at the top of the page.\n\n**Expected Behavior:**\nThe header elements should be aligned properly, with no overlap. A hamburger menu should be visible to toggle the navigation links.\n\n**Actual Behavior:**\nThe logo and navigation links are overlapping."}
{"bad_prompt": "We need to the user can't see the nej profile picture", "good_prompt": "### Bug Fix: Other Users Cannot See a User's New Profile Picture\n\n**Bug Description:**\nWhen a user updates their profile picture, they can see the new picture, but other users still see their old one. This points to a caching issue.\n\n**Steps to Reproduce:**\n1. User A updates their profile picture.\n2. User B views User A's profile page.\n\n**Expected Behavior:**\nUser B should see User A's new profile picture.\n\n**Actual Behavior:**\nUser B still sees User A's old profile picture.\n\n**Additional Context:**\nThe URLs for profile pictures are likely being cached aggressively at the CDN or in the browser. We need to implement a cache-busting strategy, such as appending a version number or timestamp as a query parameter to the image URL whenever it's updated (e.g., `.../avatar.jpg?v=12345`)."}
{"bad_prompt": "the user cankt see the new order", "good_prompt": "### Bug Fix: New Orders Are Not Appearing in the User's Order History\n\n**Bug Description:**\nAfter a user successfully places a new order, the order does not appear in their 'Order History' page until they log out and log back in.\n\n**Steps to Reproduce:**\n1. Place a new order.\n2. Go to the 'Order History' page in your account.\n\n**Expected Behavior:**\nThe new order should be listed at the top of the order history.\n\n**Actual Behavior:**\nThe new order is not visible.\n\n**Additional Context:**\nThe frontend application is likely caching the order history data and is not re-fetching it after a new order is placed. The local state or cache needs to be invalidated and updated after a successful checkout."}
{"bad_prompt": "Can you please i need to be able to delete my account", "good_prompt": "### New Feature Request: Add Account Deletion Functionality\n\n**User Story:**\nAs a user, I want to be able to permanently delete my account and all my data from the platform.\n\n**Feature Description:**\nAdd a 'Delete Account' button in the 'Account Settings' section of the user profile page. When clicked, this button should open a confirmation modal that warns the user that the action is irreversible. If the user confirms, the system should permanently delete the user's account and all associated data from the database.\n\n**Acceptance Criteria:**\n- A 'Delete Account' button is present in the user's settings.\n- Clicking the button shows a confirmation modal with a clear warning.\n- Confirming the deletion permanently removes the user's data.\n- The user is logged out and redirected to the homepage after deletion."}
{"bad_prompt": "We need to the api is slow", "good_prompt": "### Performance: Optimize the `/api/dashboard` Endpoint\n\n**Objective:**\nImprove the performance of the main dashboard API endpoint, which is currently taking over 2 seconds to load.\n\n**Bug Description:**\nThe GET request to `/api/dashboard` is very slow because it performs multiple, inefficient database queries to aggregate data.\n\n**Acceptance Criteria:**\n- Refactor the database queries in the `/api/dashboard` endpoint to be more efficient, for example, by using joins or a single, more complex query instead of multiple simple ones.\n- The average response time for the endpoint should be reduced to under 500ms.\n\n**Additional Context:**\nAn analysis of the queries shows that the main bottleneck is a loop that makes a separate database call for each user. This should be refactored into a single query."}
{"bad_prompt": "Could you tne api is timing out", "good_prompt": "### Bug Fix: API Gateway Timeout on `/api/reports` Endpoint\n\n**Bug Description:**\nRequests to the `/api/reports` endpoint are consistently failing with a 504 Gateway Timeout error, especially for large date ranges. This is preventing users from generating reports.\n\n**Steps to Reproduce:**\n1. Make a GET request to `/api/reports` with a date range of more than 90 days.\n2. Observe the 504 error response.\n\n**Expected Behavior:**\nThe API should successfully generate and return the report, even for large date ranges.\n\n**Actual Behavior:**\nThe request times out.\n\n**Additional Context:**\nThe report generation query is too slow and needs to be optimized. This process should also be moved to an asynchronous background job to avoid timeouts."}
{"bad_prompt": "Can you please i need to be able fo leave a review for a product", "good_prompt": "### New Feature Request: Implement Product Reviews\n\n**User Story:**\nAs a customer who has purchased a product, I want to be able to leave a review and a star rating so that I can share my feedback with other potential buyers.\n\n**Feature Description:**\nAdd a product review system. This should include:\n1. A form on each product page that allows verified purchasers to write a review and give a star rating (1-5).\n2. A section on the product page that displays all the reviews for that product, including the average star rating.\n\n**Acceptance Criteria:**\n- Only users who have purchased the product can leave a review.\n- The review form includes a star rating component and a text area for the review.\n- Submitted reviews are displayed on the product page.\n- The average star rating is calculated and displayed correctly."}
{"bad_prompt": "Can you please the form doesn't work", "good_prompt": "### Bug Fix: The Contact Form Submission Fails with a Network Error\n\n**Bug Description:**\nWhen a user fills out and submits the contact form on the `/contact` page, the submission fails, and a 'Network Error' message is displayed to the user.\n\n**Steps to Reproduce:**\n1. Go to the `/contact` page.\n2. Fill in all the required fields (Name, Email, Message).\n3. Click the 'Submit' button.\n4. Observe the error message that appears below the form.\n\n**Expected Behavior:**\nThe form should submit successfully, and a 'Thank you for your message!' confirmation should be displayed.\n\n**Actual Behavior:**\nThe form submission fails, and a red 'Network Error' message is shown."}
{"bad_prompt": "Could you i need to see my order history", "good_prompt": "### New Feature Request: Create an Order History Page\n\n**User Story:**\nAs a customer, I want to be able to see a list of my past orders so that I can track my purchases.\n\n**Feature Description:**\nCreate a new 'Order History' page that is accessible from the user's account dashboard. This page should display a list of all the orders the user has placed. Each item in the list should show the order date, the total amount, the order status, and a link to view the order details.\n\n**Acceptance Criteria:**\n- A new 'Order History' page is created at `/account/orders`.\n- The page displays a list of the logged-in user's past orders.\n- Each order in the list displays the date, total, and status.\n- Clicking on an order takes the user to a detailed order view page."}
{"bad_prompt": "the user oan't see the search bar", "good_prompt": "### Bug Fix: The Search Bar is Missing on Mobile Devices\n\n**Bug Description:**\nThe global search bar, which should be in the header, is not visible on mobile devices.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Observe the header.\n\n**Expected Behavior:**\nThe search bar should be visible or accessible through the mobile menu.\n\n**Actual Behavior:**\nThe search bar is not present.\n\n**Additional Context:**\nThe CSS for the header component is likely hiding the search bar on smaller screen sizes. This needs to be adjusted to make it accessible."}
{"bad_prompt": "We need to the form doesn't work", "good_prompt": "### Bug Fix: The Contact Form Submission Fails with a Network Error\n\n**Bug Description:**\nWhen a user fills out and submits the contact form on the `/contact` page, the submission fails, and a 'Network Error' message is displayed to the user.\n\n**Steps to Reproduce:**\n1. Go to the `/contact` page.\n2. Fill in all the required fields (Name, Email, Message).\n3. Click the 'Submit' button.\n4. Observe the error message that appears below the form.\n\n**Expected Behavior:**\nThe form should submit successfully, and a 'Thank you for your message!' confirmation should be displayed.\n\n**Actual Behavior:**\nThe form submission fails, and a red 'Network Error' message is shown."}
{"bad_prompt": "Could you the site is not reuponsive", "good_prompt": "### Bug Fix: The Pricing Page Layout Breaks on Tablet Screen Sizes\n\n**Bug Description:**\nThe layout of the pricing page does not adapt correctly to tablet screen sizes (between 768px and 1024px wide). The pricing cards overlap, and the text becomes unreadable.\n\n**Steps to Reproduce:**\n1. Open the `/pricing` page in a browser.\n2. Resize the browser window to a width between 768px and 1024px.\n3. Observe the layout of the pricing cards.\n\n**Expected Behavior:**\nThe pricing cards should stack vertically or be arranged in a clean grid that fits the screen size without overlapping.\n\n**Actual Behavior:**\nThe cards overlap, and the content is unreadable."}
{"bad_prompt": "the blog comments are not working", "good_prompt": "### Bug Fix: Submitting a Comment on a Blog Post Fails\n\n**Bug Description:**\nWhen a user tries to submit a comment on a blog post, the submission fails with a client-side JavaScript error. The error message in the console is `Uncaught TypeError: Cannot read properties of null (reading 'value')`.\n\n**Steps to Reproduce:**\n1. Go to any blog post page.\n2. Type a comment in the comment form.\n3. Click the 'Submit Comment' button.\n4. Observe the error in the browser's developer console.\n\n**Expected Behavior:**\nThe comment should be submitted successfully and appear on the page.\n\n**Actual Behavior:**\nThe submission fails, and a JavaScript error is thrown."}
{"bad_prompt": "rdd a link to the footer", "good_prompt": "### Content: Add 'About Us' Link to Site Footer\n\n**Objective:**\nAdd a link to the 'About Us' page in the footer of the website to improve navigation.\n\n**Acceptance Criteria:**\n- A new link with the text 'About Us' is present in the site footer.\n- The link correctly navigates to the `/about` page."}
{"bad_prompt": "We need to nved a search bar", "good_prompt": "### New Feature Request: Implement a Global Search Bar in the Header\n\n**User Story:**\nAs a user, I want a search bar that is always accessible in the header so that I can easily find articles from anywhere on the site.\n\n**Feature Description:**\nAdd a search input field to the right side of the main navigation header. This search bar should allow users to type a query and press Enter or click a search icon to navigate to a search results page.\n\n**Acceptance Criteria:**\n- A search input field and a search icon are visible in the site header.\n- Entering text and pressing Enter redirects the user to `/search?q=<query>`.\n- The search bar is responsive and displays correctly on all screen sizes."}
{"bad_prompt": "Can you please the user canzt filter by date", "good_prompt": "### New Feature Request: Add Date Range Filtering to the Orders Page\n\n**User Story:**\nAs a user, I want to be able to filter my order history by a date range so that I can find orders from a specific period.\n\n**Feature Description:**\nAdd a date range filter to the 'Order History' page. The filter should consist of two date input fields: 'Start Date' and 'End Date'. When the user selects a date range and clicks 'Apply', the list of orders should be filtered to show only the orders placed within that range.\n\n**Acceptance Criteria:**\n- 'Start Date' and 'End Date' input fields are present on the order history page.\n- The list of orders updates correctly when the date range filter is applied."}
{"bad_prompt": "the error pages are ugly", "good_prompt": "### UI Improvement: Create Custom Pages for 500 and 403 Errors\n\n**Objective:**\nImprove the user experience for error states by creating custom, branded pages for 500 (Internal Server Error) and 403 (Forbidden) errors.\n\n**Feature Description:**\nDesign and implement two new static pages:\n1. A custom 500 error page with a friendly message indicating that something went wrong on our end.\n2. A custom 403 error page with a message explaining that the user does not have permission to access the page.\nBoth pages should have a link to return to the homepage.\n\n**Acceptance Criteria:**\n- When a 500 error occurs on the server, the custom 500 page is displayed.\n- When a user tries to access a forbidden resource, the custom 403 page is displayed."}
{"bad_prompt": "tte search results page is ugly", "good_prompt": "### UI Improvement: Redesign the Search Results Page\n\n**Objective:**\nImprove the design and usability of the search results page to provide a better user experience.\n\n**Feature Description:**\nRedesign the `/search` page based on the new mockups. The new design should include:\n1. A cleaner layout for each search result item, with a clear title, a short snippet of the content, and the URL.\n2. Highlighting the user's search query within the search results.\n3. A more prominent display of the total number of results found.\n\n**Acceptance Criteria:**\n- The layout of the search results page matches the new design in Figma.\n- The user's search term is highlighted in the titles and snippets of the results.\n- The total number of results is displayed clearly at the top of the page.\n\n**Additional Context:**\nFigma mockups: [Link to Figma]"}
{"bad_prompt": "Can you please the product images are blurry", "good_prompt": "### Bug Fix: Product Images are Low Resolution and Blurry on High-Density Displays\n\n**Bug Description:**\nThe product images on the product detail pages appear blurry and pixelated on high-density (Retina) displays.\n\n**Steps to Reproduce:**\n1. View a product page on a high-density display (e.g., a MacBook Pro, a 4K monitor, or a modern smartphone).\n2. Observe the quality of the main product image.\n\n**Expected Behavior:**\nThe product image should be sharp and clear.\n\n**Actual Behavior:**\nThe image is blurry and low-quality.\n\n**Additional Context:**\nWe are likely serving images that are too small. We need to implement responsive images using the `srcset` attribute to serve higher-resolution images to devices with high-density displays."}
{"bad_prompt": "the user can't see the new hroduct", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "the user can't see their own posts", "good_prompt": "### Bug Fix: A User's Own Posts Are Not Appearing on Their Profile Page\n\n**Bug Description:**\nThe 'My Posts' section on a user's profile page is always empty, even when the user has created posts.\n\n**Steps to Reproduce:**\n1. Create a new post.\n2. Go to your own profile page.\n3. Observe the 'My Posts' section.\n\n**Expected Behavior:**\nThe 'My Posts' section should display a list of all the posts created by the logged-in user.\n\n**Actual Behavior:**\nThe section is empty.\n\n**Additional Context:**\nThe API endpoint that fetches the posts for the profile page is likely not correctly filtering the posts by the user's ID."}
{"bad_prompt": "Can you please the user can't see the settingx page", "good_prompt": "### Bug Fix: The 'Settings' Link in the User Dropdown is Broken\n\n**Bug Description:**\nThe 'Settings' link in the user dropdown menu (in the header) is broken.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the user's avatar in the header to open the dropdown.\n3. Click the 'Settings' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/account/settings` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "add a 4i4 page", "good_prompt": "### New Feature Request: Create a Custom 404 'Not Found' Page\n\n**Objective:**\nCreate a custom, user-friendly 404 'Not Found' page to improve the user experience when they navigate to a non-existent URL.\n\n**Feature Description:**\nDesign and implement a custom 404 page that replaces the default server/browser error. The page should have a friendly message, an illustration or graphic, and a clear link or button to return to the homepage.\n\n**Acceptance Criteria:**\n- Navigating to a URL that does not exist (e.g., `/a-fake-page`) displays the new custom 404 page.\n- The page includes a helpful message like 'Page Not Found'.\n- The page includes a prominent link or button that takes the user back to the homepage."}
{"bad_prompt": "Could you the api keys are visible in the code", "good_prompt": "### Security: Remove Hardcoded API Keys from the Frontend Code\n\n**Bug Description:**\nAPI keys for a third-party service are currently hardcoded directly in the frontend JavaScript code, making them publicly visible. This is a major security vulnerability.\n\n**Objective:**\nRemove the hardcoded API keys from the client-side code and move them to a secure backend environment.\n\n**Feature Description:**\n1. Create a new backend API endpoint (e.g., `/api/third-party-service`).\n2. Move the logic that calls the third-party service from the frontend to this new backend endpoint.\n3. Store the API keys securely as environment variables on the server.\n4. Update the frontend code to call our new backend endpoint instead of the third-party service directly.\n\n**Acceptance Criteria:**\n- The hardcoded API keys are completely removed from all frontend JavaScript files.\n- The functionality that relies on the third-party service still works correctly by going through our secure backend endpoint."}
{"bad_prompt": "Could you the deployment script is broken", "good_prompt": "### Bug Fix: The Production Deployment Script Fails During the Build Step\n\n**Bug Description:**\nThe production deployment script (`deploy.sh`) is failing with an error during the `npm run build` step. This is preventing us from deploying new updates to production.\n\n**Steps to Reproduce:**\n1. Run the deployment script locally: `./deploy.sh`\n2. Observe the output during the 'Building application...' step.\n\n**Expected Behavior:**\nThe `npm run build` command should complete successfully, and the script should proceed to the deployment step.\n\n**Actual Behavior:**\nThe script exits with a non-zero status code after an 'out of memory' error during the build process.\n\n**Additional Context:**\nThis issue started after we added the new data visualization library. We may need to increase the memory available to the Node.js process during the build."}
{"bad_prompt": "Can you please the user can't see the new product", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "Could you the site is not responsive", "good_prompt": "### Bug Fix: The Pricing Page Layout Breaks on Tablet Screen Sizes\n\n**Bug Description:**\nThe layout of the pricing page does not adapt correctly to tablet screen sizes (between 768px and 1024px wide). The pricing cards overlap, and the text becomes unreadable.\n\n**Steps to Reproduce:**\n1. Open the `/pricing` page in a browser.\n2. Resize the browser window to a width between 768px and 1024px.\n3. Observe the layout of the pricing cards.\n\n**Expected Behavior:**\nThe pricing cards should stack vertically or be arranged in a clean grid that fits the screen size without overlapping.\n\n**Actual Behavior:**\nThe cards overlap, and the content is unreadable."}
{"bad_prompt": "We need to i need to see my order history", "good_prompt": "### New Feature Request: Create an Order History Page\n\n**User Story:**\nAs a customer, I want to be able to see a list of my past orders so that I can track my purchases.\n\n**Feature Description:**\nCreate a new 'Order History' page that is accessible from the user's account dashboard. This page should display a list of all the orders the user has placed. Each item in the list should show the order date, the total amount, the order status, and a link to view the order details.\n\n**Acceptance Criteria:**\n- A new 'Order History' page is created at `/account/orders`.\n- The page displays a list of the logged-in user's past orders.\n- Each order in the list displays the date, total, and status.\n- Clicking on an order takes the user to a detailed order view page."}
{"bad_prompt": "Could you the user can't pay with paypal", "good_prompt": "### New Feature Request: Add PayPal as a Payment Option\n\n**User Story:**\nAs a customer, I want to be able to pay for my order using PayPal so that I can use my preferred payment method.\n\n**Feature Description:**\nIntegrate the PayPal payment gateway into our checkout process. The user should see a 'Pay with PayPal' button on the payment page. Clicking this button should initiate the PayPal checkout flow. After a successful payment, the user should be returned to our order confirmation page.\n\n**Acceptance Criteria:**\n- A 'Pay with PayPal' button is available on the checkout page.\n- The user can successfully complete a purchase using PayPal.\n- The order is marked as 'Paid' in our system after a successful PayPal transaction."}
{"bad_prompt": "the user can't see the robots.txt file", "good_prompt": "### SEO: Create a `robots.txt` File\n\n**Objective:**\nCreate a `robots.txt` file to provide instructions to web crawlers and bots about which pages on our site should or should not be crawled.\n\n**Feature Description:**\nCreate a `robots.txt` file in the root of the public directory. The initial configuration should allow all user agents to crawl the entire site and should point to our `sitemap.xml`.\n\n**Acceptance Criteria:**\n- A `robots.txt` file is accessible at the root of the website.\n- The file contains the following content:\n  ```\n  User-agent: *\n  Allow: /\n  Sitemap: https://www.our-site.com/sitemap.xml\n  ```"}
{"bad_prompt": "Can you please the user can't see their own comments", "good_prompt": "### Bug Fix: User's Own Comments Are Not Displayed Until After a Page Refresh\n\n**Bug Description:**\nWhen a user submits a comment on a blog post, their comment does not appear on the page immediately. They have to manually refresh the page to see it. This is a poor user experience.\n\n**Steps to Reproduce:**\n1. Go to a blog post.\n2. Submit a new comment.\n3. Observe the comment section.\n\n**Expected Behavior:**\nThe new comment should be added to the comment list on the page instantly, without requiring a refresh.\n\n**Actual Behavior:**\nThe comment list does not update.\n\n**Additional Context:**\nThe frontend application needs to update its state with the new comment after the submission API call is successful. The API should return the newly created comment object, which the frontend can then append to its list of comments."}
{"bad_prompt": "the site is not uskng a CDN", "good_prompt": "### Performance: Use a CDN to Serve Static Assets\n\n**Objective:**\nImprove the global loading performance of the website by serving all static assets (CSS, JavaScript, images) from a Content Delivery Network (CDN).\n\n**Feature Description:**\nConfigure the application's build process and server to serve all static assets from a CDN (e.g., Cloudflare, AWS CloudFront). This involves updating the asset URLs in the application's HTML to point to the CDN.\n\n**Acceptance Criteria:**\n- All CSS, JS, and image files are served from the CDN's domain, not our origin server.\n- The website loads correctly with the assets being served from the CDN.\n- The page load time for users in different geographic regions is significantly reduced."}
{"bad_prompt": "We need to the user caq't upload a file", "good_prompt": "### Bug Fix: File Upload Fails for Files Larger Than 10MB\n\n**Bug Description:**\nThe file upload functionality is failing for any file larger than 10MB. The upload starts but then fails with a 'Request Entity Too Large' error.\n\n**Steps to Reproduce:**\n1. Try to upload a file that is larger than 10MB.\n2. Observe the error message.\n\n**Expected Behavior:**\nThe user should be able to upload files up to the intended limit of 50MB.\n\n**Actual Behavior:**\nThe upload fails for files over 10MB.\n\n**Additional Context:**\nThe file size limit needs to be increased in the web server's configuration (e.g., in Nginx's `client_max_body_size` directive) and in the application's backend configuration."}
{"bad_prompt": "We need to the user can't log in with facibook", "good_prompt": "### Bug Fix: Facebook OAuth Login Fails with 'Invalid Scopes' Error\n\n**Bug Description:**\nWhen a user attempts to log in using the 'Login with Facebook' option, the process fails after they authorize the app. They are redirected back to our site with an error message indicating 'Invalid Scopes'.\n\n**Steps to Reproduce:**\n1. Go to the login page.\n2. Click 'Login with Facebook'.\n3. Authorize the application in the Facebook popup.\n\n**Expected Behavior:**\nThe user should be logged in successfully.\n\n**Actual Behavior:**\nThe user is redirected back with an error.\n\n**Additional Context:**\nThe scopes we are requesting in our OAuth call (e.g., `email`, `public_profile`) likely do not match the scopes that are enabled for our application in the Facebook Developer portal. The configurations need to be synchronized."}
{"bad_prompt": "Could you the user can't see the 500 page", "good_prompt": "### Bug Fix: The Custom 500 Page is Not Being Used\n\n**Bug Description:**\nWhen a server-side error occurs, the server's default 500 error page is shown instead of our custom-designed 500 page.\n\n**Steps to Reproduce:**\n1. Trigger a server-side error (e.g., by making an API call that is known to fail).\n\n**Expected Behavior:**\nOur custom 500 'Internal Server Error' page should be displayed.\n\n**Actual Behavior:**\nThe default server or browser 500 page is shown.\n\n**Additional Context:**\nThe application's error handling configuration needs to be updated to render our custom 500 page component when an unhandled server-side exception occurs."}
{"bad_prompt": "We need to the pagination is not working", "good_prompt": "### Bug Fix: Pagination on the Blog Page is Broken\n\n**Bug Description:**\nWhen a user clicks on the 'Next Page' or a page number link in the pagination control on the blog page, it does not navigate to the correct set of posts. It appears to be reloading the same first page of posts.\n\n**Steps to Reproduce:**\n1. Go to the `/blog` page.\n2. Scroll down to the bottom to find the pagination control.\n3. Click on page '2' or the 'Next Page' link.\n\n**Expected Behavior:**\nThe page should display the next set of blog posts (e.g., posts 11-20).\n\n**Actual Behavior:**\nThe page reloads but still shows the first set of posts (posts 1-10)."}
{"bad_prompt": "Could you the user session expires too quickly", "good_prompt": "### UX Improvement: Extend the User Session Lifetime\n\n**Objective:**\nImprove the user experience by extending the duration of a user's login session to reduce the frequency of them being logged out.\n\n**Feature Description:**\nIncrease the session lifetime from the current 1 hour to 30 days. This should be done by updating the session configuration on the server.\n\n**Acceptance Criteria:**\n- The user's login session should persist for 30 days of inactivity.\n- A user who logs in and returns to the site within 30 days should still be logged in."}
{"bad_prompt": "the deployhent script is broken", "good_prompt": "### Bug Fix: The Production Deployment Script Fails During the Build Step\n\n**Bug Description:**\nThe production deployment script (`deploy.sh`) is failing with an error during the `npm run build` step. This is preventing us from deploying new updates to production.\n\n**Steps to Reproduce:**\n1. Run the deployment script locally: `./deploy.sh`\n2. Observe the output during the 'Building application...' step.\n\n**Expected Behavior:**\nThe `npm run build` command should complete successfully, and the script should proceed to the deployment step.\n\n**Actual Behavior:**\nThe script exits with a non-zero status code after an 'out of memory' error during the build process.\n\n**Additional Context:**\nThis issue started after we added the new data visualization library. We may need to increase the memory available to the Node.js process during the build."}
{"bad_prompt": "Can you please the user can't see the new post", "good_prompt": "### Bug Fix: New Blog Posts Are Not Appearing on the Blog Listing Page\n\n**Bug Description:**\nWhen a new blog post is created and published, it does not appear on the main `/blog` listing page.\n\n**Steps to Reproduce:**\n1. Create and publish a new blog post via the CMS.\n2. Go to the `/blog` page.\n\n**Expected Behavior:**\nThe new blog post should appear at the top of the list.\n\n**Actual Behavior:**\nThe new post is not listed.\n\n**Additional Context:**\nThe API endpoint that fetches the list of blog posts is likely not being revalidated or is being cached too aggressively. We need to implement a revalidation strategy (e.g., Incremental Static Regeneration - ISR) to ensure the list is updated when new posts are published."}
{"bad_prompt": "the user can't see the new features", "good_prompt": "### Feature Flag: Enable New Dashboard Features for All Users\n\n**Objective:**\nRoll out the new dashboard features, which are currently behind a feature flag, to all users.\n\n**Feature Description:**\nRemove the feature flag that is currently hiding the new dashboard features. The new features should become visible to all users upon deployment.\n\n**Acceptance Criteria:**\n- The feature flag logic for the new dashboard is removed from the code.\n- All users can see and use the new dashboard features in the production environment after the next deployment."}
{"bad_prompt": "the user can't see the new product", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "the user can't see the contaot page", "good_prompt": "### Bug Fix: The 'Contact Us' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Contact Us' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Contact Us' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/contact` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Could you the user can't see the new product", "good_prompt": "### Bug Fix: New Products Are Not Appearing on the Products Page\n\n**Bug Description:**\nWhen a new product is added via the admin panel, it does not appear on the main `/products` listing page.\n\n**Steps to Reproduce:**\n1. Add a new product in the admin panel.\n2. Go to the `/products` page.\n\n**Expected Behavior:**\nThe new product should appear in the list.\n\n**Actual Behavior:**\nThe new product is not listed.\n\n**Additional Context:**\nSimilar to the blog issue, this is likely a caching or data revalidation problem with the API endpoint that serves the product list."}
{"bad_prompt": "Could you the back button is not working", "good_prompt": "### Bug Fix: The Browser's Back Button Does Not Work as Expected in the Single Page Application\n\n**Bug Description:**\nAfter navigating between a few pages within our Single Page Application (SPA), using the browser's back button does not take the user to the previously viewed page. Instead, it either does nothing or takes them out of the application entirely.\n\n**Steps to Reproduce:**\n1. Go to the homepage.\n2. Click a link to the '/about' page.\n3. Click a link to the '/contact' page.\n4. Click the browser's back button.\n\n**Expected Behavior:**\nThe user should be taken back to the '/about' page.\n\n**Actual Behavior:**\nThe URL might change, but the page content does not, or the user is taken to the page they were on before visiting our site.\n\n**Additional Context:**\nThis is likely an issue with our client-side router. We need to ensure that we are using the History API (`pushState`) correctly to create new entries in the browser's session history for each navigation."}
{"bad_prompt": "Can you please i need to be able to export my data", "good_prompt": "### New Feature Request: Allow Users to Export Their Data\n\n**User Story:**\nAs a user, I want to be able to export all my data in a machine-readable format (like JSON) to comply with data portability regulations (like GDPR).\n\n**Feature Description:**\nAdd a new 'Export Data' section to the user's account settings page. This section should have a button that allows the user to request a full export of their data. The export process should run in the background, and the user should be notified by email when their export file is ready to be downloaded.\n\n**Acceptance Criteria:**\n- A 'Request Data Export' button is available in the account settings.\n- Clicking the button triggers an asynchronous job to generate the export.\n- The user receives an email with a secure link to download their data as a JSON file."}
{"bad_prompt": "the contact form has no spam protection", "good_prompt": "### Security: Add Spam Protection to the Contact Form\n\n**Objective:**\nProtect the contact form from spam submissions by implementing a CAPTCHA service.\n\n**Feature Description:**\nIntegrate a CAPTCHA service (like Google reCAPTCHA or hCaptcha) into the contact form. The user must successfully complete the CAPTCHA challenge before the form can be submitted.\n\n**Acceptance Criteria:**\n- A CAPTCHA widget is present on the contact form.\n- The form cannot be submitted unless the CAPTCHA is successfully validated on the server-side."}
{"bad_prompt": "Could you the user can't filter by date", "good_prompt": "### New Feature Request: Add Date Range Filtering to the Orders Page\n\n**User Story:**\nAs a user, I want to be able to filter my order history by a date range so that I can find orders from a specific period.\n\n**Feature Description:**\nAdd a date range filter to the 'Order History' page. The filter should consist of two date input fields: 'Start Date' and 'End Date'. When the user selects a date range and clicks 'Apply', the list of orders should be filtered to show only the orders placed within that range.\n\n**Acceptance Criteria:**\n- 'Start Date' and 'End Date' input fields are present on the order history page.\n- The list of orders updates correctly when the date range filter is applied."}
{"bad_prompt": "the user can't see the cookie policy", "good_prompt": "### Bug Fix: The 'Cookie Policy' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Cookie Policy' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Cookie Policy' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/cookie-policy` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't filter by dape", "good_prompt": "### New Feature Request: Add Date Range Filtering to the Orders Page\n\n**User Story:**\nAs a user, I want to be able to filter my order history by a date range so that I can find orders from a specific period.\n\n**Feature Description:**\nAdd a date range filter to the 'Order History' page. The filter should consist of two date input fields: 'Start Date' and 'End Date'. When the user selects a date range and clicks 'Apply', the list of orders should be filtered to show only the orders placed within that range.\n\n**Acceptance Criteria:**\n- 'Start Date' and 'End Date' input fields are present on the order history page.\n- The list of orders updates correctly when the date range filter is applied."}
{"bad_prompt": "Could you the user can't see the press page", "good_prompt": "### Bug Fix: The 'Press' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Press' link in the website footer is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Press' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/press` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "We need to the api is not logging errors", "good_prompt": "### Observability: Add Error Logging to the API\n\n**Objective:**\nImprove our ability to debug issues by adding structured error logging to the API.\n\n**Feature Description:**\nIntegrate a logging library (like Winston or Pino) into the API. All caught errors in the API endpoints should be logged in a structured JSON format. The logs should include a timestamp, error message, stack trace, and request ID.\n\n**Acceptance Criteria:**\n- All API errors are logged to the console or a log file in JSON format.\n- The logs contain all the required fields (timestamp, message, stack trace, request ID)."}
{"bad_prompt": "Could you the site is not accessible", "good_prompt": "### Accessibility: Ensure All Images Have Alt Text\n\n**Objective:**\nImprove the accessibility of the website by ensuring that all `<img>` tags have descriptive `alt` attributes. This is crucial for users who use screen readers.\n\n**Acceptance Criteria:**\n- Perform a site-wide audit to identify all `<img>` tags that are missing an `alt` attribute or have a non-descriptive one (e.g., `alt=\"image\"`).\n- For each image, add a descriptive `alt` attribute that accurately describes the content of the image.\n- For purely decorative images, use an empty `alt` attribute (`alt=\"\"`).\n- Run an accessibility checker tool (like WAVE or Axe) to verify that all images have appropriate alt text."}
{"bad_prompt": "Could you i can't unsubscribe from the newsletter", "good_prompt": "### Bug Fix: The 'Unsubscribe' Link in Emails is Not Working\n\n**Bug Description:**\nWhen a user clicks the 'Unsubscribe' link in a marketing email, it leads to a 404 Not Found page. The unsubscribe functionality is completely broken.\n\n**Steps to Reproduce:**\n1. Receive a marketing email from our system.\n2. Click the 'Unsubscribe' link at the bottom of the email.\n\n**Expected Behavior:**\nThe user should be taken to a page where they can confirm that they want to unsubscribe from the newsletter.\n\n**Actual Behavior:**\nThe link leads to a 404 page.\n\n**Additional Context:**\nThe URL for the unsubscribe link being generated in our email templates is incorrect. The template needs to be updated with the correct URL for the unsubscribe page."}
{"bad_prompt": "Can you please the user can't jee the header", "good_prompt": "### Bug Fix: The Website Header is Missing on the Login Page\n\n**Bug Description:**\nThe main website header, which contains the logo and navigation, is missing on the login page.\n\n**Steps to Reproduce:**\n1. Navigate to the `/login` page.\n\n**Expected Behavior:**\nThe website header should be visible at the top of the page.\n\n**Actual Behavior:**\nThe header is missing.\n\n**Additional Context:**\nThe page template for the login page is likely using a different layout that excludes the main header component."}
{"bad_prompt": "Can you please the stock status is wrong", "good_prompt": "### Bug Fix: Product Stock Status is Not Updating Correctly\n\n**Bug Description:**\nWhen a product goes out of stock, its status on the product page still shows as 'In Stock'. The stock level is not being updated in real-time.\n\n**Steps to Reproduce:**\n1. Manually set the stock level of a product to 0 in the database.\n2. View that product's page on the website.\n\n**Expected Behavior:**\nThe product page should display an 'Out of Stock' message, and the 'Add to Cart' button should be disabled.\n\n**Actual Behavior:**\nThe product page still shows 'In Stock', and the user can add it to the cart.\n\n**Additional Context:**\nThere may be a caching issue with the product data API, or the frontend is not correctly re-validating the data."}
{"bad_prompt": "We need to the dropdown is not working on mobile", "good_prompt": "### Bug Fix: The Main Navigation Dropdown Menu is Not Clickable on Mobile\n\n**Bug Description:**\nThe dropdown menu in the main navigation bar cannot be opened on mobile devices (touch screens). Tapping on the menu item does nothing.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device or a browser in mobile emulation mode.\n2. Tap on the 'Services' navigation item, which is supposed to have a dropdown menu.\n\n**Expected Behavior:**\nA dropdown menu should appear, showing the sub-pages.\n\n**Actual Behavior:**\nNothing happens when the navigation item is tapped."}
{"bad_prompt": "the user data export is not working", "good_prompt": "### Bug Fix: The User Data Export Feature is Timing Out\n\n**Bug Description:**\nWhen a user requests to export their data, the process times out and fails for users with a large amount of data. The server returns a 504 Gateway Timeout error.\n\n**Steps to Reproduce:**\n1. Log in as a user with a large amount of data (e.g., user ID 456).\n2. Go to the 'Export Data' page in the account settings.\n3. Click the 'Export My Data' button.\n\n**Expected Behavior:**\nThe system should generate a data export file and provide a download link to the user, even for large accounts.\n\n**Actual Behavior:**\nThe request hangs for a long time and then fails with a 504 error.\n\n**Additional Context:**\nThe data export process is currently running as a synchronous web request. This should be refactored into an asynchronous background job. The user should be notified (e.g., by email) when their export is ready for download."}
{"bad_prompt": "the user can't see the home page", "good_prompt": "### Bug Fix: The Site Logo Link to the Homepage is Broken\n\n**Bug Description:**\nClicking the site logo in the header, which should take the user to the homepage, is not working correctly.\n\n**Steps to Reproduce:**\n1. Navigate to any page other than the homepage (e.g., `/about`).\n2. Click the main site logo in the header.\n\n**Expected Behavior:**\nThe user should be taken back to the homepage (`/`).\n\n**Actual Behavior:**\nNothing happens, or the link points to an incorrect URL."}
{"bad_prompt": "Could you the user can't see the images", "good_prompt": "### Bug Fix: Images Not Loading Due to CORS Policy Error\n\n**Bug Description:**\nImages that are hosted on our separate CDN domain are not loading on the website. The browser's developer console shows a Cross-Origin Resource Sharing (CORS) policy error.\n\n**Steps to Reproduce:**\n1. Go to the homepage.\n2. Observe that the main hero image is missing.\n3. Check the browser's developer console for errors.\n\n**Expected Behavior:**\nAll images should load correctly.\n\n**Actual Behavior:**\nImages are blocked by the browser due to a CORS error.\n\n**Additional Context:**\nThe CDN server needs to be configured to send the correct CORS headers, specifically `Access-Control-Allow-Origin: https://www.our-site.com`."}
{"bad_prompt": "make the site faster", "good_prompt": "### Performance: Implement Server-Side Caching for API Responses\n\n**Objective:**\nImprove the response time of the API by implementing a caching layer for frequently accessed, non-dynamic data.\n\n**Feature Description:**\nImplement a caching strategy (e.g., using Redis) for the `/api/products` endpoint. The data from this endpoint is the same for all users and only updates once per day. The cache should store the JSON response for this endpoint.\n\n**Acceptance Criteria:**\n- When the `/api/products` endpoint is called for the first time, it should fetch data from the database and store the result in the Redis cache with a 24-hour expiration.\n- Subsequent calls to the endpoint within 24 hours should return the cached data directly, without hitting the database.\n- The average response time for the endpoint should be reduced by at least 80% for cached responses."}
{"bad_prompt": "Can you please the user can't see lhe contact page", "good_prompt": "### Bug Fix: The 'Contact Us' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Contact Us' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Contact Us' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/contact` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the user can't see the blog page", "good_prompt": "### Bug Fix: The 'Blog' Link in the Header is Broken\n\n**Bug Description:**\nThe 'Blog' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'Blog' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/blog` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "Could you the usfr can't see the privacy policy", "good_prompt": "### Bug Fix: The 'Privacy Policy' Link in the Footer is Broken\n\n**Bug Description:**\nThe 'Privacy Policy' link in the website footer is pointing to an incorrect URL.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Scroll to the footer.\n3. Click the 'Privacy Policy' link.\n\n**Expected Behavior:**\nThe user should be taken to the `/privacy-policy` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the docker build fails", "good_prompt": "### Bug Fix: The Docker build is failing\n\n**Bug Description:**\nThe `docker build` command is failing when trying to build the image for our application. The error message indicates that a file specified in the `COPY` command in the `Dockerfile` cannot be found.\n\n**Steps to Reproduce:**\n1. Run `docker build -t my-app .` in the root of the project.\n2. Observe the error message during the build process.\n\n**Expected Behavior:**\nThe Docker image should build successfully without any errors.\n\n**Actual Behavior:**\nThe build fails with an error like `COPY failed: stat /var/lib/docker/tmp/docker-builder12345/src/app/package.json: no such file or directory`.\n\n**Additional Context:**\nThis seems to be an issue with the file path in the `COPY` command in the `Dockerfile`. It likely needs to be adjusted to match the project's directory structure."}
{"bad_prompt": "Can you please the password reset tmken expires too fast", "good_prompt": "### UX Improvement: Extend the Password Reset Token Expiration Time\n\n**Objective:**\nImprove the user experience for the password reset flow by extending the validity period of the password reset token.\n\n**Feature Description:**\nIncrease the expiration time for password reset tokens from the current 15 minutes to 1 hour. This change should be made in the authentication service's configuration.\n\n**Acceptance Criteria:**\n- A password reset link sent to a user's email should remain valid for 1 hour.\n- Attempting to use the link after 1 hour should result in a user-friendly error message indicating that the token has expired."}
{"bad_prompt": "the user can't change their password", "good_prompt": "### Bug Fix: The 'Change Password' Functionality is Not Working\n\n**Bug Description:**\nWhen a user tries to change their password in their account settings, the operation fails with a generic 'An error occurred' message.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Go to the 'Account Settings' page.\n3. Enter the current password and a new password.\n4. Click 'Change Password'.\n\n**Expected Behavior:**\nThe user's password should be updated successfully.\n\n**Actual Behavior:**\nAn error message is displayed, and the password is not changed.\n\n**Additional Context:**\nThe server logs show that the 'current password' check is failing because it is being compared incorrectly. The password hashing logic needs to be reviewed."}
{"bad_prompt": "We need to i need to be able to share blog posts on social media", "good_prompt": "### New Feature Request: Add Social Media Sharing Buttons to Blog Posts\n\n**User Story:**\nAs a reader, I want to be able to easily share a blog post on social media so that I can share it with my friends and followers.\n\n**Feature Description:**\nAdd social media sharing buttons to each blog post page. The buttons should allow users to share the post on Twitter, Facebook, and LinkedIn. The sharing action should pre-fill the post with the blog post's title and a link to the page.\n\n**Acceptance Criteria:**\n- Sharing buttons for Twitter, Facebook, and LinkedIn are present on each blog post page.\n- Clicking the Twitter button opens a new window with a pre-filled tweet containing the post title and URL.\n- Clicking the Facebook button opens a new window to share the URL.\n- Clicking the LinkedIn button opens a new window to share the URL."}
{"bad_prompt": "We need to the site needs a careers page", "good_prompt": "### Content: Create a 'Careers' Page\n\n**Objective:**\nCreate a new 'Careers' page to list open job positions and attract potential candidates.\n\n**Feature Description:**\nCreate a new static page at `/careers`. The page should have an introduction about working at our company and a section that lists all the currently open job positions. The list of jobs can be hardcoded for now, or it can be integrated with our applicant tracking system (ATS) if an API is available.\n\n**Acceptance Criteria:**\n- A new page is created at `/careers`.\n- The page lists all open job positions with a title, location, and a link to apply."}
{"bad_prompt": "We need to the uner can't log out", "good_prompt": "### Bug Fix: The 'Logout' Button is Not Working\n\n**Bug Description:**\nClicking the 'Logout' button does not log the user out. The user remains logged in.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Click the 'Logout' button in the header.\n\n**Expected Behavior:**\nThe user should be logged out and redirected to the login page.\n\n**Actual Behavior:**\nNothing happens. The user remains logged in.\n\n**Additional Context:**\nThe click handler for the logout button is not correctly clearing the user's session from local storage and is not calling the backend API to invalidate the session token."}
{"bad_prompt": "the user can create a duplicate account", "good_prompt": "### Bug Fix: A User Can Create Multiple Accounts with the Same Email Address\n\n**Bug Description:**\nThe registration system allows multiple user accounts to be created with the exact same email address. This should not be possible, as the email address should be a unique identifier.\n\n**Steps to Reproduce:**\n1. Register a new account with the email 'test@example.com'.\n2. Log out.\n3. Register another new account, again using the email 'test@example.com'.\n\n**Expected Behavior:**\nThe second registration attempt should fail with an error message indicating that the email address is already in use.\n\n**Actual Behavior:**\nA second account is created successfully.\n\n**Additional Context:**\nA unique constraint needs to be added to the `email` column in the `users` database table. The application's registration logic should also be updated to check if an email already exists before creating a new user."}
{"bad_prompt": "Can you please the tests are foiling", "good_prompt": "### Bug Fix: Resolve Failing Unit Tests in the CI Pipeline\n\n**Bug Description:**\nThe unit tests are currently failing in the Continuous Integration (CI) pipeline, which is preventing new changes from being merged. The failure appears to be in the `test_user_model.py` file.\n\n**Steps to Reproduce:**\n1. Push a new commit to any branch.\n2. Observe the CI pipeline status in GitHub Actions.\n3. See the failure in the 'Run Tests' step.\n\n**Expected Behavior:**\nAll unit tests should pass, and the CI pipeline should be green.\n\n**Actual Behavior:**\nThe 'Run Tests' step fails with an error related to a mock object in `test_user_model.py`.\n\n**Additional Context:**\nThe failure started after the `auth-library` dependency was updated. The logs from the CI run can be found here: [Link to CI logs]"}
{"bad_prompt": "We need to the user cantt see their own profile picture", "good_prompt": "### Bug Fix: User's Own Profile Picture is Not Displayed on Their Profile Page\n\n**Bug Description:**\nWhile the user's avatar is displayed correctly in the header, their full-size profile picture is not appearing on their own profile page. A placeholder image is shown instead.\n\n**Steps to Reproduce:**\n1. Log in to the application.\n2. Navigate to your own profile page.\n\n**Expected Behavior:**\nThe user's full-size profile picture should be displayed.\n\n**Actual Behavior:**\nA placeholder image is shown.\n\n**Additional Context:**\nThe component responsible for rendering the profile page is likely fetching the user data but is not correctly accessing the `profile_picture_url` attribute."}
{"bad_prompt": "the user can't see the footex", "good_prompt": "### Bug Fix: The Website Footer is Missing on Some Pages\n\n**Bug Description:**\nThe main website footer is not being displayed on certain pages, specifically the blog post detail pages.\n\n**Steps to Reproduce:**\n1. Navigate to any blog post detail page.\n2. Scroll to the bottom of the page.\n\n**Expected Behavior:**\nThe website footer should be visible.\n\n**Actual Behavior:**\nThe footer is missing.\n\n**Additional Context:**\nThe page template for blog posts is likely missing the component that renders the footer."}
{"bad_prompt": "the login with google is broken", "good_prompt": "### Bug Fix: 'Login with Google' OAuth Flow Fails with a Redirect URI Mismatch Error\n\n**Bug Description:**\nWhen a user tries to log in using the 'Login with Google' button, the OAuth flow fails, and the user is redirected to an error page from Google that says 'redirect_uri_mismatch'.\n\n**Steps to Reproduce:**\n1. Go to the login page.\n2. Click the 'Login with Google' button.\n3. Observe the error page from Google.\n\n**Expected Behavior:**\nThe user should be successfully authenticated with their Google account and redirected back to the application's dashboard.\n\n**Actual Behavior:**\nThe authentication fails with a 'redirect_uri_mismatch' error.\n\n**Additional Context:**\nThis usually means that the redirect URI configured in our Google Cloud Console for the OAuth client does not match the one our application is sending. We need to verify the URIs in the Google Cloud Console."}
{"bad_prompt": "Could you it's broken", "good_prompt": "### Bug Fix: API Endpoint `api/users/{id}` Throws a 500 Error\n\n**Bug Description:**\nThe API endpoint responsible for fetching a single user's data is consistently returning a 500 Internal Server Error when a valid user ID is provided.\n\n**Steps to Reproduce:**\n1. Send a GET request to the endpoint `/api/users/123` (where 123 is a valid user ID).\n2. Observe the HTTP response code.\n\n**Expected Behavior:**\nThe API should return a 200 OK status code with the user's data in the response body.\n\n**Actual Behavior:**\nThe API returns a 500 Internal Server Error."}
{"bad_prompt": "We need to the user can't see the new category", "good_prompt": "### Bug Fix: New Product Categories Are Not Appearing in the Filter Sidebar\n\n**Bug Description:**\nWhen a new product category is created in the admin panel, it does not appear in the list of filterable categories on the products page sidebar.\n\n**Steps to Reproduce:**\n1. Create a new product category in the admin panel.\n2. Go to the `/products` page.\n3. Observe the filter sidebar.\n\n**Expected Behavior:**\nThe new category should be listed as a filter option.\n\n**Actual Behavior:**\nThe new category is missing."}
{"bad_prompt": "Could you i need to be able to filter the products", "good_prompt": "### New Feature Request: Add Filtering to the Products Page\n\n**User Story:**\nAs a user, I want to be able to filter the products by category and price so that I can find what I'm looking for more easily.\n\n**Feature Description:**\nAdd a filtering sidebar to the products page. This sidebar should contain:\n1. A list of product categories (as checkboxes).\n2. A price range slider.\nWhen a user applies a filter, the list of products on the page should update to show only the products that match the selected criteria.\n\n**Acceptance Criteria:**\n- A filtering sidebar is present on the products page.\n- Users can filter products by selecting one or more categories.\n- Users can filter products by adjusting the price range slider.\n- The product list updates in real-time as the filters are changed."}
{"bad_prompt": "the user can't update their username", "good_prompt": "### Bug Fix: Updating Username Fails with a 'Permission Denied' Error\n\n**Bug Description:**\nWhen a user tries to update their username on their profile page, the operation fails with a 'Permission Denied' error, even though they are logged in and editing their own profile.\n\n**Steps to Reproduce:**\n1. Log in as any user.\n2. Go to the profile page.\n3. Try to change the username.\n4. Click 'Save'.\n\n**Expected Behavior:**\nThe username should be updated successfully.\n\n**Actual Behavior:**\nA 'Permission Denied' error is shown.\n\n**Additional Context:**\nThe API endpoint that handles the profile update is likely checking for an 'admin' role, but it should be allowing any authenticated user to update their own data. The authorization logic for this endpoint needs to be reviewed."}
{"bad_prompt": "Can you please i can't unsubscribe from the newsletter", "good_prompt": "### Bug Fix: The 'Unsubscribe' Link in Emails is Not Working\n\n**Bug Description:**\nWhen a user clicks the 'Unsubscribe' link in a marketing email, it leads to a 404 Not Found page. The unsubscribe functionality is completely broken.\n\n**Steps to Reproduce:**\n1. Receive a marketing email from our system.\n2. Click the 'Unsubscribe' link at the bottom of the email.\n\n**Expected Behavior:**\nThe user should be taken to a page where they can confirm that they want to unsubscribe from the newsletter.\n\n**Actual Behavior:**\nThe link leads to a 404 page.\n\n**Additional Context:**\nThe URL for the unsubscribe link being generated in our email templates is incorrect. The template needs to be updated with the correct URL for the unsubscribe page."}
{"bad_prompt": "the breadcrumbs are wrong", "good_prompt": "### Bug Fix: Breadcrumb Navigation Shows Incorrect Path\n\n**Bug Description:**\nThe breadcrumb navigation component is showing an incorrect path on nested product category pages. For example, on a page for 'Laptops' within 'Electronics', the breadcrumb only shows 'Home > Laptops', omitting 'Electronics'.\n\n**Steps to Reproduce:**\n1. Navigate to a nested category page, e.g., 'Home > Electronics > Laptops'.\n2. Observe the breadcrumb trail at the top of the page.\n\n**Expected Behavior:**\nThe breadcrumb should show the full path: `Home > Electronics > Laptops`.\n\n**Actual Behavior:**\nThe breadcrumb shows an incomplete path: `Home > Laptops`."}
{"bad_prompt": "We need to the api is not logging eerors", "good_prompt": "### Observability: Add Error Logging to the API\n\n**Objective:**\nImprove our ability to debug issues by adding structured error logging to the API.\n\n**Feature Description:**\nIntegrate a logging library (like Winston or Pino) into the API. All caught errors in the API endpoints should be logged in a structured JSON format. The logs should include a timestamp, error message, stack trace, and request ID.\n\n**Acceptance Criteria:**\n- All API errors are logged to the console or a log file in JSON format.\n- The logs contain all the required fields (timestamp, message, stack trace, request ID)."}
{"bad_prompt": "implement analytics", "good_prompt": "### New Feature Request: Integrate Plausible Analytics into the Website\n\n**Objective:**\nIntegrate the Plausible Analytics script into the website to track user traffic and engagement.\n\n**Feature Description:**\nAdd the Plausible Analytics tracking script to the `<head>` section of all pages on the website. The tracking script should be loaded asynchronously to avoid impacting page performance.\n\n**Acceptance Criteria:**\n- The Plausible script is present on all pages.\n- Page views are being correctly reported in our Plausible Analytics dashboard.\n- The script does not cause any console errors.\n\n**Additional Context:**\nThe tracking script and data-domain can be found in our company's shared password manager under 'Plausible Analytics'."}
{"bad_prompt": "the dates are in the wrong format", "good_prompt": "### Bug Fix: Dates Are Displayed in the Wrong Format\n\n**Bug Description:**\nThroughout the application, dates are being displayed in the `YYYY-MM-DD` format (e.g., '2023-10-27'). The requirement is to display them in a more user-friendly format, `Month Day, Year` (e.g., 'October 27, 2023').\n\n**Acceptance Criteria:**\n- All user-facing dates (e.g., blog post dates, order dates, comment dates) should be displayed in the `Month Day, Year` format.\n- This should be implemented by creating a reusable date formatting utility function to ensure consistency.\n- The change should be applied to all relevant components."}
{"bad_prompt": "Can you please it's broken", "good_prompt": "### Bug Fix: API Endpoint `api/users/{id}` Throws a 500 Error\n\n**Bug Description:**\nThe API endpoint responsible for fetching a single user's data is consistently returning a 500 Internal Server Error when a valid user ID is provided.\n\n**Steps to Reproduce:**\n1. Send a GET request to the endpoint `/api/users/123` (where 123 is a valid user ID).\n2. Observe the HTTP response code.\n\n**Expected Behavior:**\nThe API should return a 200 OK status code with the user's data in the response body.\n\n**Actual Behavior:**\nThe API returns a 500 Internal Server Error."}
{"bad_prompt": "khe api is slow", "good_prompt": "### Performance: Optimize the `/api/dashboard` Endpoint\n\n**Objective:**\nImprove the performance of the main dashboard API endpoint, which is currently taking over 2 seconds to load.\n\n**Bug Description:**\nThe GET request to `/api/dashboard` is very slow because it performs multiple, inefficient database queries to aggregate data.\n\n**Acceptance Criteria:**\n- Refactor the database queries in the `/api/dashboard` endpoint to be more efficient, for example, by using joins or a single, more complex query instead of multiple simple ones.\n- The average response time for the endpoint should be reduced to under 500ms.\n\n**Additional Context:**\nAn analysis of the queries shows that the main bottleneck is a loop that makes a separate database call for each user. This should be refactored into a single query."}
{"bad_prompt": "the site is not updating", "good_prompt": "### Bug Fix: Content Changes from the CMS are Not Appearing on the Website\n\n**Bug Description:**\nWhen content is updated in our Headless CMS (e.g., Contentful, Strapi), the changes are not being reflected on the live website, even after a long wait. This suggests an issue with our build process or caching.\n\n**Steps to Reproduce:**\n1. Update the title of the homepage in the CMS.\n2. Save and publish the changes in the CMS.\n3. Visit the homepage of the live website.\n\n**Expected Behavior:**\nThe homepage should display the new, updated title.\n\n**Actual Behavior:**\nThe old title is still being displayed.\n\n**Additional Context:**\nThis could be caused by a few things:\n1. The webhook from the CMS to our build server is not firing or is misconfigured.\n2. The build server is not correctly re-building the site when it receives the webhook.\n3. An aggressive caching layer (e.g., at the CDN) is serving stale content. We need to investigate the build logs and cache settings."}
{"bad_prompt": "Could you the user can't see the home page", "good_prompt": "### Bug Fix: The Site Logo Link to the Homepage is Broken\n\n**Bug Description:**\nClicking the site logo in the header, which should take the user to the homepage, is not working correctly.\n\n**Steps to Reproduce:**\n1. Navigate to any page other than the homepage (e.g., `/about`).\n2. Click the main site logo in the header.\n\n**Expected Behavior:**\nThe user should be taken back to the homepage (`/`).\n\n**Actual Behavior:**\nNothing happens, or the link points to an incorrect URL."}
{"bad_prompt": "We need to the breadcrumbs are wrong", "good_prompt": "### Bug Fix: Breadcrumb Navigation Shows Incorrect Path\n\n**Bug Description:**\nThe breadcrumb navigation component is showing an incorrect path on nested product category pages. For example, on a page for 'Laptops' within 'Electronics', the breadcrumb only shows 'Home > Laptops', omitting 'Electronics'.\n\n**Steps to Reproduce:**\n1. Navigate to a nested category page, e.g., 'Home > Electronics > Laptops'.\n2. Observe the breadcrumb trail at the top of the page.\n\n**Expected Behavior:**\nThe breadcrumb should show the full path: `Home > Electronics > Laptops`.\n\n**Actual Behavior:**\nThe breadcrumb shows an incomplete path: `Home > Laptops`."}
{"bad_prompt": "the form is not validabing", "good_prompt": "### Bug Fix: The Registration Form is Not Validating the Email Address Correctly\n\n**Bug Description:**\nThe user registration form allows users to submit an email address without a valid format (e.g., 'user@domain' instead of 'user@domain.com'). This leads to invalid data in our system.\n\n**Steps to Reproduce:**\n1. Go to the registration page.\n2. Enter a password.\n3. Enter an invalid email address like 'test'.\n4. Click the 'Register' button.\n\n**Expected Behavior:**\nThe form should display a validation error message indicating that the email address is not valid, and the form should not be submitted.\n\n**Actual Behavior:**\nThe form submits successfully with the invalid email address."}
{"bad_prompt": "the rss feed is broken", "good_prompt": "### Bug Fix: The RSS Feed is Not Valid XML\n\n**Bug Description:**\nThe RSS feed at `/rss.xml` is not working correctly because it is not generating valid XML. When trying to use the feed with an RSS reader, it fails with a parsing error.\n\n**Steps to Reproduce:**\n1. Go to `/rss.xml` in a browser or use a validator tool.\n2. Observe the XML parsing error.\n\n**Expected Behavior:**\nThe `/rss.xml` endpoint should return a valid RSS feed in the correct XML format.\n\n**Actual Behavior:**\nThe feed is malformed, likely due to unescaped characters in the content or an incorrect structure."}
{"bad_prompt": "the user can't see the footez", "good_prompt": "### Bug Fix: The Website Footer is Missing on Some Pages\n\n**Bug Description:**\nThe main website footer is not being displayed on certain pages, specifically the blog post detail pages.\n\n**Steps to Reproduce:**\n1. Navigate to any blog post detail page.\n2. Scroll to the bottom of the page.\n\n**Expected Behavior:**\nThe website footer should be visible.\n\n**Actual Behavior:**\nThe footer is missing.\n\n**Additional Context:**\nThe page template for blog posts is likely missing the component that renders the footer."}
{"bad_prompt": "We need to the user can't see the search bar", "good_prompt": "### Bug Fix: The Search Bar is Missing on Mobile Devices\n\n**Bug Description:**\nThe global search bar, which should be in the header, is not visible on mobile devices.\n\n**Steps to Reproduce:**\n1. Open the website on a mobile device.\n2. Observe the header.\n\n**Expected Behavior:**\nThe search bar should be visible or accessible through the mobile menu.\n\n**Actual Behavior:**\nThe search bar is not present.\n\n**Additional Context:**\nThe CSS for the header component is likely hiding the search bar on smaller screen sizes. This needs to be adjusted to make it accessible."}
{"bad_prompt": "the api is timing but", "good_prompt": "### Bug Fix: API Gateway Timeout on `/api/reports` Endpoint\n\n**Bug Description:**\nRequests to the `/api/reports` endpoint are consistently failing with a 504 Gateway Timeout error, especially for large date ranges. This is preventing users from generating reports.\n\n**Steps to Reproduce:**\n1. Make a GET request to `/api/reports` with a date range of more than 90 days.\n2. Observe the 504 error response.\n\n**Expected Behavior:**\nThe API should successfully generate and return the report, even for large date ranges.\n\n**Actual Behavior:**\nThe request times out.\n\n**Additional Context:**\nThe report generation query is too slow and needs to be optimized. This process should also be moved to an asynchronous background job to avoid timeouts."}
{"bad_prompt": "the user session expires too quickly", "good_prompt": "### UX Improvement: Extend the User Session Lifetime\n\n**Objective:**\nImprove the user experience by extending the duration of a user's login session to reduce the frequency of them being logged out.\n\n**Feature Description:**\nIncrease the session lifetime from the current 1 hour to 30 days. This should be done by updating the session configuration on the server.\n\n**Acceptance Criteria:**\n- The user's login session should persist for 30 days of inactivity.\n- A user who logs in and returns to the site within 30 days should still be logged in."}
{"bad_prompt": "the site map is out oy date", "good_prompt": "### Bug Fix: The `sitemap.xml` is Not Being Updated with New Pages\n\n**Bug Description:**\nThe `sitemap.xml` file is not being updated automatically when new blog posts or product pages are created. It is static and out of date, which is bad for SEO.\n\n**Steps to Reproduce:**\n1. Create a new blog post.\n2. After the site has been rebuilt, view the `sitemap.xml` file.\n\n**Expected Behavior:**\nThe `sitemap.xml` file should contain a URL for the newly created blog post.\n\n**Actual Behavior:**\nThe new blog post's URL is missing from the sitemap.\n\n**Additional Context:**\nThe script that generates the sitemap is likely not correctly fetching the list of all dynamic pages. It needs to be updated to query the database for all published posts and products during the build process."}
{"bad_prompt": "the user can't update their emaij", "good_prompt": "### Bug Fix: Changing Email Address Fails\n\n**Bug Description:**\nWhen a user tries to change their email address in their profile settings, it fails with an error message 'This email is already taken', even when the new email address is unique.\n\n**Steps to Reproduce:**\n1. Go to the user profile page.\n2. Click 'Edit' next to the email address.\n3. Enter a new, unique email address.\n4. Click 'Save'.\n\n**Expected Behavior:**\nThe user's email address should be updated successfully.\n\n**Actual Behavior:**\nAn error message 'This email is already taken' is displayed.\n\n**Additional Context:**\nThe validation logic is likely checking the new email against all users, including the current user, which causes it to always find a match (itself). The validation should exclude the current user's ID."}
{"bad_prompt": "the user can't see the about page", "good_prompt": "### Bug Fix: The 'About Us' Link in the Header is Broken\n\n**Bug Description:**\nThe 'About Us' link in the main navigation header is broken.\n\n**Steps to Reproduce:**\n1. Go to any page on the website.\n2. Click the 'About Us' link in the header.\n\n**Expected Behavior:**\nThe user should be taken to the `/about` page.\n\n**Actual Behavior:**\nThe user sees a 404 Not Found error."}
{"bad_prompt": "the site crashes on Ik11", "good_prompt": "### Bug Fix: The Application Crashes on Internet Explorer 11\n\n**Bug Description:**\nThe entire application fails to load and crashes on Internet Explorer 11. The console shows a JavaScript error related to an unsupported ES6 feature.\n\n**Steps to Reproduce:**\n1. Open the website in an Internet Explorer 11 browser.\n2. Observe the blank page and the JavaScript error in the developer console.\n\n**Expected Behavior:**\nThe website should render correctly and be functional on Internet Explorer 11, even if with limited styling.\n\n**Actual Behavior:**\nThe page is blank, and a syntax error is thrown because of an unsupported feature (e.g., arrow functions, const/let).\n\n**Additional Context:**\nWe need to add a polyfill service or update our build process to transpile the JavaScript code to be compatible with IE11."}
{"bad_prompt": "Can you please the site map is out of datw", "good_prompt": "### Bug Fix: The `sitemap.xml` is Not Being Updated with New Pages\n\n**Bug Description:**\nThe `sitemap.xml` file is not being updated automatically when new blog posts or product pages are created. It is static and out of date, which is bad for SEO.\n\n**Steps to Reproduce:**\n1. Create a new blog post.\n2. After the site has been rebuilt, view the `sitemap.xml` file.\n\n**Expected Behavior:**\nThe `sitemap.xml` file should contain a URL for the newly created blog post.\n\n**Actual Behavior:**\nThe new blog post's URL is missing from the sitemap.\n\n**Additional Context:**\nThe script that generates the sitemap is likely not correctly fetching the list of all dynamic pages. It needs to be updated to query the database for all published posts and products during the build process."}
{"bad_prompt": "Can you please the user can't see the rss feed", "good_prompt": "### Bug Fix: The RSS Feed at `/rss.xml` is Returning a 404 Error\n\n**Bug Description:**\nNavigating to `/rss.xml` results in a 404 Not Found error.\n\n**Steps to Reproduce:**\n1. Go to `/rss.xml`.\n\n**Expected Behavior:**\nThe XML content of the RSS feed should be displayed.\n\n**Actual Behavior:**\nA 404 error is shown.\n\n**Additional Context:**\nThe endpoint or file generation process for the RSS feed is not correctly configured."}
{"bad_prompt": "the search is not working", "good_prompt": "### Bug Fix: Search Functionality Returns an Empty Result for Valid Queries\n\n**Bug Description:**\nThe search functionality on the `/search` page is not returning any results, even for queries that should match existing content. It always displays a 'No results found' message.\n\n**Steps to Reproduce:**\n1. Go to the `/search` page.\n2. Enter a valid search term that is known to be in the content (e.g., 'performance').\n3. Click the 'Search' button.\n\n**Expected Behavior:**\nThe page should display a list of search results that match the query.\n\n**Actual Behavior:**\nThe page displays the 'No results found' message."}
{"bad_prompt": "the site needs a prxvacy policy", "good_prompt": "### Legal: Create and Add Privacy Policy Page\n\n**Objective:**\nCreate a 'Privacy Policy' page to comply with legal requirements and inform users about our data practices.\n\n**Feature Description:**\nCreate a new static page at `/privacy`. The content for this page will be provided by the legal department. This page must be linked from the website footer.\n\n**Acceptance Criteria:**\n- A new page is created at `/privacy`.\n- The legal team's content is added to the page.\n- A link to the 'Privacy Policy' page is present in the site footer on all pages."}
{"bad_prompt": "i can't unsubscribe from the newsletter", "good_prompt": "### Bug Fix: The 'Unsubscribe' Link in Emails is Not Working\n\n**Bug Description:**\nWhen a user clicks the 'Unsubscribe' link in a marketing email, it leads to a 404 Not Found page. The unsubscribe functionality is completely broken.\n\n**Steps to Reproduce:**\n1. Receive a marketing email from our system.\n2. Click the 'Unsubscribe' link at the bottom of the email.\n\n**Expected Behavior:**\nThe user should be taken to a page where they can confirm that they want to unsubscribe from the newsletter.\n\n**Actual Behavior:**\nThe link leads to a 404 page.\n\n**Additional Context:**\nThe URL for the unsubscribe link being generated in our email templates is incorrect. The template needs to be updated with the correct URL for the unsubscribe page."}
{"bad_prompt": "Could you the user can't see the header", "good_prompt": "### Bug Fix: The Website Header is Missing on the Login Page\n\n**Bug Description:**\nThe main website header, which contains the logo and navigation, is missing on the login page.\n\n**Steps to Reproduce:**\n1. Navigate to the `/login` page.\n\n**Expected Behavior:**\nThe website header should be visible at the top of the page.\n\n**Actual Behavior:**\nThe header is missing.\n\n**Additional Context:**\nThe page template for the login page is likely using a different layout that excludes the main header component."}
{"bad_prompt": "We need to the site needs a favicon", "good_prompt": "### Feature: Add a Favicon to the Website\n\n**Objective:**\nImprove the site's branding and user experience by adding a favicon.\n\n**Feature Description:**\nAdd the necessary favicon files (`favicon.ico`, `apple-touch-icon.png`, etc.) to the public directory and link them in the `<head>` section of the main HTML template.\n\n**Acceptance Criteria:**\n- The website's favicon is displayed correctly in browser tabs.\n- The favicon is displayed when the site is saved as a bookmark or added to a mobile home screen."}
{"bad_prompt": "Can you please the user can't see the app-ads.txt file", "good_prompt": "### Advertising: Create an `app-ads.txt` File\n\n**Objective:**\nCreate an `app-ads.txt` file for our mobile app to declare the authorized sellers of our in-app ad inventory.\n\n**Feature Description:**\nCreate an `app-ads.txt` file in the root of the public directory. The file should contain the list of authorized ad sellers for our mobile app.\n\n**Acceptance Criteria:**\n- An `app-ads.txt` file is accessible at the root of the website.\n- The file contains the correct information for our authorized mobile ad sellers."}
{"bad_prompt": "Can you please xhe user can't see the images", "good_prompt": "### Bug Fix: Images Not Loading Due to CORS Policy Error\n\n**Bug Description:**\nImages that are hosted on our separate CDN domain are not loading on the website. The browser's developer console shows a Cross-Origin Resource Sharing (CORS) policy error.\n\n**Steps to Reproduce:**\n1. Go to the homepage.\n2. Observe that the main hero image is missing.\n3. Check the browser's developer console for errors.\n\n**Expected Behavior:**\nAll images should load correctly.\n\n**Actual Behavior:**\nImages are blocked by the browser due to a CORS error.\n\n**Additional Context:**\nThe CDN server needs to be configured to send the correct CORS headers, specifically `Access-Control-Allow-Origin: https://www.our-site.com`."}
{"bad_prompt": "the user can't reset their password", "good_prompt": "### Bug Fix: Password Reset Link is Invalid\n\n**Bug Description:**\nThe password reset link sent to users' emails is leading to a page that says 'This link is invalid or has expired', even when the user clicks it immediately.\n\n**Steps to Reproduce:**\n1. Go to the 'Forgot Password' page.\n2. Request a password reset.\n3. Click the link in the email that is sent.\n\n**Expected Behavior:**\nThe user should be taken to a page where they can set a new password.\n\n**Actual Behavior:**\nThe user is shown an 'Invalid link' error page.\n\n**Additional Context:**\nThe token generation or validation logic is flawed. The token being generated might not match the one being checked, or it is being invalidated prematurely."}
{"bad_prompt": "We need to the user can't see the robots.txt file", "good_prompt": "### SEO: Create a `robots.txt` File\n\n**Objective:**\nCreate a `robots.txt` file to provide instructions to web crawlers and bots about which pages on our site should or should not be crawled.\n\n**Feature Description:**\nCreate a `robots.txt` file in the root of the public directory. The initial configuration should allow all user agents to crawl the entire site and should point to our `sitemap.xml`.\n\n**Acceptance Criteria:**\n- A `robots.txt` file is accessible at the root of the website.\n- The file contains the following content:\n  ```\n  User-agent: *\n  Allow: /\n  Sitemap: https://www.our-site.com/sitemap.xml\n  ```"}
{"bad_prompt": "the user can't see the header", "good_prompt": "### Bug Fix: The Website Header is Missing on the Login Page\n\n**Bug Description:**\nThe main website header, which contains the logo and navigation, is missing on the login page.\n\n**Steps to Reproduce:**\n1. Navigate to the `/login` page.\n\n**Expected Behavior:**\nThe website header should be visible at the top of the page.\n\n**Actual Behavior:**\nThe header is missing.\n\n**Additional Context:**\nThe page template for the login page is likely using a different layout that excludes the main header component."}
